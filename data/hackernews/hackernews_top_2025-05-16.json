{
  "fetch_time": "2025-05-16 01:15:39",
  "stories": [
    {
      "by": "jbredeche",
      "descendants": 230,
      "id": 43997636,
      "kids": [
        43998447,
        44000636,
        44000717,
        43998721,
        43999073,
        43998761,
        43998640,
        43997668,
        43998661,
        44000850,
        43999963,
        43998764,
        43998808,
        43998409,
        43998840,
        43999616,
        43998917,
        43998684,
        43998395
      ],
      "score": 486,
      "time": 1747332366,
      "title": "Baby is healed with first personalized gene-editing treatment",
      "type": "story",
      "url": "https://www.nytimes.com/2025/05/15/health/gene-editing-personalized-rare-disorders.html"
    },
    {
      "by": "gnabgib",
      "descendants": 49,
      "id": 43999748,
      "kids": [
        43999955,
        44000820,
        44000124,
        44000152,
        44000559,
        44000728,
        44000282,
        44000530,
        44000308,
        44000274,
        44000123,
        44000224
      ],
      "score": 140,
      "time": 1747346239,
      "title": "A leap year check in three instructions",
      "type": "story",
      "url": "https://hueffner.de/falk/blog/a-leap-year-check-in-three-instructions.html"
    },
    {
      "by": "generichuman",
      "descendants": 4,
      "id": 44000759,
      "kids": [
        44000913,
        44000882,
        44000868
      ],
      "score": 16,
      "time": 1747356035,
      "title": "The Teal Programming Language",
      "type": "story",
      "url": "https://teal-language.org/"
    },
    {
      "by": "crawshaw",
      "descendants": 116,
      "id": 43998472,
      "kids": [
        43999072,
        43998994,
        43999803,
        44000320,
        43999382,
        44000221,
        44000849,
        44000846,
        44000292,
        44000143,
        44000632,
        44000013,
        43998743,
        43999731,
        44000465,
        43999457,
        43999463,
        43998980,
        43999627,
        43999200,
        43999501,
        44000299,
        43999393
      ],
      "score": 189,
      "time": 1747337624,
      "title": "The unreasonable effectiveness of an LLM agent loop with tool use",
      "type": "story",
      "url": "https://sketch.dev/blog/agent-loop"
    },
    {
      "by": "todsacerdoti",
      "descendants": 45,
      "id": 43999492,
      "kids": [
        44000516,
        44000113,
        44000347,
        43999922,
        44000207,
        44000777,
        44000686,
        44000091,
        44000499,
        44000399,
        44000055,
        44000782,
        44000411,
        44000358,
        44000253,
        44000775
      ],
      "score": 73,
      "time": 1747344430,
      "title": "Initialization in C++ is bonkers (2017)",
      "type": "story",
      "url": "https://blog.tartanllama.xyz/initialization-is-bonkers/"
    },
    {
      "by": "smartmic",
      "descendants": 11,
      "id": 43998707,
      "kids": [
        44000031,
        44000400,
        43999638,
        43999301,
        44000679,
        43999895
      ],
      "score": 79,
      "time": 1747339019,
      "title": "Tek – A music making program for 24-bit Unicode terminals",
      "type": "story",
      "url": "https://codeberg.org/unspeaker/tek"
    },
    {
      "by": "nullhole",
      "descendants": 1,
      "id": 44000700,
      "kids": [
        44000881
      ],
      "score": 37,
      "time": 1747355349,
      "title": "NASA keeps ancient Voyager 1 spacecraft alive with Hail Mary thruster fix",
      "type": "story",
      "url": "https://www.theregister.com/2025/05/15/voyager_1_survives_with_thruster_fix/"
    },
    {
      "by": "todsacerdoti",
      "descendants": 20,
      "id": 43998115,
      "kids": [
        44000934,
        44000132,
        44000290,
        43999043,
        43998957,
        44000141,
        43998691,
        43999590,
        43999311,
        43999190
      ],
      "score": 84,
      "time": 1747335235,
      "title": "The current state of TLA⁺ development",
      "type": "story",
      "url": "https://ahelwer.ca/post/2025-05-15-tla-dev-status/"
    },
    {
      "by": "FrasiertheLion",
      "descendants": 77,
      "id": 43996555,
      "kids": [
        44000877,
        43997573,
        43998097,
        44000412,
        43997706,
        43997958,
        43999475,
        43999157,
        43998974,
        43996775,
        44000606,
        43999237,
        43998431,
        43997436,
        43998138,
        43998391,
        43997430,
        43998186,
        43996784,
        43998835,
        43999075,
        43996795,
        43998874,
        43997415,
        43996664,
        43997566,
        43997581
      ],
      "score": 99,
      "text": "Hello HN! We’re Tanya, Sacha, Jules and Nate from Tinfoil: <a href=\"https:&#x2F;&#x2F;tinfoil.sh\">https:&#x2F;&#x2F;tinfoil.sh</a>. We host models and AI workloads on the cloud while guaranteeing zero data access and retention. This lets us run open-source LLMs like Llama, or Deepseek R1 on cloud GPUs without you having to trust us—or any cloud provider—with private data.<p>Since AI performs better the more context you give it, we think solving AI privacy will unlock more valuable AI applications, just how TLS on the Internet enabled e-commerce to flourish knowing that your credit card info wouldn&#x27;t be stolen by someone sniffing internet packets.<p>We come from backgrounds in cryptography, security, and infrastructure. Jules did his PhD in trusted hardware and confidential computing at MIT, and worked with NVIDIA and Microsoft Research on the same, Sacha did his PhD in privacy-preserving cryptography at MIT, Nate worked on privacy tech like Tor, and I (Tanya) was on Cloudflare&#x27;s cryptography team. We were unsatisfied with band-aid techniques like PII redaction (which is actually undesirable in some cases like AI personal assistants) or “pinky promise” security through legal contracts like DPAs. We wanted a real solution that replaced trust with provable security.<p>Running models locally or on-prem is an option, but can be expensive and inconvenient. Fully Homomorphic Encryption (FHE) is not practical for LLM inference for the foreseeable future. The next best option is using secure enclaves: a secure environment on the chip that no other software running on the host machine can access. This lets us perform LLM inference in the cloud while being able to prove that no one, not even Tinfoil or the cloud provider, can access the data. And because these security mechanisms are implemented in hardware, there is minimal performance overhead.<p>Even though we (Tinfoil) control the host machine, we do not have any visibility into the data processed inside of the enclave. At a high level, a secure enclave is a set of cores that are reserved, isolated, and locked down to create a sectioned off area. Everything that comes out of the enclave is encrypted: memory and network traffic, but also peripheral (PCIe) traffic to other devices such as the GPU. These encryptions are performed using secret keys that are generated inside the enclave during setup, which never leave its boundaries. Additionally, a “hardware root of trust” baked into the chip lets clients check security claims and verify that all security mechanisms are in place.<p>Up until recently, secure enclaves were only available on CPUs. But NVIDIA confidential computing recently added these hardware-based capabilities to their latest GPUs, making it possible to run GPU-based workloads in a secure enclave.<p>Here’s how it works in a nutshell:<p>1. We publish the code that should run inside the secure enclave to Github, as well as a hash of the compiled binary to a transparency log called Sigstore<p>2. Before sending data to the enclave, the client fetches a signed document from the enclave which includes a hash of the running code signed by the CPU manufacturer. It then verifies the signature with the hardware manufacturer to prove the hardware is genuine. Then the client fetches a hash of the source code from a transparency log (Sigstore) and checks that the hash equals the one we got from the enclave. This lets the client get verifiable proof that the enclave is running the exact code we claim.<p>3. With the assurance that the enclave environment is what we expect, the client sends its data to the enclave, which travels encrypted (TLS) and is only decrypted inside the enclave.<p>4. Processing happens entirely within this protected environment. Even an attacker that controls the host machine can’t access this data.\nWe believe making end-to-end verifiability a “first class citizen” is key. Secure enclaves have traditionally been used to remove trust from the cloud provider, not necessarily from the application provider. This is evidenced by confidential VM technologies such as Azure Confidential VM allowing ssh access by the host into the confidential VM. Our goal is to provably remove trust both from ourselves, aka the application provider, as well as the cloud provider.<p>We encourage you to be skeptical of our privacy claims. Verifiability is our answer. It’s not just us saying it’s private; the hardware and cryptography let you check. Here’s a guide that walks you through the verification process: <a href=\"https:&#x2F;&#x2F;docs.tinfoil.sh&#x2F;verification&#x2F;attestation-architecture\">https:&#x2F;&#x2F;docs.tinfoil.sh&#x2F;verification&#x2F;attestation-architectur...</a>.<p>People are using us for analyzing sensitive docs, building copilots for proprietary code, and processing user data in agentic AI applications without the privacy risks that previously blocked cloud AI adoption.<p>We’re excited to share Tinfoil with HN!<p>* Try the chat (<a href=\"https:&#x2F;&#x2F;tinfoil.sh&#x2F;chat\">https:&#x2F;&#x2F;tinfoil.sh&#x2F;chat</a>): It verifies attestation with an in-browser check. Free, limited messages, $20&#x2F;month for unlimited messages and additional models<p>* Use the API (<a href=\"https:&#x2F;&#x2F;tinfoil.sh&#x2F;inference\">https:&#x2F;&#x2F;tinfoil.sh&#x2F;inference</a>): OpenAI API compatible interface. $2 &#x2F; 1M tokens<p>* Take your existing Docker image and make it end to end confidential by deploying on Tinfoil. Here&#x27;s a demo of how you could use Tinfoil to run a deepfake detection service that could run securely on people&#x27;s private videos: <a href=\"https:&#x2F;&#x2F;www.youtube.com&#x2F;watch?v=_8hLmqoutyk\" rel=\"nofollow\">https:&#x2F;&#x2F;www.youtube.com&#x2F;watch?v=_8hLmqoutyk</a>. Note: This feature is not currently self-serve.<p>* Reach out to us at contact@tinfoil.sh if you want to run a different model or want to deploy a custom application, or if you just want to learn more!<p>Let us know what you think, we’d love to hear about your experiences and ideas in this space!",
      "time": 1747325940,
      "title": "Launch HN: Tinfoil (YC X25): Verifiable Privacy for Cloud AI",
      "type": "story"
    },
    {
      "by": "BSTRhino",
      "descendants": 22,
      "id": 43982892,
      "kids": [
        44000930,
        44000281,
        44000627,
        44000453,
        44000386,
        44000131,
        44000142,
        44000136,
        43989997
      ],
      "score": 30,
      "text": "For the past 3 years, I&#x27;ve been creating a new 2D game programming language where the multiplayer is completely automatic.\nThe idea is that someone who doesn&#x27;t even know what a &quot;remote procedure call&quot; is can make a multiplayer game by just setting `maxHumanPlayers=5` and it &quot;just works&quot;. The trick is the whole game simulation, including all the concurrent threads, can be executed deterministically and snapshotted for rollback netcode.<p>Normally when coding multiplayer you have to worry about following &quot;the rules of multiplayer&quot; like avoiding non-determinism, or not modifying entities your client has no authority over, but all that is just way too hard for someone who just wants to get straight into making games. So my idea was that if we put multiplayer into the fabric of the programming language, below all of your code, we can make the entire language multiplayer-safe. In Easel the entire world is hermetically sealed - there is nothing you can do to break multiplayer, which means it suits someone who just wants to make games and not learn all about networking. I&#x27;ve had people make multiplayer games on their first day of coding with Easel because you basically cannot go wrong.<p>There were so many other interesting things that went into this project. It&#x27;s written in Rust and compiled to WebAssembly because I think that the zero-download nature of the web is a better way of getting many people together into multiplayer games. The networking is done by relaying peer-to-peer connections through Cloudflare Calls, which means Cloudflare collates the messages and reduces the bandwidth requirements for the clients so games can have more players.<p>I also took inspiration from my experience React when creating this language, here&#x27;s how you would make a ship change color from green to red as it loses health:<p>`with Health {  \n  ImageSprite(@ship.svg, color=(Health &#x2F; MaxHealth).BlendHue(#ff6600, #66ff00))  \n}`<p>There is a lot of hidden magic that makes the code snippet above work - it creates a async coroutine that loops each time Health sends a signal, and the ImageSprite has an implicit ID assigned by the compiler so it knows which one to update each time around the loop. All of this lets you work at a higher level of abstraction and, in my opinion, make code that is easier to understand.<p>Speaking of async coroutines, my belief is that they don&#x27;t get used enough in other game engines because their lifetimes are not tied to anything - you have this danger where they can outlive their entities and crash your game. In Easel each async task lives and dies with its entity, which is why we call them behaviors. Clear lifetime semantics makes it safe to use async tasks everywhere in Easel, which is why Easel games often consist of thousands of concurrently-executing behaviors. In my opinion, this untangles your code and makes it easier to understand.<p>That&#x27;s just the beginning, there is even more to talk about, it has been a long journey these past 3 years, but I will stop there for now! I hope that, even for those people who don&#x27;t care about the multiplayer capabilities of Easel, they just find it an interesting proposal of how a next-generation game programming language could work.<p>The Editor runs in your web browser and is free to play around with, so I would love to see more people try out making some games! Click the &quot;Try it out&quot; button to open the Sample Project and see if you can change the code to achieve the suggested tasks listed in the README.",
      "time": 1747218678,
      "title": "Show HN: Easel – Code multiplayer games like singleplayer",
      "type": "story",
      "url": "https://easel.games/about"
    },
    {
      "by": "anomancer",
      "descendants": 39,
      "id": 43995005,
      "kids": [
        43996375,
        43998304,
        43998388,
        43996478,
        43998229,
        43995554,
        43995096,
        43995961,
        43996850,
        43995717,
        43997805,
        43996819,
        43995739,
        43996818,
        43996810,
        43996721,
        43995861,
        43995661,
        43995682,
        43995416,
        43995306,
        43996588,
        43997695
      ],
      "score": 216,
      "time": 1747316497,
      "title": "A Tiny Boltzmann Machine",
      "type": "story",
      "url": "https://eoinmurray.info/boltzmann-machine"
    },
    {
      "by": "Deeg9rie9usi",
      "descendants": 10,
      "id": 43970057,
      "kids": [
        44000508,
        44000876,
        44000674,
        44000483,
        44000647,
        44000512,
        44000713
      ],
      "score": 17,
      "time": 1747117183,
      "title": "GTK Krell Monitors",
      "type": "story",
      "url": "https://gkrellm.srcbox.net/"
    },
    {
      "by": "jakevoytko",
      "descendants": 276,
      "id": 43994765,
      "kids": [
        43995949,
        43995227,
        43997296,
        43995205,
        43995141,
        43996457,
        44000066,
        43995352,
        43995284,
        43995234,
        43995180,
        43996240,
        43995332,
        43996950,
        43996552,
        43995389,
        43995322,
        43995317,
        43995179,
        43998110,
        43996590,
        43995813,
        43996836,
        43999607,
        43996381,
        43995799,
        43998868,
        43998709,
        43997206,
        43996114,
        43997625,
        43997110,
        43999372,
        43997371,
        43995887,
        43995194,
        43997162,
        43995290,
        43996809,
        43997877,
        44000236,
        43997927,
        43995268,
        43997288,
        43995109,
        43999732,
        43996594,
        43997748,
        43995737,
        43995204,
        43996564
      ],
      "score": 298,
      "time": 1747315228,
      "title": "Malicious compliance by booking an available meeting room",
      "type": "story",
      "url": "https://www.clientserver.dev/p/malicious-compliance-by-booking-an"
    },
    {
      "by": "luu",
      "descendants": 10,
      "id": 43998423,
      "kids": [
        44000756,
        44000451,
        43999683,
        44000102,
        44000306,
        43999750,
        44000327,
        44000322,
        43999714
      ],
      "score": 72,
      "time": 1747337281,
      "title": "Refactoring Clojure",
      "type": "story",
      "url": "https://www.orsolabs.com/post/refactoring-clojure-1/"
    },
    {
      "by": "marv1nnnnn",
      "descendants": 41,
      "id": 43994987,
      "kids": [
        43995844,
        43995539,
        43995997,
        43995491,
        44000370,
        43996047,
        43996679,
        43997035,
        43997694,
        43995382,
        43997445,
        43995614,
        43996477,
        43996369,
        43996428,
        43995307,
        43998788,
        43997811
      ],
      "score": 150,
      "time": 1747316404,
      "title": "Show HN: Min.js style compression of tech docs for LLM context",
      "type": "story",
      "url": "https://github.com/marv1nnnnn/llm-min.txt"
    },
    {
      "by": "rbanffy",
      "descendants": 41,
      "id": 43998008,
      "kids": [
        44000368,
        43998541,
        44000587,
        44000749,
        43998475,
        43999408,
        43999659,
        43998569,
        43998950,
        43998854,
        43999386,
        43998731
      ],
      "score": 59,
      "time": 1747334623,
      "title": "Dr. Dobb's Journal Interviews Jef Raskin (1986)",
      "type": "story",
      "url": "https://computeradsfromthepast.substack.com/p/dr-dobbs-journal-interviews-jef-raskin"
    },
    {
      "by": "MinimalAction",
      "descendants": 151,
      "id": 43996431,
      "kids": [
        43998232,
        43998345,
        43998126,
        43998166,
        43997860,
        43998463,
        43997778,
        43998278,
        43998530,
        44000698,
        43998417,
        43998368,
        43998760,
        43998385,
        44000171,
        44000393,
        43998076,
        43998231,
        43999149,
        43998456,
        43998051,
        43999427,
        43998121,
        44000027,
        44000256,
        43998521,
        43997907,
        43998120,
        43998527,
        43998649,
        44000678,
        43998507,
        43998484,
        43998247,
        43998325,
        43998616,
        43999046,
        43998135,
        44000611,
        43998087,
        43999002,
        43998239,
        43998187,
        43999932,
        44000067,
        43999017,
        43998694,
        43998943,
        43998105,
        43999077,
        43998724,
        43998940,
        43998320,
        43998257,
        43998583,
        43998192,
        43999134,
        43998069
      ],
      "score": 331,
      "time": 1747325122,
      "title": "I don't like NumPy",
      "type": "story",
      "url": "https://dynomight.net/numpy/"
    },
    {
      "by": "pompidoo",
      "descendants": 75,
      "id": 43996251,
      "kids": [
        43998321,
        44000140,
        44000259,
        44000043,
        43999519,
        43997410,
        43997768,
        43998814,
        43997218,
        43997642,
        43998699,
        43997346,
        43997723,
        43997335,
        43997520,
        43997364
      ],
      "score": 77,
      "text": "I developed a device that turns an Airtag on and off at specific intervals. \nCurrent Airtags are detectable right away and cannot be used to track stolen property. That device allows you to hide an Airtag in your car, for example, and someone that steals your car will not be able to use some app to detect it. \nThe Airtag will also not warn the thief of its presence. After some hours, the Airtag turns on again and you can find out its location. It’s not foolproof, as the timing has to be right, but still useful.<p>What do you think?",
      "time": 1747323986,
      "title": "Show HN: Undetectag, track stolen items with AirTag",
      "type": "story",
      "url": "https://undetectag.com/"
    },
    {
      "by": "markisus",
      "descendants": 44,
      "id": 43994827,
      "kids": [
        43995572,
        43995052,
        43995289,
        43995751,
        43995165,
        43998356,
        43998460,
        43998531,
        43995521,
        43997645,
        43995399,
        43995314,
        43994970,
        43995471,
        43998566,
        43995676,
        43995211,
        43995029
      ],
      "score": 121,
      "text": "LiveSplat is a system for turning RGBD camera streams into Gaussian splat scenes in real-time. The system works by passing all the RGBD frames into a feed forward neural net that outputs the current scene as Gaussian splats. These splats are then rendered in real-time. I&#x27;ve put together a demo video at the link above.",
      "time": 1747315609,
      "title": "Show HN: Real-Time Gaussian Splatting",
      "type": "story",
      "url": "https://github.com/axbycc/LiveSplat"
    },
    {
      "by": "goranmoomin",
      "descendants": 5,
      "id": 43988753,
      "kids": [
        44000567,
        43999429,
        43999132,
        43999694
      ],
      "score": 34,
      "time": 1747253963,
      "title": "The Scalar Select Anti-Pattern",
      "type": "story",
      "url": "https://matklad.github.io/2025/05/14/scalar-select-aniti-pattern.html"
    },
    {
      "by": "ddadon10",
      "descendants": 2,
      "id": 43971678,
      "kids": [
        43999797,
        44000272,
        44000196
      ],
      "score": 16,
      "time": 1747135249,
      "title": "ML-Enhanced Code Completion Improves Developer Productivity (2022)",
      "type": "story",
      "url": "https://research.google/blog/ml-enhanced-code-completion-improves-developer-productivity/"
    },
    {
      "by": "Kerrick",
      "descendants": 19,
      "id": 43997286,
      "kids": [
        43999422,
        43999592,
        43999885,
        43999921,
        43999615,
        43999538,
        44000810,
        44000158,
        44000596,
        43999530,
        43999555,
        43999815,
        43997291
      ],
      "score": 34,
      "time": 1747330203,
      "title": "Stop using REST for state synchronization (2024)",
      "type": "story",
      "url": "https://www.mbid.me/posts/stop-using-rest-for-state-synchronization/"
    },
    {
      "by": "Mattiommi",
      "id": 43996980,
      "score": 1,
      "time": 1747328407,
      "title": "Fetii (YC S22) Is Hiring",
      "type": "job",
      "url": "https://www.ycombinator.com/companies/fetii/jobs/QDjleWs-senior-operations-manager-fetii"
    },
    {
      "by": "gpi",
      "descendants": 316,
      "id": 43996307,
      "kids": [
        43998293,
        43996769,
        43997944,
        43999086,
        43997650,
        43997464,
        43998459,
        43996432,
        43999084,
        43996123,
        43998578,
        43997501,
        43996627,
        43997245,
        43996610,
        43996946,
        43998147,
        43996361,
        44000050,
        43998103,
        43997582,
        43996354,
        43994703,
        43997871,
        43996572,
        43998212,
        43996671,
        43996993,
        43996394,
        43996445,
        44000331,
        44000653,
        44000650,
        43996631,
        43994606,
        43994952,
        43996568,
        43998920,
        43994577,
        43996984,
        43996540,
        43998327,
        43997462,
        43994953,
        43996848,
        43996825
      ],
      "score": 281,
      "time": 1747324341,
      "title": "Coinbase says hackers bribed staff to steal customer data, demanding $20M ransom",
      "type": "story",
      "url": "https://www.cnbc.com/2025/05/15/coinbase-says-hackers-bribed-staff-to-steal-customer-data-and-are-demanding-20-million-ransom.html"
    },
    {
      "by": "sebg",
      "descendants": 35,
      "id": 43994333,
      "kids": [
        43997640,
        43995517,
        43997315,
        43996788,
        43996171,
        43996087,
        43995998,
        43995153,
        44000444
      ],
      "score": 114,
      "time": 1747312335,
      "title": "Pathfinding",
      "type": "story",
      "url": "https://juhrjuhr.itch.io/deep-space-exploitation/devlog/945428/9-pathfinding"
    },
    {
      "by": "davydog187",
      "descendants": 65,
      "id": 43972485,
      "kids": [
        43995411,
        43997882,
        43995421,
        43996224,
        43998344,
        43996339,
        43997955,
        43995221,
        43997613,
        43997427,
        43999285,
        43996391,
        43997108,
        43997507,
        43996779,
        43995320,
        43995362
      ],
      "score": 189,
      "time": 1747141431,
      "title": "Lua for Elixir",
      "type": "story",
      "url": "https://davelucia.com/blog/lua-elixir"
    },
    {
      "by": "Tomte",
      "descendants": 13,
      "id": 43996031,
      "kids": [
        43996268,
        43996192,
        43999374,
        43998088
      ],
      "score": 46,
      "time": 1747322824,
      "title": "Wavelet Trees: An Introduction (2011)",
      "type": "story",
      "url": "https://www.alexbowe.com/wavelet-trees/"
    },
    {
      "by": "GavCo",
      "descendants": 11,
      "id": 43970768,
      "kids": [
        43996999,
        43997571
      ],
      "score": 44,
      "time": 1747124950,
      "title": "The Fastest Way yet to Color Graphs",
      "type": "story",
      "url": "https://www.quantamagazine.org/the-fastest-way-yet-to-color-graphs-20250512/"
    },
    {
      "by": "ivanalemunioz",
      "descendants": 0,
      "id": 43977648,
      "score": 10,
      "text": "Hey HN! I&#x27;m Ivan. I&#x27;ve been working on a solution to visually debug my own <a href=\"https:&#x2F;&#x2F;pptr.dev&#x2F;\" rel=\"nofollow\">https:&#x2F;&#x2F;pptr.dev&#x2F;</a> crashes, and this week I opened it to the public: <a href=\"https:&#x2F;&#x2F;buglesstack.com&#x2F;\" rel=\"nofollow\">https:&#x2F;&#x2F;buglesstack.com&#x2F;</a>.<p>If you have any questions or suggestions to improve it, feel free to contact me at ivan@buglesstack.com.<p>Thanks for reading! &lt;3",
      "time": 1747169877,
      "title": "Show HN: I made a platform to debug Puppeteer (JS) crashes visually",
      "type": "story",
      "url": "https://buglesstack.com/"
    },
    {
      "by": "dcminter",
      "descendants": 3,
      "id": 43973964,
      "kids": [
        44000792,
        44000044,
        43980278,
        44000449
      ],
      "score": 25,
      "time": 1747149866,
      "title": "A Tale of a Trailing Dot (2022)",
      "type": "story",
      "url": "https://daniel.haxx.se/blog/2022/05/12/a-tale-of-a-trailing-dot/"
    },
    {
      "by": "sph",
      "descendants": 2,
      "id": 43971185,
      "kids": [
        44000385,
        44000552
      ],
      "score": 8,
      "time": 1747129075,
      "title": "Comparing floating-point numbers (2012)",
      "type": "story",
      "url": "https://randomascii.wordpress.com/2012/02/25/comparing-floating-point-numbers-2012-edition/"
    },
    {
      "by": "0xKelsey",
      "descendants": 119,
      "id": 43971177,
      "kids": [
        43992762,
        43992561,
        43996070,
        43993911,
        43992921,
        43998290,
        43993723,
        43992806,
        43993116,
        43999366,
        43992599,
        43995103,
        43992955,
        43995365,
        43992488,
        43993887
      ],
      "score": 237,
      "time": 1747128943,
      "title": "Working on complex systems: What I learned working at Google",
      "type": "story",
      "url": "https://www.thecoder.cafe/p/complex-systems"
    },
    {
      "by": "benbreen",
      "descendants": 6,
      "id": 43996796,
      "kids": [
        43998678,
        43997688,
        43997578,
        43997401,
        43998191
      ],
      "score": 31,
      "time": 1747327400,
      "title": "Onfim's world: Child artists in history",
      "type": "story",
      "url": "https://resobscura.substack.com/p/onfims-world-medieval-child-artists"
    },
    {
      "by": "kadrek",
      "descendants": 4,
      "id": 43995144,
      "kids": [
        44000000,
        43999965
      ],
      "score": 61,
      "time": 1747317407,
      "title": "Demystifying Ruby: It's all about threads (2024)",
      "type": "story",
      "url": "https://blog.papey.fr/post/07-demystifying-ruby-01/"
    },
    {
      "by": "jgwil2",
      "descendants": 97,
      "id": 43997830,
      "kids": [
        43997901,
        43998241,
        44000405,
        44000325,
        43998302,
        43999574,
        43998279,
        43998887,
        43998504,
        43998140,
        43998315,
        43999265,
        43998414,
        44000089,
        43998365,
        43998274,
        43999866,
        43998877
      ],
      "score": 159,
      "time": 1747333589,
      "title": "Harvard Law paid $27 for a copy of Magna Carta. It's an original",
      "type": "story",
      "url": "https://www.nytimes.com/2025/05/15/world/europe/harvard-law-magna-carta-original.html"
    },
    {
      "by": "mailyk",
      "descendants": 12,
      "id": 43996243,
      "kids": [
        43998910,
        43997961,
        43997545,
        43997644,
        43996987,
        43999625
      ],
      "score": 33,
      "time": 1747323943,
      "title": "Model Organisms Are Not Static",
      "type": "story",
      "url": "https://www.asimov.press/p/model-organisms-are-not-static"
    },
    {
      "by": "ayushrodrigues",
      "descendants": 39,
      "id": 43995122,
      "kids": [
        43995615,
        43995613,
        43995331,
        43995448,
        43995601,
        43995458,
        43995238,
        43995439,
        43995693,
        43995648,
        43995922,
        43995721
      ],
      "score": 34,
      "time": 1747317263,
      "title": "How we made billing backendless",
      "type": "story",
      "url": "https://useautumn.com/blog/backendless"
    },
    {
      "by": "lukastyrychtr",
      "descendants": 22,
      "id": 43954858,
      "kids": [
        43995915,
        43996106,
        43995796,
        43996392,
        43996879,
        43996643,
        43997279,
        43997500
      ],
      "score": 53,
      "time": 1746980899,
      "title": "A Rust API Inspired by Python, Powered by Serde",
      "type": "story",
      "url": "https://ohadravid.github.io/posts/2025-05-serde-reflect/"
    },
    {
      "by": "surprisetalk",
      "descendants": 255,
      "id": 43991396,
      "kids": [
        43992243,
        43994459,
        43992785,
        43993092,
        43991582,
        43991857,
        43993339,
        43994956,
        43993148,
        44000389,
        43993602,
        43998041,
        43991964,
        43991997,
        43993074,
        43993086,
        43991603,
        43999531,
        43993820,
        43991969,
        43991900,
        43994249,
        43991548,
        43992088,
        43992026,
        43992111,
        43993454,
        43992752,
        43993725,
        43992497,
        43992483,
        43991750,
        43992849,
        43992567,
        43996565,
        43993153,
        43996154,
        43993229,
        43994310,
        43992218,
        43991489,
        43992820,
        43993018,
        43992000,
        43992512,
        43992393,
        43991898,
        43997773,
        43991514,
        43993484,
        43993306,
        43996516,
        43992159,
        43994958,
        43993892,
        43994573,
        43991697,
        43992619,
        43992462,
        43992297,
        43991443,
        43992637,
        43992263,
        43991683,
        43991543,
        43994851,
        43991967,
        43992365
      ],
      "score": 664,
      "time": 1747277839,
      "title": "Human",
      "type": "story",
      "url": "https://quarter--mile.com/Human"
    },
    {
      "by": "mikerg87",
      "descendants": 125,
      "id": 43971853,
      "kids": [
        43994284,
        43991827,
        43995434,
        43996072,
        43994733,
        43992857,
        43993002,
        43993813,
        43992459,
        43994047,
        43996580,
        43995918,
        43997510,
        43996767,
        43992290,
        43997338,
        43993677,
        43999332,
        43998146,
        43997709,
        43994546,
        43995657,
        43995698,
        43993680,
        43994559,
        43998751,
        43995733,
        43993902,
        43994506,
        43992270,
        43991992,
        43992844,
        43995407,
        43992728,
        43994091,
        43999316,
        43994959,
        43993991,
        43994465,
        43993687,
        43994242,
        43997343,
        43995136,
        43994634,
        43994616,
        43993550,
        43991861,
        43992665,
        43992279,
        43992607
      ],
      "score": 608,
      "time": 1747136996,
      "title": "Internet Artifacts",
      "type": "story",
      "url": "https://neal.fun/internet-artifacts/"
    },
    {
      "by": "teleforce",
      "descendants": 0,
      "id": 44000523,
      "score": 6,
      "time": 1747353448,
      "title": "Asus' Latest NUC Mini PC Is Exceptionally Powerful",
      "type": "story",
      "url": "https://www.howtogeek.com/asus-nuc-15-pro-plus-debut/"
    },
    {
      "by": "anticorporate",
      "descendants": 91,
      "id": 43995302,
      "kids": [
        43995892,
        43996982,
        43997186,
        43995753,
        43995832,
        43996288,
        43996062,
        43998769,
        43996443,
        43996340,
        43996533,
        43996231,
        43998899,
        43997917,
        43995991,
        43997554
      ],
      "score": 167,
      "time": 1747318405,
      "title": "California sent residents' personal health data to LinkedIn",
      "type": "story",
      "url": "https://themarkup.org/pixel-hunt/2025/04/28/how-california-sent-residents-personal-health-data-to-linkedin"
    },
    {
      "by": "edunteman",
      "descendants": 50,
      "id": 43988381,
      "kids": [
        43991197,
        43989752,
        43992832,
        43988789,
        43990420,
        43989430,
        43989033,
        43988590,
        43994379,
        43989862,
        43991632,
        43989464,
        43991958,
        43989416,
        43989296,
        43989110,
        43988980,
        43989382,
        43990883,
        43992034,
        43990185,
        43992435,
        43994344
      ],
      "score": 209,
      "text": "Hi HN! Erik here from Pig.dev, and today I&#x27;d like to share a new project we&#x27;ve just open sourced:<p>Muscle Mem is an SDK that records your agent&#x27;s tool-calling patterns as it solves tasks, and will deterministically replay those learned trajectories whenever the task is encountered again, falling back to agent mode if edge cases are detected. Like a JIT compiler, for behaviors.<p>At Pig, we built computer-use agents for automating legacy Windows applications (healthcare, lending, manufacturing, etc).<p>A recurring theme we ran into was that businesses <i>already</i> had RPA (pure-software scripts), and it worked for them in most cases. The pull to agents as an RPA alternative was <i>not</i> to have an infinitely flexible &quot;AI Employees&quot; as tech Twitter&#x2F;X may want you to think, but simply because their RPA breaks under occasional edge-cases and agents can gracefully handle those cases.<p>Using a pure-agent approach proved to be highly wasteful. Window&#x27;s accessibility APIs are poor, so you&#x27;re generally stuck using pure-vision agents, which can run around $40&#x2F;hr in token costs and take 5x longer than a human to perform a workflow. At this point, you&#x27;re better off hiring a human.<p>The goal of Muscle-Mem is to get LLMs out of the hot path of repetitive automations, intelligently swapping between script-based execution for repeat cases, and agent-based automations for discovery and self-healing.<p>While inspired by computer-use environments, Muscle Mem is designed to generalize to any automation performing discrete tasks in dynamic environments. It took a great deal of thought to figure out an API that generalizes, which I cover more deeply in this blog:\n<a href=\"https:&#x2F;&#x2F;erikdunteman.com&#x2F;blog&#x2F;muscle-mem&#x2F;\" rel=\"nofollow\">https:&#x2F;&#x2F;erikdunteman.com&#x2F;blog&#x2F;muscle-mem&#x2F;</a><p>Check out the repo, consider giving it a star, or dive deeper into the above blog. I look forward to your feedback!",
      "time": 1747251506,
      "title": "Show HN: Muscle-Mem, a behavior cache for AI agents",
      "type": "story",
      "url": "https://github.com/pig-dot-dev/muscle-mem"
    },
    {
      "by": "Fysi",
      "descendants": 253,
      "id": 43985489,
      "kids": [
        43986909,
        43986056,
        43987287,
        43986870,
        43987447,
        43992332,
        43986283,
        43987310,
        43990118,
        43985993,
        43985878,
        43990366,
        43990645,
        43992099,
        43992287,
        43997851,
        43986661,
        43986854,
        43986308,
        43988871,
        43989248,
        43998445,
        43985774,
        43989197,
        43986867,
        43988235,
        43989257,
        43988124,
        43988245,
        43987306,
        43991589,
        43987369,
        43987081,
        43989797,
        43986280,
        43987029,
        43987550,
        43991663,
        43989150,
        43991234,
        43986216,
        43989656,
        43988596,
        43985797,
        43989343,
        43991986,
        43989314,
        43988308,
        43998734,
        43988798,
        43992980,
        43990728,
        43987856,
        43987286,
        43987833,
        43988718,
        43991840,
        43990800,
        43986886,
        43985799,
        43988727,
        43986627,
        43994681,
        43985790,
        43985928,
        43988485
      ],
      "score": 966,
      "text": "See also <a href=\"https:&#x2F;&#x2F;www.nature.com&#x2F;articles&#x2F;d41586-025-01523-z\" rel=\"nofollow\">https:&#x2F;&#x2F;www.nature.com&#x2F;articles&#x2F;d41586-025-01523-z</a> (<a href=\"https:&#x2F;&#x2F;archive.is&#x2F;NBaXE\" rel=\"nofollow\">https:&#x2F;&#x2F;archive.is&#x2F;NBaXE</a>)",
      "time": 1747235415,
      "title": "AlphaEvolve: A Gemini-powered coding agent for designing advanced algorithms",
      "type": "story",
      "url": "https://deepmind.google/discover/blog/alphaevolve-a-gemini-powered-coding-agent-for-designing-advanced-algorithms/"
    },
    {
      "by": "onychomys",
      "descendants": 1,
      "id": 43998945,
      "kids": [
        43999630
      ],
      "score": 21,
      "time": 1747340661,
      "title": "Farmers fear dingoes are eating livestock but poo tells an unexpected story",
      "type": "story",
      "url": "https://theconversation.com/farmers-fear-dingoes-are-eating-their-livestock-but-predator-poo-tells-an-unexpected-story-254787"
    },
    {
      "by": "simonpure",
      "descendants": 239,
      "id": 43991256,
      "kids": [
        43991384,
        43991414,
        43993997,
        43991918,
        43991439,
        43992299,
        43992904,
        43993903,
        43991450,
        43995762,
        43994259,
        43991471,
        43992035,
        43992664,
        43992221,
        43992373,
        43993570,
        43993405,
        43992380,
        43993685,
        43991401,
        43993019,
        43995292,
        43992436,
        43994423,
        43991627,
        43994302,
        43991411,
        43991415,
        43994912,
        43991779,
        43991393
      ],
      "score": 349,
      "time": 1747276122,
      "title": "LLMs get lost in multi-turn conversation",
      "type": "story",
      "url": "https://arxiv.org/abs/2505.06120"
    },
    {
      "by": "colinprince",
      "descendants": 0,
      "id": 43999744,
      "score": 10,
      "time": 1747346226,
      "title": "Decades-long mystery of ginger cats revealed",
      "type": "story",
      "url": "https://www.bbc.com/news/articles/cwywdjjgvqqo"
    },
    {
      "by": "PaulHoule",
      "descendants": 0,
      "id": 43973887,
      "score": 9,
      "time": 1747149463,
      "title": "Radiance Contrasts at Possible Lunar Water Ice Exposures Seen by ShadowCam",
      "type": "story",
      "url": "https://iopscience.iop.org/article/10.3847/PSJ/adb8d1"
    },
    {
      "by": "mrbigbob",
      "descendants": 4,
      "id": 43998563,
      "kids": [
        43999033,
        43999176
      ],
      "score": 33,
      "time": 1747338203,
      "title": "Google restores Nextcloud users file access on Android",
      "type": "story",
      "url": "https://arstechnica.com/gadgets/2025/05/nextcloud-accuses-google-of-big-tech-gatekeeping-over-android-app-permissions/"
    },
    {
      "by": "c420",
      "descendants": 1,
      "id": 43999460,
      "kids": [
        43999851
      ],
      "score": 24,
      "time": 1747344122,
      "title": "Dolphin whistle decoders win $100k interspecies communication prize",
      "type": "story",
      "url": "https://www.theguardian.com/world/2025/may/15/us-scientists-who-deciphered-dolphin-whistles-win-prize-for-animal-communication"
    },
    {
      "by": "Luc",
      "descendants": 56,
      "id": 43997728,
      "kids": [
        43999365,
        43998650,
        43998377,
        43998789,
        43998681,
        43998825,
        43999222,
        43998821,
        43998822,
        43999404,
        43998956
      ],
      "score": 40,
      "time": 1747332928,
      "title": "Improving Naval Ship Acquisition",
      "type": "story",
      "url": "https://www.construction-physics.com/p/fixing-naval-ship-acquisition"
    },
    {
      "by": "thm",
      "descendants": 20,
      "id": 43997812,
      "kids": [
        44000897,
        44000161,
        43999850,
        44000663,
        44000095,
        44000086,
        43999990
      ],
      "score": 50,
      "time": 1747333467,
      "title": "If AI is so good at coding where are the open source contributions?",
      "type": "story",
      "url": "https://pivot-to-ai.com/2025/05/13/if-ai-is-so-good-at-coding-where-are-the-open-source-contributions/"
    },
    {
      "by": "samclemens",
      "descendants": 16,
      "id": 43996597,
      "kids": [
        43997207,
        44000703,
        43999575,
        43996612,
        43997365,
        43998441,
        43996873,
        43997633,
        43996698,
        43997570
      ],
      "score": 19,
      "time": 1747326197,
      "title": "Gateway Books: The lessons of a defunct canon",
      "type": "story",
      "url": "https://thepointmag.com/examined-life/gateway-books/"
    },
    {
      "by": "amatheus",
      "descendants": 55,
      "id": 43972004,
      "kids": [
        43995002,
        43994275,
        43993629,
        43995038,
        43994430,
        43997858,
        43993998,
        43995112,
        43993726,
        43995469,
        43994402,
        43997154,
        43994853,
        43994203,
        43996969,
        43996730,
        43995443,
        43994637
      ],
      "score": 91,
      "time": 1747138223,
      "title": "Fast machines, slow machines (2023)",
      "type": "story",
      "url": "https://jmmv.dev/2023/06/fast-machines-slow-machines.html"
    },
    {
      "by": "_kush",
      "descendants": 326,
      "id": 43983871,
      "kids": [
        43990206,
        43985557,
        43986653,
        43984442,
        43986598,
        43984462,
        43985366,
        43985947,
        43998106,
        43984729,
        43984458,
        43984491,
        43989443,
        43984652,
        43989281,
        43987563,
        43987108,
        43987686,
        43987201,
        43984959,
        43986839,
        43985374,
        43984626,
        43987851,
        43986063,
        43984909,
        43989793,
        43984762,
        43987974,
        43988280,
        43985332,
        43985182,
        43990243,
        43988807,
        43994535,
        43985609,
        43984633,
        43986177,
        43985320,
        43984932,
        43985298,
        43986964,
        43988239,
        43985108,
        43991387,
        43987911,
        43984429
      ],
      "score": 753,
      "time": 1747226799,
      "title": "What is HDR, anyway?",
      "type": "story",
      "url": "https://www.lux.camera/what-is-hdr/"
    },
    {
      "by": "thenaturalist",
      "descendants": 4,
      "id": 44000599,
      "kids": [
        44000812,
        44000787,
        44000621
      ],
      "score": 14,
      "time": 1747354279,
      "title": "My husband was laid off from Microsoft by an algorithm – after 25 years",
      "type": "story",
      "url": "https://old.reddit.com/r/TrueOffMyChest/comments/1knj1sd/my_husband_was_laid_off_from_microsoft_by_an/"
    },
    {
      "by": "michalpleban",
      "descendants": 63,
      "id": 43971068,
      "kids": [
        43993962,
        43993558,
        43997810,
        43994373,
        43993607,
        43994200,
        43975038,
        43993658,
        43993883,
        43993296
      ],
      "score": 98,
      "time": 1747127947,
      "title": "Lightweight open source reCaptcha alternative",
      "type": "story",
      "url": "https://github.com/altcha-org/altcha"
    },
    {
      "by": "todsacerdoti",
      "descendants": 7,
      "id": 43992100,
      "kids": [
        43994092,
        43997238,
        43998065
      ],
      "score": 57,
      "time": 1747286683,
      "title": "Moving Forth: a series on writing Forth kernels",
      "type": "story",
      "url": "https://www.bradrodriguez.com/papers/index.html"
    },
    {
      "by": "mindcrime",
      "descendants": 29,
      "id": 43971941,
      "kids": [
        43991064,
        43990986,
        43990675,
        43992487,
        43991533,
        43990910
      ],
      "score": 71,
      "time": 1747137773,
      "title": "NASA Stennis's first open source software",
      "type": "story",
      "url": "https://www.nasa.gov/centers-and-facilities/stennis/stennis-first-open-source-software/"
    },
    {
      "by": "thm",
      "descendants": 64,
      "id": 43996419,
      "kids": [
        43998745,
        43997607,
        43997418,
        43997256,
        43997269,
        43997701,
        43997681,
        43997226,
        43997929,
        43997480,
        43997439,
        43997762
      ],
      "score": 57,
      "time": 1747325012,
      "title": "Walmart is preparing to welcome its next customer: the AI shopping agent",
      "type": "story",
      "url": "https://www.wsj.com/articles/walmart-is-preparing-to-welcome-its-next-customer-the-ai-shopping-agent-6659ef18"
    },
    {
      "by": "ripe",
      "descendants": 14,
      "id": 43999666,
      "kids": [
        44000239,
        44000204,
        43999673,
        43999749
      ],
      "score": 14,
      "time": 1747345711,
      "title": "Florida Just Banned Fluoride from Public Water",
      "type": "story",
      "url": "https://www.nytimes.com/2025/05/15/us/politics/florida-fluoride-water-ban.html"
    },
    {
      "by": "heygem-ai-new",
      "descendants": 1,
      "id": 43994791,
      "kids": [
        44000467
      ],
      "score": 20,
      "text": "We’ve open-sourced Heygem, a fast and free alternative to Heygen. It generates photorealistic AI avatar videos from a photo and voice — no training, no watermark, runs locally on 8GB GPUs, and supports 4K output.<p>Ideal for developers building AI avatar pipelines with minimal setup. Built by the team behind duix.com. Feedback and contributions welcome!",
      "time": 1747315412,
      "title": "Show HN: Heygem AI – An Open Source, Free Alternative to Heygen AI",
      "type": "story",
      "url": "https://github.com/duixcom/Duix.Heygem/blob/main/README.md"
    },
    {
      "by": "klaussilveira",
      "descendants": 1,
      "id": 43995767,
      "kids": [
        43997763,
        43995782
      ],
      "score": 19,
      "time": 1747321180,
      "title": "ARB Assembly Shader Programming (2023)",
      "type": "story",
      "url": "https://mid.net.ua/posts/glarbasm.html"
    },
    {
      "by": "anarbadalov",
      "descendants": 134,
      "id": 43986424,
      "kids": [
        43988168,
        43986838,
        43987267,
        43987193,
        43987097,
        43992799,
        43986706,
        43990505,
        43987083,
        43987396,
        43986685,
        43987241,
        43989696,
        43986623,
        43990595,
        43993202,
        43988158,
        43986725,
        43986983,
        43992196,
        43987992,
        43986892,
        43986820,
        43987434,
        43986908,
        43989203,
        43991371,
        43989331,
        43986942,
        43988298,
        43987598,
        43988551,
        43986894,
        43986963,
        43987113
      ],
      "score": 174,
      "time": 1747240068,
      "title": "Our narrative prison",
      "type": "story",
      "url": "https://aeon.co/essays/why-does-every-film-and-tv-series-seem-to-have-the-same-plot"
    },
    {
      "by": "ripe",
      "descendants": 1,
      "id": 44000562,
      "kids": [
        44000577
      ],
      "score": 12,
      "time": 1747353913,
      "title": "Most Americans don't earn enough to afford basic costs of living",
      "type": "story",
      "url": "https://www.cbsnews.com/news/cost-of-living-income-quality-of-life/"
    },
    {
      "by": "rcarmo",
      "descendants": 1,
      "id": 43999811,
      "kids": [
        43999867
      ],
      "score": 11,
      "time": 1747346696,
      "title": "The MiniBook X N150 \"netbook\"",
      "type": "story",
      "url": "https://taoofmac.com/space/reviews/2025/05/15/2230"
    },
    {
      "by": "muliswilliam",
      "descendants": 14,
      "id": 43971149,
      "kids": [
        43971150,
        43993659,
        43994911,
        43993343,
        43992658
      ],
      "score": 67,
      "time": 1747128646,
      "title": "Self-hostable webhook tester in go",
      "type": "story",
      "url": "https://testwebhook.xyz"
    },
    {
      "by": "xena",
      "descendants": 166,
      "id": 43936992,
      "kids": [
        43987446,
        43984421,
        43992679,
        43938433,
        43986702,
        43986076,
        43994576,
        43991141,
        43992676,
        43989180,
        43988265,
        43989558,
        43990746,
        43981516,
        43991738,
        43981733,
        43981607,
        43981715,
        43989132,
        43989816,
        43989300,
        43998358,
        43984240,
        43986917,
        43981617,
        43986950,
        43990534,
        43984212,
        43986079,
        43984736,
        43981721,
        43981682,
        43993292,
        43937109
      ],
      "score": 106,
      "text": "<a href=\"https:&#x2F;&#x2F;github.com&#x2F;orgs&#x2F;community&#x2F;discussions&#x2F;159123\">https:&#x2F;&#x2F;github.com&#x2F;orgs&#x2F;community&#x2F;discussions&#x2F;159123</a><p><a href=\"https:&#x2F;&#x2F;github.com&#x2F;orgs&#x2F;community&#x2F;discussions&#x2F;157887\">https:&#x2F;&#x2F;github.com&#x2F;orgs&#x2F;community&#x2F;discussions&#x2F;157887</a>",
      "time": 1746799865,
      "title": "Updated rate limits for unauthenticated requests",
      "type": "story",
      "url": "https://github.blog/changelog/2025-05-08-updated-rate-limits-for-unauthenticated-requests/"
    },
    {
      "by": "delduca",
      "descendants": 75,
      "id": 43954027,
      "kids": [
        43980774,
        43981307,
        43980955,
        43980427,
        43990523,
        43980050,
        43980220,
        43998487,
        43980605,
        43989805,
        43980360,
        43993769,
        43954028,
        43980397,
        43981326,
        43994335,
        43989058,
        43980291,
        43980820,
        43980265,
        43981283,
        43980997,
        43980908,
        43980238,
        43994451,
        43980162,
        43992690,
        43981012,
        43980801,
        43980276,
        43980500,
        43954050
      ],
      "score": 110,
      "time": 1746973369,
      "title": "Show HN: I’ve built an IoT device to let my family know when I’m in a meeting",
      "type": "story",
      "url": "https://nullonerror.org/2025/05/11/i-have-built-an-iot-device-to-let-my-family-know-when-i-am-in-a-meeting/"
    },
    {
      "by": "lawik",
      "descendants": 118,
      "id": 43945477,
      "kids": [
        43985940,
        43982581,
        43983710,
        43982470,
        43982680,
        43981942,
        43993718,
        43982370,
        43983731,
        43983946,
        43983683,
        43983726,
        43983148,
        43982349,
        43985532,
        43985555
      ],
      "score": 271,
      "time": 1746883920,
      "title": "Ash Framework – Model your domain, derive the rest",
      "type": "story",
      "url": "https://ash-hq.org/"
    },
    {
      "by": "klntsky",
      "descendants": 88,
      "id": 43958846,
      "kids": [
        43994713,
        43992694,
        43991360,
        43991872,
        43991492,
        43992004,
        43991649,
        43992868,
        43994201,
        43993138,
        43995092,
        43996020,
        43998259,
        43995074,
        43996785,
        43991623,
        43998133,
        43994160,
        43993363,
        43994449,
        43993790,
        43991781,
        43995943,
        43994305,
        43992550,
        43995468,
        43994860,
        43991331,
        43993710,
        43991591,
        43993193,
        43991421,
        43991674,
        43991498,
        43991336,
        43997898,
        43992715,
        43993095,
        43992003,
        43991521,
        43997126
      ],
      "score": 241,
      "time": 1747013762,
      "title": "Python lib generates its code on-the-fly based on usage",
      "type": "story",
      "url": "https://github.com/cofob/autogenlib"
    },
    {
      "by": "tsaifu",
      "descendants": 42,
      "id": 43984097,
      "kids": [
        43984966,
        43986425,
        43993094,
        43986138,
        43986078,
        43988834,
        43992455,
        43992726,
        43986214,
        43984449,
        43984712,
        43991745
      ],
      "score": 174,
      "time": 1747228106,
      "title": "How the economics of multitenancy work",
      "type": "story",
      "url": "https://www.blacksmith.sh/blog/the-economics-of-operating-a-ci-cloud"
    },
    {
      "by": "mdp2021",
      "descendants": 6,
      "id": 43999886,
      "kids": [
        43999907,
        44000317,
        44000183,
        44000701
      ],
      "score": 11,
      "time": 1747347301,
      "title": "\"We're Definitely Going to Build a Bunker Before We Release AGI\"",
      "type": "story",
      "url": "https://www.theatlantic.com/technology/archive/2025/05/karen-hao-empire-of-ai-excerpt/682798/"
    },
    {
      "by": "Vinnl",
      "descendants": 659,
      "id": 43971515,
      "kids": [
        43971663,
        43991318,
        43996687,
        43992625,
        43996348,
        43985073,
        43991069,
        43995851,
        43997025,
        43996695,
        43996410,
        43985407,
        43991501,
        43992350,
        43989379,
        43974525,
        43993314,
        43997023,
        43994921,
        43989869,
        43994007,
        43992458,
        43993304,
        43985069,
        43985435,
        43991766,
        43984193,
        43985805,
        43985631,
        43992940,
        43990719,
        43994000,
        43989791,
        43992136,
        43985046,
        43989297,
        43997602
      ],
      "score": 421,
      "time": 1747133000,
      "title": "Changes since congestion pricing started in New York",
      "type": "story",
      "url": "https://www.nytimes.com/interactive/2025/05/11/upshot/congestion-pricing.html"
    },
    {
      "by": "thinkingemote",
      "descendants": 62,
      "id": 43982784,
      "kids": [
        43982952,
        43982975,
        43989194,
        43983126,
        43993021,
        43984460,
        43982968,
        43984247,
        43991785,
        43983017,
        43984575
      ],
      "score": 89,
      "time": 1747217516,
      "title": "UK's Ancient Tree Inventory",
      "type": "story",
      "url": "https://ati.woodlandtrust.org.uk/"
    },
    {
      "by": "surprisetalk",
      "descendants": 26,
      "id": 43953603,
      "kids": [
        43994806,
        43998244,
        43994747,
        43994817,
        43994553,
        43994854,
        43953719,
        43994536,
        43997355
      ],
      "score": 40,
      "time": 1746969154,
      "title": "Clearly Incorrect",
      "type": "story",
      "url": "https://quarter--mile.com/Clearly-Incorrect"
    },
    {
      "by": "bestwillcui",
      "descendants": 118,
      "id": 43972425,
      "kids": [
        43976489,
        43985879,
        43975156,
        43973731,
        43976354,
        43973125,
        43973912,
        43982990,
        43985024,
        43976295,
        43997840,
        43990922,
        43984281,
        43972902,
        43973638,
        43973808,
        43978488,
        43981083,
        43973091,
        43985460,
        43985638,
        43980762,
        43974010,
        43981538,
        43974463,
        43973171,
        43974989,
        43973153,
        43984133,
        43977527,
        43973475,
        43979985,
        43978177,
        43973570,
        43973859,
        43973936,
        43983085,
        43976901,
        43975242,
        43972951,
        43977565,
        43975478,
        43979808,
        43973908,
        43973425,
        43973004,
        43980925,
        43975354,
        43984639
      ],
      "score": 211,
      "text": "Hey HN, we’re Tyrone and Guang, founders of Miyagi Labs (<a href=\"https:&#x2F;&#x2F;miyagilabs.ai\">https:&#x2F;&#x2F;miyagilabs.ai</a>), an AI-powered education platform that transforms educational YouTube videos into interactive courses. It helps you learn better through active practice and personalized feedback.<p>We use LLMs to automatically generate quizzes, practice questions, and real-time feedback from any educational video or resource—turning passive watching into active learning. Here’s a short demo: <a href=\"https:&#x2F;&#x2F;youtu.be&#x2F;alO7FaorHOY\" rel=\"nofollow\">https:&#x2F;&#x2F;youtu.be&#x2F;alO7FaorHOY</a>.<p>Improving education has always been tricky. Bloom’s 2-sigma problem (showing that a high-quality personal tutor is far more effective than conventional methods) has persisted, even as technology has advanced.<p>We met at MIT as CS majors and have always been passionate about education. Over the years, we’ve become teachers and experts in subjects like chess, algorithms, math, languages, and ninja warrior. A common theme was that we both heavily relied on YouTube to learn.<p>YouTube has incredible content for learning pretty much anything, but it’s buried in a lot of distractions. Also, passively watching videos is far less effective than taking notes, asking questions, and doing practice problems, which is what we aim to do with Miyagi Labs.<p>Our solution is essentially a multi-step function that takes in a YouTube playlist (or list of any resources) and outputs an entire course with summaries, questions, answers, and more. The pipeline is roughly: video&#x2F;resource —&gt; transcript&#x2F;text —&gt; chunks —&gt; summary and question —&gt; answers to questions, with some other features along the way.<p>We mostly use prompting and different models at each step to make the course as useful as possible. Certain topics require more practice problems vs. comprehension, and we’d use reasoning models for highly technical subjects.<p>We launched about three months ago and currently have 400+ courses and partnerships with some businesses and awesome creators. Some of our popular courses include 3Blue1Brown’s linear algebra course, a botany course on plants and ecology, and YC’s How to Start a Startup series.<p>Our product resembles classical MOOC-style course platforms in terms of UI, but is more interactive. It’s really easy to ask a question or receive custom feedback compared to a static course on Coursera. It’s also comparable to AI tutor sites, but we try to build more of a community and require less activation energy as a learner. We’re basically betting that AI can hugely improve education, but that students still want to learn from their favorite creators and want baseline shared resources for standard topics that are then augmented with personalized features.<p>You can try it here: <a href=\"https:&#x2F;&#x2F;miyagilabs.ai\">https:&#x2F;&#x2F;miyagilabs.ai</a> (no login required for most courses—but if you sign up you can also create your own course).<p>We’d love your feedback on what kinds of videos&#x2F;resources you’d like to learn from, what’s missing from current learning tools, and if you know any creators or educators who would like to collaborate. Happy to hear any feedback and answer any questions!",
      "time": 1747141002,
      "title": "Launch HN: Miyagi (YC W25) turns YouTube videos into online, interactive courses",
      "type": "story"
    },
    {
      "by": "indigodaddy",
      "descendants": 22,
      "id": 43958190,
      "kids": [
        43992581,
        43991150,
        43992119,
        43991131,
        43991651,
        43993775,
        43991142,
        43991049
      ],
      "score": 52,
      "time": 1747006452,
      "title": "Internet Scrabble Club (2002-)",
      "type": "story",
      "url": "https://isc.ro/"
    },
    {
      "by": "JSLegendDev",
      "descendants": 475,
      "id": 43963434,
      "kids": [
        43977897,
        43976144,
        43976838,
        43975980,
        43968507,
        43976362,
        43977181,
        43977268,
        43976998,
        43969842,
        43968700,
        43977182,
        43999448,
        43964424,
        43973804,
        43979098,
        43982476,
        43977544,
        43963767,
        43971099,
        43995003,
        43977365,
        43970651,
        43969916,
        43983162,
        43976644,
        43994383,
        43982634,
        43977290,
        43976684,
        43992595,
        43979709,
        43977413,
        43986101,
        43985760,
        43963701,
        43969783,
        43989207,
        43967891,
        43977587,
        43976050,
        43978006,
        43977091,
        43976474,
        43982532,
        43982271,
        43978272,
        43976676,
        43970045,
        43978773,
        43984186,
        43982474,
        43989155,
        43977395,
        43977697,
        43967428,
        43978612,
        43978977,
        43981999,
        43975822,
        43980759,
        43981964,
        43973654,
        43968177,
        43966963,
        43970043,
        43981896
      ],
      "score": 485,
      "time": 1747060345,
      "title": "The great displacement is already well underway?",
      "type": "story",
      "url": "https://shawnfromportland.substack.com/p/the-great-displacement-is-already"
    },
    {
      "by": "shenli3514",
      "descendants": 258,
      "id": 43989497,
      "kids": [
        43990890,
        43990519,
        43993302,
        43991121,
        43994217,
        43994033,
        43990777,
        43993460,
        43994584,
        43990502,
        43990729,
        43990596,
        43990334,
        43990594,
        43993370,
        43990613,
        43991075,
        43990062,
        43990879,
        43991648,
        43997419,
        43990129,
        43992672,
        43990274,
        43992695
      ],
      "score": 224,
      "time": 1747258785,
      "title": "Migrating to Postgres",
      "type": "story",
      "url": "https://engineering.usemotion.com/migrating-to-postgres-3c93dff9c65d"
    },
    {
      "by": "keepamovin",
      "descendants": 8,
      "id": 43971599,
      "kids": [
        43997750,
        43997523,
        43999529,
        43997687,
        43997700
      ],
      "score": 43,
      "time": 1747134033,
      "title": "Ports that are blocked by browsers (2023)",
      "type": "story",
      "url": "https://www.keenformatics.com/ports-that-are-blocked-by-browsers"
    },
    {
      "by": "stefankuehnel",
      "descendants": 101,
      "id": 43971620,
      "kids": [
        43990347,
        43990787,
        43996550,
        43986409,
        43987879,
        43992761,
        43987754,
        43986717,
        43988552,
        43987656,
        43992674,
        43987043,
        43992725,
        43992360,
        43994285,
        43996693,
        43990074,
        43989310,
        43989810,
        43990123,
        43997314,
        43987744,
        43986822,
        43989811,
        43992796,
        43994947,
        43987623
      ],
      "score": 297,
      "time": 1747134449,
      "title": "Git Bug: Distributed, Offline-First Bug Tracker Embedded in Git, with Bridges",
      "type": "story",
      "url": "https://github.com/git-bug/git-bug"
    },
    {
      "by": "skibz",
      "descendants": 74,
      "id": 43944199,
      "kids": [
        43981698,
        43982171,
        43981602,
        43980788,
        43980927,
        43986348,
        43980834,
        43982333,
        43996801,
        43982402,
        43982268,
        43982139,
        43993390,
        43984658,
        43981546,
        43982227,
        43988555,
        43981371,
        43984286,
        43984292,
        43987066,
        43984125,
        43984217,
        43981913,
        43981213,
        43982281
      ],
      "score": 312,
      "time": 1746867167,
      "title": "RPG in a Box",
      "type": "story",
      "url": "https://rpginabox.com/"
    },
    {
      "by": "Hooke",
      "descendants": 5,
      "id": 43967405,
      "kids": [
        43989981,
        43992266,
        43990838,
        43991465
      ],
      "score": 56,
      "time": 1747083550,
      "title": "Hegel 2.0: The imaginary history of ternary computing (2018)",
      "type": "story",
      "url": "https://www.cabinetmagazine.org/issues/65/weatherby.php"
    },
    {
      "by": "impish9208",
      "descendants": 5,
      "id": 43997920,
      "kids": [
        43997921,
        43998693,
        43998659
      ],
      "score": 18,
      "time": 1747334083,
      "title": "Bags of Cash from Drug Cartels Flood Teller Windows at U.S. Banks",
      "type": "story",
      "url": "https://www.wsj.com/us-news/china-mexico-drug-money-laundering-banks-907f35f8"
    },
    {
      "by": "GeorgeCurtis",
      "descendants": 105,
      "id": 43975423,
      "kids": [
        43977985,
        43981161,
        43979626,
        43976099,
        43987231,
        43978122,
        43976519,
        43978573,
        43975955,
        43984482,
        43980055,
        43984707,
        43985706,
        43978692,
        43985151,
        43976157,
        43976348,
        43980734,
        43977681,
        43987628,
        43980885,
        43976055,
        43976392,
        43978700,
        43980575,
        43976983,
        43978275,
        43982933,
        43978123,
        43977294,
        43978307,
        43975838,
        43980555,
        43977005
      ],
      "score": 226,
      "text": "Hey HN, we want to share HelixDB (<a href=\"https:&#x2F;&#x2F;github.com&#x2F;HelixDB&#x2F;helix-db&#x2F;\">https:&#x2F;&#x2F;github.com&#x2F;HelixDB&#x2F;helix-db&#x2F;</a>), a project a college friend and I are working on. It’s a new database that natively intertwines graph and vector types, without sacrificing performance. It’s written in Rust and our initial focus is on supporting RAG. Here’s a video runthrough: <a href=\"https:&#x2F;&#x2F;screen.studio&#x2F;share&#x2F;szgQu3yq\" rel=\"nofollow\">https:&#x2F;&#x2F;screen.studio&#x2F;share&#x2F;szgQu3yq</a>.<p>Why a hybrid? Vector databases are useful for similarity queries, while graph databases are useful for relationship queries. Each stores data in a way that’s best for its main type of query (e.g. key-value stores vs. node-and-edge tables). However, many AI-driven applications need <i>both</i> similarity and relationship queries. For example, you might use vector-based semantic search to retrieve relevant legal documents, and then use graph traversal to identify relationships between cases.<p>Developers of such apps have the quandary of needing to build on top of two different databases—a vector one and a graph one—plus you have to link them together and sync the data. Even then, your two databases aren&#x27;t designed to work together—for example, there’s no native way to perform joins or queries that span both systems. You’ll need to handle that logic at the application level.<p>Helix started when we realized that there are ways to integrate vector and graph data that are both fast and suitable for AI applications, especially RAG-based ones. See this cool research paper: <a href=\"https:&#x2F;&#x2F;arxiv.org&#x2F;html&#x2F;2408.04948v1\" rel=\"nofollow\">https:&#x2F;&#x2F;arxiv.org&#x2F;html&#x2F;2408.04948v1</a>. After reading that and some other papers on graph and hybrid RAG, we decided to build a hybrid DB. Our aim was to make something better to use from a developer standpoint, while also making it fast as hell.<p>After a few months of working on this as a side project, our benchmarking shows that we are on par with Pinecone and Qdrant for vectors, and our graph is up to three orders of magnitude faster than Neo4j.<p>Problems where a hybrid approach works particularly well include:<p>- Indexing codebases: you can vectorize code-snippets within a function (connected by edges) based on context and then create an AST (in a graph) from function calls, imports, dependencies, etc. Agents can look up code by similarity or keyword and then traverse the AST to get only the relevant code, which reduces hallucinations and prevents the LLM from guessing object shapes or variable&#x2F;function names.<p>- Molecule discovery: Model biological interactions (e.g., proteins → genes → diseases) using graph types and then embed molecule structures to find similar compounds or case studies.<p>- Enterprise knowledge management: you can represent organisational structure, projects, and people (e.g., employee → team → project) in graph form, then index internal documents, emails, or notes as vectors for semantic search and link them directly employees&#x2F;teams&#x2F;projects in the graph.<p>I naively assumed when learning about databases for the first time that queries would be compiled and executed like functions in traditional programming. Turns out I was wrong, but this creates unnecessary latency by sending extra data (the whole written query), compiling it at run time, and then executing it. With Helix, you write the queries in our query language (HelixQL), which is then transpiled into Rust code and built directly into the database server, where you can call a generated API endpoint.<p>Many people have a thing against “yet another query language” (doubtless for good reason!) but we went ahead and did it anyway, because we think it makes working with our database so much easier that it’s worth a bit of a learning curve. HelixQL takes from other query languages such as Gremlin, Cypher and SQL with some extra ideas added in. It is declarative while the traversals themselves are functional. This allows complete control over the traversal flow while also having a cleaner syntax. HelixQL returns JSON to make things easy for clients. Also, it uses a schema, so the queries are type-checked.<p>We took a crude approach to building the original graph engine as a way to get an MVP out, so we are now working on improving the graph engine by making traversals massively parallel and pipelined. This means data is only ever decoded from disk when it is needed, and parts of reads are all processed in parallel.<p>If you’d like to try it out in a simple RAG demo, you can follow this guide and run our Jupyter notebook: <a href=\"https:&#x2F;&#x2F;github.com&#x2F;HelixDB&#x2F;helix-db&#x2F;tree&#x2F;main&#x2F;examples&#x2F;rag_demo\">https:&#x2F;&#x2F;github.com&#x2F;HelixDB&#x2F;helix-db&#x2F;tree&#x2F;main&#x2F;examples&#x2F;rag_d...</a><p>Many thanks! Comments and feedback welcome!",
      "time": 1747157198,
      "title": "Show HN: HelixDB – Open-source vector-graph database for AI applications (Rust)",
      "type": "story",
      "url": "https://github.com/HelixDB/helix-db/"
    },
    {
      "by": "todsacerdoti",
      "descendants": 24,
      "id": 43994779,
      "kids": [
        43995808,
        43995048,
        43997149,
        43995965,
        43995203,
        43996280,
        43995779,
        43996149,
        43995283,
        43995797,
        43995070,
        43997328
      ],
      "score": 76,
      "time": 1747315334,
      "title": "Forget IPs: using cryptography to verify bot and agent traffic",
      "type": "story",
      "url": "https://blog.cloudflare.com/web-bot-auth/"
    },
    {
      "by": "hbarka",
      "descendants": 1,
      "id": 43996883,
      "kids": [
        43997000
      ],
      "score": 7,
      "time": 1747327869,
      "title": "Pinta - free, open-source program for drawing and image editing",
      "type": "story",
      "url": "https://www.pinta-project.com/"
    },
    {
      "by": "MarcoDewey",
      "descendants": 32,
      "id": 43985994,
      "kids": [
        43987068,
        43996272,
        43986342,
        43998295,
        43994847,
        43989405,
        43993263,
        43986238,
        43991592,
        43986305,
        43986030,
        43992824,
        43986296
      ],
      "score": 45,
      "text": "Hey HN! We are building Jazzberry (<a href=\"https:&#x2F;&#x2F;jazzberry.ai\">https:&#x2F;&#x2F;jazzberry.ai</a>), an AI bug finder that automatically tests your code when a pull request occurs to find and flag real bugs before they are merged.<p>Here’s a demo video: <a href=\"https:&#x2F;&#x2F;www.youtube.com&#x2F;watch?v=L6ZTu86qK8U#t=7\" rel=\"nofollow\">https:&#x2F;&#x2F;www.youtube.com&#x2F;watch?v=L6ZTu86qK8U#t=7</a><p>We are building Jazzberry to help you find bugs in your code base. Here’s how it works:<p>When a PR is made, Jazzberry clones the repo into a secure sandbox. The diff from the PR is provided to the AI agent in its context window. In order to interact with the rest of the code base, the AI agent has the ability to execute bash commands within the sandbox. The output from those commands is fed back into the agent. This means that the agent can do things like read&#x2F;write files, search, install packages, run interpreters, execute code, and so on. It observes the outcomes and iteratively tests to pinpoint bugs, which are then reported back in the PR as a markdown table.<p>Jazzberry is focused on dynamically testing your code in a sandbox to confirm the presence of real bugs. We are not a general code review tool, our only aim is to provide concrete evidence of what&#x27;s broken and how.<p>Here are some real examples of bugs that we have found so far.<p>“<i>Authentication Bypass (Critical)</i>” - When `AUTH_ENABLED` is `False`, the `get_user` dependency in `home&#x2F;api&#x2F;deps.py` always returns the first superuser, bypassing authentication and potentially leading to unauthorized access. Additionally, it defaults to superuser when the authenticated auth0 user is not present in the database.<p>“<i>Insecure Header Handling (High)</i>” - The server doesn&#x27;t validate header names&#x2F;values, allowing injection of malicious headers, potentially leading to security issues.<p>“<i>API Key Leakage (High)</i>” - Different error messages in browser console logs revealed whether API keys were valid, allowing attackers to brute force valid credentials by distinguishing between format errors and authorization errors.<p>Working on this, we&#x27;ve realized just how much the rise of LLM-generated code is amplifying the need for better automated testing solutions. Traditional code coverage metrics and manual code review are already becoming less effective when dealing with thousands of lines of LLM-generated code. We think this is going to get more so over time—the complexity of AI-authored systems will ultimately require even more sophisticated AI tooling for effective validation.<p>Our backgrounds: Mateo has a PhD in reinforcement learning and formal methods with over 20 publications and 350 citations. Marco holds an MSc in software testing, specializing in LLMs for automated test generation.<p>We are actively building and would love your honest feedback!",
      "time": 1747237941,
      "title": "Launch HN: Jazzberry (YC X25) – AI agent for finding bugs",
      "type": "story"
    },
    {
      "by": "GreenGames",
      "descendants": 47,
      "id": 43985624,
      "kids": [
        43986022,
        44000390,
        43986096,
        43991183,
        43991894,
        43986189,
        43986231,
        43986934,
        43987772,
        43990158,
        43987448,
        43985778,
        43986577,
        43986248
      ],
      "score": 151,
      "text": "Hey HN, we&#x27;re excited to share Lumier (<a href=\"https:&#x2F;&#x2F;github.com&#x2F;trycua&#x2F;cua&#x2F;tree&#x2F;main&#x2F;libs&#x2F;lumier\">https:&#x2F;&#x2F;github.com&#x2F;trycua&#x2F;cua&#x2F;tree&#x2F;main&#x2F;libs&#x2F;lumier</a>), an open-source tool for running macOS and Linux virtual machines in Docker containers on Apple Silicon Macs.<p>When building virtualized environments for AI agents, we needed a reproducible way to package and distribute macOS VMs. Inspired by projects like dockur&#x2F;windows (<a href=\"https:&#x2F;&#x2F;github.com&#x2F;dockur&#x2F;windows\">https:&#x2F;&#x2F;github.com&#x2F;dockur&#x2F;windows</a>) that pioneered running Windows in Docker, we wanted to create something similar but optimized for Apple Silicon. The existing solutions either didn&#x27;t support M-series chips or relied on KVM&#x2F;Intel emulation, which was slow and cumbersome. We realized we could leverage Apple&#x27;s Virtualization Framework to create a much better experience.<p>Lumier takes a different approach: it uses Docker as a delivery mechanism (not for isolation) and connects to a lightweight virtualization service (lume) running on your Mac. This creates true hardware-accelerated VMs using Apple&#x27;s native virtualization capabilities.<p>With Lumier, you can: \n- Launch a ready-to-use macOS VM in minutes with zero manual setup\n- Access your VM through any web browser via VNC\n- Share files between your host and VM effortlessly\n- Use persistent storage or ephemeral mode for quick tests\n- Automate VM startup with custom scripts<p>All of this works natively on Apple Silicon (M1&#x2F;M2&#x2F;M3&#x2F;M4) - no emulation required.<p>To get started:<p>1. Install Docker for Apple Silicon: <a href=\"https:&#x2F;&#x2F;desktop.docker.com&#x2F;mac&#x2F;main&#x2F;arm64&#x2F;Docker.dmg\" rel=\"nofollow\">https:&#x2F;&#x2F;desktop.docker.com&#x2F;mac&#x2F;main&#x2F;arm64&#x2F;Docker.dmg</a><p>2. Install lume background service with our one-liner:<p><pre><code>  &#x2F;bin&#x2F;bash -c &quot;$(curl -fsSL https:&#x2F;&#x2F;raw.githubusercontent.com&#x2F;trycua&#x2F;cua&#x2F;main&#x2F;libs&#x2F;lume&#x2F;scripts&#x2F;install.sh)&quot;\n</code></pre>\n3. Start a VM (ephemeral mode):<p><pre><code>  docker run -it --rm \\\n  --name lumier-vm \\\n    -p 8006:8006 \\\n    -e VM_NAME=lumier-vm \\\n    -e VERSION=ghcr.io&#x2F;trycua&#x2F;macos-sequoia-cua:latest \\\n    -e CPU_CORES=4 \\\n    -e RAM_SIZE=8192 \\\n    trycua&#x2F;lumier:latest\n</code></pre>\n4. Open <a href=\"http:&#x2F;&#x2F;localhost:8006&#x2F;vnc.html\" rel=\"nofollow\">http:&#x2F;&#x2F;localhost:8006&#x2F;vnc.html</a> in your browser. The container will generate a unique password for each VM instance - you&#x27;ll see it in the container logs.<p>For persistent storage (so your changes survive container restarts):<p>mkdir -p storage\ndocker run -it --rm \\\n  --name lumier-vm \\\n  -p 8006:8006 \\\n  -v $(pwd)&#x2F;storage:&#x2F;storage \\\n  -e VM_NAME=lumier-vm \\\n  -e HOST_STORAGE_PATH=$(pwd)&#x2F;storage \\\n  trycua&#x2F;lumier:latest<p>Want to share files with your VM? Just add another volume:<p>mkdir -p shared\ndocker run ... -v $(pwd)&#x2F;shared:&#x2F;shared -e HOST_SHARED_PATH=$(pwd)&#x2F;shared ...<p>You can even automate VM startup by placing an on-logon.sh script in shared&#x2F;lifecycle&#x2F;.<p>We&#x27;re seeing people use Lumier for:\n- Development and testing environments that need macOS\n- CI&#x2F;CD pipelines for Apple platform apps\n- Disposable macOS instances for security research\n- Automated UI testing across macOS versions\n- Running AI agents in isolated environments<p>Lumier is 100% open-source under the MIT license. We&#x27;re actively developing it as part of our work on C&#x2F;ua (<a href=\"https:&#x2F;&#x2F;github.com&#x2F;trycua&#x2F;cua\">https:&#x2F;&#x2F;github.com&#x2F;trycua&#x2F;cua</a>), and we&#x27;d love your feedback, bug reports, or feature ideas.<p>We&#x27;ll be here to answer any technical questions and look forward to your comments!",
      "time": 1747235981,
      "title": "Show HN: Lumier – Run macOS VMs in a Docker",
      "type": "story",
      "url": "https://github.com/trycua/cua/tree/main/libs/lumier"
    },
    {
      "by": "kilgarenone",
      "descendants": 5,
      "id": 43993374,
      "kids": [
        43995099,
        43996038,
        43997772,
        43999277,
        43996197,
        43996235
      ],
      "score": 16,
      "time": 1747302333,
      "title": "Show HN: Kudos.wiki – Discover the best movies on Wikipedia",
      "type": "story",
      "url": "https://kudos.wiki"
    },
    {
      "by": "gmays",
      "descendants": 0,
      "id": 43999879,
      "score": 4,
      "time": 1747347253,
      "title": "Physicists snap the first images of \"free-range\" atoms",
      "type": "story",
      "url": "https://news.mit.edu/2025/mit-physicists-snap-first-images-free-range-atoms-0505"
    },
    {
      "by": "nxa",
      "descendants": 172,
      "id": 43988533,
      "kids": [
        43989245,
        43989512,
        43989060,
        43988592,
        43989603,
        43989543,
        43989014,
        43994225,
        43989961,
        43989077,
        43989378,
        43993481,
        43990625,
        43990084,
        43995853,
        43993740,
        43993288,
        43989048,
        43993647,
        43989254,
        43994524,
        43989509,
        43990566,
        43990517,
        43996421,
        43993734,
        43993885,
        43989967,
        43989084,
        43990052,
        43992670,
        43990190,
        43995511,
        43991058,
        43991944,
        43988786,
        43995568,
        43988904,
        43989486,
        43990304,
        43991701,
        43989584,
        43992422,
        43989020,
        43992555,
        43991160,
        43989205,
        43988601,
        43993284,
        43993571,
        43989647,
        43991710,
        43988948,
        43995170,
        43989216,
        43992518,
        43991921,
        43989070,
        43988999,
        43989897,
        43992710,
        43989348,
        43989996,
        43988842,
        43990384,
        43989162,
        43989021,
        43996877,
        43991357,
        43989510,
        43989569,
        43996210
      ],
      "score": 170,
      "text": "I&#x27;ve been playing with embeddings and wanted to try out what results the embedding layer will produce based on just word-by-word input and addition &#x2F; subtraction, beyond what many videos &#x2F; papers mention (like the obvious king-man+woman=queen). So I built something that doesn&#x27;t just give the first answer, but ranks the matches based on distance &#x2F; cosine symmetry. I polished it a bit so that others can try it out, too.<p>For now, I only have nouns (and some proper nouns) in the dataset, and pick the most common interpretation among the homographs. Also, it&#x27;s case sensitive.",
      "time": 1747252471,
      "title": "Show HN: Semantic Calculator (king-man+woman=?)",
      "type": "story",
      "url": "https://calc.datova.ai"
    },
    {
      "by": "davidgomes",
      "descendants": 217,
      "id": 43982777,
      "kids": [
        43984709,
        43983725,
        43982947,
        43983189,
        43985999,
        43983019,
        43983018,
        43984902,
        43988713,
        43983224,
        43982918,
        43983253,
        43982970,
        43987547,
        43988794,
        43983145,
        43984074,
        43993890,
        43984422,
        43984198,
        43983695,
        43993675,
        43990716,
        43984008,
        43983089,
        43984931,
        43983758,
        43989230,
        43984908,
        43982973,
        43991240,
        43995599,
        43982967,
        43983473,
        43983692,
        43986856,
        43983977,
        43984512,
        43983888,
        43987763,
        43982969,
        43984848
      ],
      "score": 377,
      "time": 1747217400,
      "title": "Databricks acquires Neon",
      "type": "story",
      "url": "https://www.databricks.com/blog/databricks-neon"
    },
    {
      "by": "jaypatelani",
      "descendants": 134,
      "id": 43985971,
      "kids": [
        43990713,
        43986731,
        43986924,
        43986421,
        43987608,
        43987173,
        43990095,
        43988262,
        43988057,
        43993224,
        43987109,
        43993297,
        43996130,
        43987334,
        43990453,
        43987364,
        43987051,
        43986620,
        43986390,
        43992049,
        43987680,
        43993492,
        43989786,
        43987514,
        43987971
      ],
      "score": 386,
      "time": 1747237830,
      "title": "A server that wasn't meant to exist",
      "type": "story",
      "url": "https://it-notes.dragas.net/2025/05/13/the_server_that_wasnt_meant_to_exist/"
    },
    {
      "by": "paulpauper",
      "descendants": 1,
      "id": 43999380,
      "kids": [
        43999723
      ],
      "score": 8,
      "time": 1747343417,
      "title": "Taurine Deficiency as a Driver of Aging",
      "type": "story",
      "url": "https://www.science.org/doi/10.1126/science.abn9257"
    },
    {
      "by": "jstrieb",
      "descendants": 22,
      "id": 43951366,
      "kids": [
        43992777,
        43990092,
        43991795,
        43992763,
        43990231,
        43991018,
        43990068,
        43991269
      ],
      "score": 65,
      "time": 1746937561,
      "title": "Getting Started with Celtic Coins – Crude and Barbarous, or Just Different?",
      "type": "story",
      "url": "https://collectingancientcoins.co.uk/getting-started-with-celtic-coins-crude-and-barbarous-or-just-different/"
    },
    {
      "by": "anigbrowl",
      "descendants": 337,
      "id": 43980845,
      "kids": [
        43981512,
        43981005,
        43982124,
        43981102,
        43981357,
        43981035,
        43983777,
        43981134,
        43982131,
        43981051,
        43981034,
        43994311,
        43988997,
        43986956,
        43985696,
        43981937,
        43982323,
        43982099,
        43982763,
        43982129,
        43982932,
        43982296,
        43981057,
        43988289,
        43981706,
        43981335,
        43986982,
        43985459,
        43981624,
        43981723,
        43982190,
        43982173,
        43981542,
        43982275
      ],
      "score": 475,
      "time": 1747197201,
      "title": "Bus stops here: Shanghai lets riders design their own routes",
      "type": "story",
      "url": "https://www.sixthtone.com/news/1017072"
    },
    {
      "by": "morsch",
      "descendants": 162,
      "id": 43981170,
      "kids": [
        43983064,
        43986181,
        43983191,
        43982964,
        43999312,
        43985869,
        43992919,
        43986445,
        43982322,
        43982299,
        43987921,
        43988040,
        43989539,
        43983827,
        43982888,
        43985130,
        43982607,
        43983607,
        43983550,
        43983911,
        43985989
      ],
      "score": 399,
      "time": 1747201080,
      "title": "The recently lost file upload feature in the Nextcloud app for Android",
      "type": "story",
      "url": "https://nextcloud.com/blog/nextcloud-android-file-upload-issue-google/"
    },
    {
      "by": "adiabatty",
      "descendants": 7,
      "id": 43998269,
      "kids": [
        43998673,
        43998654,
        43998350,
        43998607
      ],
      "score": 22,
      "time": 1747336154,
      "title": "October the First Is Too Late",
      "type": "story",
      "url": "https://gwern.net/fiction/october"
    }
  ]
}