{
  "fetch_time": "2025-05-30 01:14:17",
  "stories": [
    {
      "by": "adam_gyroscope",
      "descendants": 89,
      "id": 44127109,
      "kids": [
        44127741,
        44128109,
        44128509,
        44127700,
        44131617,
        44128447,
        44127851,
        44128326,
        44131594,
        44131292,
        44131361,
        44127768,
        44131644,
        44129846,
        44129191,
        44131510,
        44127959,
        44128299,
        44129136,
        44130582,
        44128962,
        44127921,
        44128714,
        44130713,
        44130361,
        44127812,
        44128454,
        44127903,
        44128173,
        44130287,
        44127752,
        44128362,
        44127871,
        44127910,
        44127922,
        44128265,
        44130241,
        44128177,
        44128025,
        44129302,
        44128112,
        44127764,
        44130013,
        44127949
      ],
      "score": 482,
      "time": 1748533125,
      "title": "WeatherStar 4000+: Weather Channel Simulator",
      "type": "story",
      "url": "https://weatherstar.netbymatt.com/"
    },
    {
      "by": "minimaxir",
      "descendants": 79,
      "id": 44128322,
      "kids": [
        44129188,
        44129604,
        44129431,
        44130733,
        44128904,
        44131747,
        44131167,
        44129116,
        44130979,
        44130171,
        44129084,
        44128875,
        44129111,
        44129419,
        44129363,
        44129842,
        44130945,
        44128888,
        44128809
      ],
      "score": 251,
      "time": 1748540435,
      "title": "FLUX.1 Kontext",
      "type": "story",
      "url": "https://bfl.ai/models/flux-kontext"
    },
    {
      "by": "muragekibicho",
      "descendants": 50,
      "id": 44105746,
      "kids": [
        44131554,
        44130879,
        44105747,
        44130402,
        44131697,
        44129268,
        44131395,
        44130564,
        44130228,
        44129124,
        44129462,
        44131012,
        44131050
      ],
      "score": 74,
      "time": 1748343970,
      "title": "Making C and Python Talk to Each Other",
      "type": "story",
      "url": "https://leetarxiv.substack.com/p/making-c-and-python-talk-to-each"
    },
    {
      "by": "petr25102018",
      "descendants": 63,
      "id": 44126612,
      "kids": [
        44127185,
        44126873,
        44127014,
        44128835,
        44130646,
        44127725,
        44128745,
        44129862,
        44128890,
        44131741,
        44127712,
        44129167,
        44127325,
        44130258,
        44128442,
        44127002,
        44128450,
        44128693,
        44129787
      ],
      "score": 245,
      "text": "TLDR: I wrote a handbook for the Linux command line. 120 pages in PDF. Updated for 2025. Pay what you want.<p>A few years back I wrote an ebook about the Linux command line. Instead of focusing on a specific shell, paraphrasing manual pages, or providing long repetitive explanations, the idea was to create a modern guide that would help readers to understand the command line in the practical sense, cover the most common things people use the command line for, and do so without wasting the readers&#x27; time.<p>The book contains material on terminals, shells (compatible with both Bash and Zsh), configuration, command line programs for typical use cases, shell scripting, and many tips and tricks to make working on the command line more convenient. I still consider it &quot;an introduction&quot; and it is not necessarily a book for the HN crowd that lives in the terminal, but I believe that the book will easily cover 80 % of the things most people want or need to do in the terminal.<p>I made a couple of updates to the book over the years and just finished a significant one for 2025. The book is not perfect. I still see a lot of room for improvement, but I think it is good enough and I truly want to share it with everyone. Hence, pay what you want.<p>EXAMPLE PAGES: <a href=\"https:&#x2F;&#x2F;drive.google.com&#x2F;file&#x2F;d&#x2F;1PkUcLv83Ib6nKYF88n3OBqeeVffAs3Sp&#x2F;view?usp=sharing\" rel=\"nofollow\">https:&#x2F;&#x2F;drive.google.com&#x2F;file&#x2F;d&#x2F;1PkUcLv83Ib6nKYF88n3OBqeeVff...</a><p><a href=\"https:&#x2F;&#x2F;commandline.stribny.name&#x2F;\" rel=\"nofollow\">https:&#x2F;&#x2F;commandline.stribny.name&#x2F;</a>",
      "time": 1748529873,
      "title": "Show HN: I wrote a modern Command Line Handbook",
      "type": "story",
      "url": "https://commandline.stribny.name/"
    },
    {
      "by": "lerno",
      "descendants": 123,
      "id": 44125966,
      "kids": [
        44126579,
        44126367,
        44131515,
        44127328,
        44126650,
        44130853,
        44130693,
        44128788,
        44127495,
        44128849,
        44127030,
        44127337,
        44126839,
        44127629,
        44126493,
        44127208,
        44128838,
        44127441,
        44126634
      ],
      "score": 201,
      "time": 1748525611,
      "title": "Learning C3",
      "type": "story",
      "url": "https://alloc.dev/2025/05/29/learning_c3"
    },
    {
      "by": "jlaneve",
      "descendants": 17,
      "id": 44128101,
      "kids": [
        44131061,
        44131653,
        44131010,
        44131249,
        44130651,
        44129548
      ],
      "score": 88,
      "time": 1748539014,
      "title": "Open-sourcing circuit tracing tools",
      "type": "story",
      "url": "https://www.anthropic.com/research/open-source-circuit-tracing"
    },
    {
      "by": "surprisetalk",
      "descendants": 119,
      "id": 44114982,
      "kids": [
        44124821,
        44125444,
        44126872,
        44125115,
        44125508,
        44125763,
        44125937,
        44124967,
        44125615,
        44125934,
        44131092,
        44126731,
        44129180,
        44130135,
        44126862,
        44125189,
        44127934,
        44126798,
        44129892,
        44125378,
        44129413,
        44129754,
        44125772,
        44128622,
        44124988,
        44126231,
        44126758,
        44126305,
        44130462,
        44129248,
        44129858,
        44128009,
        44124902,
        44128415,
        44125714,
        44125568,
        44124974,
        44126203,
        44126971,
        44126943
      ],
      "score": 424,
      "time": 1748433227,
      "title": "My website is ugly because I made it",
      "type": "story",
      "url": "https://goodinternetmagazine.com/my-website-is-ugly-because-i-made-it/"
    },
    {
      "by": "pamelafox",
      "descendants": 29,
      "id": 44120306,
      "kids": [
        44131838,
        44128426,
        44131629,
        44131266,
        44131621,
        44129582,
        44131418,
        44130745,
        44128671,
        44127636,
        44127346
      ],
      "score": 113,
      "time": 1748463707,
      "title": "A visual exploration of vector embeddings",
      "type": "story",
      "url": "http://blog.pamelafox.org/2025/05/a-visual-exploration-of-vector.html"
    },
    {
      "by": "longwave",
      "descendants": 412,
      "id": 44127739,
      "kids": [
        44131866,
        44128116,
        44128448,
        44128301,
        44131254,
        44128135,
        44129396,
        44131368,
        44130957,
        44131823,
        44128512,
        44128212,
        44128421,
        44128227,
        44128394,
        44131438,
        44128160,
        44128266,
        44128287,
        44129024,
        44128470,
        44131037,
        44131367,
        44128804,
        44131529,
        44128476,
        44128549,
        44131474,
        44131574,
        44131214,
        44130946,
        44128508,
        44129372,
        44128498,
        44131040,
        44128313,
        44128485,
        44128550,
        44127988,
        44128206,
        44128267,
        44128544,
        44128669,
        44130831,
        44128885,
        44131639,
        44128153,
        44128129,
        44128466,
        44128386,
        44128517,
        44128637,
        44130317,
        44128707,
        44128685,
        44131417,
        44128190,
        44128285,
        44128182,
        44130459,
        44130300,
        44127793,
        44129076,
        44128647,
        44130315,
        44128209,
        44129568,
        44128217,
        44128144,
        44130494,
        44130775,
        44130998,
        44128181
      ],
      "score": 349,
      "time": 1748536864,
      "title": "Human coders are still better than LLMs",
      "type": "story",
      "url": "https://antirez.com/news/153"
    },
    {
      "by": "panic",
      "descendants": 164,
      "id": 44123852,
      "kids": [
        44124339,
        44124530,
        44124236,
        44129646,
        44125251,
        44124307,
        44124157,
        44129162,
        44126279,
        44125261,
        44126072,
        44128642,
        44127732,
        44125167,
        44129211,
        44129398,
        44126491,
        44129724,
        44130814,
        44127073,
        44126075,
        44126038,
        44125892,
        44126300,
        44126938,
        44125281,
        44124525,
        44126037,
        44129914,
        44127080,
        44124982,
        44124588,
        44125983,
        44127699,
        44128773,
        44126083,
        44124767,
        44124187,
        44124775,
        44126427,
        44127577,
        44124326,
        44126950,
        44130667,
        44124929,
        44125361,
        44125530,
        44127470,
        44125796
      ],
      "score": 355,
      "time": 1748503982,
      "title": "Gurus of 90s Web Design: Zeldman, Siegel, Nielsen",
      "type": "story",
      "url": "https://cybercultural.com/p/web-design-1997/"
    },
    {
      "by": "bookofjoe",
      "descendants": 0,
      "id": 44107828,
      "score": 15,
      "time": 1748359268,
      "title": "Editing repeats in Huntington's:fewer somatic repeat expansions in patient cells",
      "type": "story",
      "url": "https://www.nature.com/articles/s41588-025-02172-8"
    },
    {
      "by": "surprisetalk",
      "descendants": 7,
      "id": 44115244,
      "kids": [
        44131628,
        44131461,
        44131414,
        44131686,
        44131512,
        44115276
      ],
      "score": 14,
      "time": 1748434904,
      "title": "Flash Back: An \"oral\" history of Flash",
      "type": "story",
      "url": "https://goodinternetmagazine.com/oral-history-of-flash/"
    },
    {
      "by": "pvg",
      "descendants": 10,
      "id": 44127173,
      "kids": [
        44128592,
        44128825,
        44128306,
        44127788,
        44127916,
        44127187,
        44129142
      ],
      "score": 102,
      "text": "<a href=\"https:&#x2F;&#x2F;xcancel.com&#x2F;keenanisalive&#x2F;status&#x2F;1925225500659658999\" rel=\"nofollow\">https:&#x2F;&#x2F;xcancel.com&#x2F;keenanisalive&#x2F;status&#x2F;1925225500659658999</a>",
      "time": 1748533413,
      "title": "Putting Rigid Bodies to Rest",
      "type": "story",
      "url": "https://twitter.com/keenanisalive/status/1925225500659658999"
    },
    {
      "by": "protonbob",
      "descendants": 58,
      "id": 44127027,
      "kids": [
        44131830,
        44127792,
        44129900,
        44128052,
        44128815,
        44130845,
        44127813,
        44130102,
        44127968,
        44129107,
        44130538,
        44127693,
        44128137,
        44127172,
        44127535,
        44130294,
        44127977,
        44129134,
        44127691,
        44127877,
        44129470,
        44127963,
        44129666,
        44128040
      ],
      "score": 91,
      "time": 1748532617,
      "title": "The flip phone web: browsing with the original Opera Mini",
      "type": "story",
      "url": "https://www.spacebar.news/the-flip-phone-web-browsing-with-the-original-opera-mini/"
    },
    {
      "by": "AbuAssar",
      "descendants": 42,
      "id": 44126264,
      "kids": [
        44131845,
        44127509,
        44127166,
        44127648,
        44127904,
        44128122,
        44131683,
        44127492,
        44126926
      ],
      "score": 138,
      "time": 1748527527,
      "title": "Nova: A JavaScript and WebAssembly engine written in Rust",
      "type": "story",
      "url": "https://trynova.dev/"
    },
    {
      "by": "luu",
      "descendants": 1,
      "id": 44104653,
      "kids": [
        44108571
      ],
      "score": 21,
      "time": 1748330206,
      "title": "Grid-Free Approach to Partial Differential Equations on Volumetric Domains [pdf]",
      "type": "story",
      "url": "http://rohansawhney.io/RohanSawhneyPhDThesis.pdf"
    },
    {
      "by": "mooreds",
      "descendants": 71,
      "id": 44108139,
      "kids": [
        44127597,
        44130340,
        44128123,
        44130526,
        44127155,
        44127160,
        44127830,
        44127217,
        44128576,
        44131022,
        44127405
      ],
      "score": 90,
      "time": 1748361169,
      "title": "Why Is Everybody Knitting Chickens?",
      "type": "story",
      "url": "https://ironicsans.ghost.io/why-is-everybody-knitting-chickens/"
    },
    {
      "by": "ibobev",
      "descendants": 0,
      "id": 44108590,
      "score": 6,
      "time": 1748364276,
      "title": "Car Physics for Games (2003)",
      "type": "story",
      "url": "https://www.asawicki.info/Mirror/Car%20Physics%20for%20Games/Car%20Physics%20for%20Games.html"
    },
    {
      "by": "gnabgib",
      "descendants": 29,
      "id": 44131411,
      "kids": [
        44131623,
        44131589,
        44131812,
        44131625,
        44131680,
        44131573,
        44131576,
        44131517,
        44131813,
        44131662
      ],
      "score": 34,
      "time": 1748561691,
      "title": "Caffeine induces age-dependent brain complexity and criticality during sleep",
      "type": "story",
      "url": "https://www.nature.com/articles/s42003-025-08090-z"
    },
    {
      "by": "dangtony98",
      "id": 44127948,
      "score": 1,
      "time": 1748538078,
      "title": "Infisical (YC W23) Is Hiring Full Stack Engineers (TypeScript) in US and Canada",
      "type": "job",
      "url": "https://www.ycombinator.com/companies/infisical/jobs/vGwCQVk-full-stack-engineer-us-canada"
    },
    {
      "by": "_tqr3",
      "descendants": 345,
      "id": 44128901,
      "kids": [
        44130899,
        44130208,
        44129244,
        44129356,
        44129929,
        44129968,
        44129263,
        44129466,
        44130142,
        44129288,
        44129559,
        44131381,
        44129207,
        44130566,
        44130619,
        44131298,
        44130888,
        44130095,
        44129522,
        44129532,
        44130918,
        44129550,
        44129740,
        44129443,
        44131191,
        44129483,
        44129247,
        44130636,
        44129265,
        44130117,
        44129266,
        44129194,
        44130168,
        44130802,
        44129205,
        44129857,
        44129795
      ],
      "score": 221,
      "time": 1748543962,
      "title": "Airlines are charging solo passengers higher fares than groups",
      "type": "story",
      "url": "https://thriftytraveler.com/news/airlines/airlines-charging-solo-travelers-higher-fares/"
    },
    {
      "by": "lucemia51",
      "descendants": 32,
      "id": 44123098,
      "kids": [
        44124976,
        44123606,
        44128505,
        44123296,
        44125242,
        44127989,
        44125555,
        44128213,
        44123169,
        44124042,
        44123580,
        44123733,
        44123287,
        44123236,
        44124279
      ],
      "score": 314,
      "text": "Hi HN,<p>I built typed-ffmpeg, a Python package that lets you build FFmpeg filter graphs with full type safety, autocomplete, and validation. It’s inspired by ffmpeg-python, but addresses some long-standing issues like lack of IDE support and fragile CLI strings.<p>What’s New in v3.0:\n •  Source filter support (e.g. color, testsrc, etc.)\n •  Input stream selection (e.g. [0:a], [1:v])\n •  A new interactive playground where you can:\n • Build filter graphs visually\n • Generate both FFmpeg CLI and typed Python code\n • Paste existing FFmpeg commands and reverse-parse them into graphs<p>Playground link: <a href=\"https:&#x2F;&#x2F;livingbio.github.io&#x2F;typed-ffmpeg-playground&#x2F;\" rel=\"nofollow\">https:&#x2F;&#x2F;livingbio.github.io&#x2F;typed-ffmpeg-playground&#x2F;</a>\n(It’s open source and runs fully in-browser.)<p>The internal core also supports converting CLI → graph → typed Python code. This is useful for building educational tools, FFmpeg IDEs, or visual editors.<p>I’d love feedback, bug reports, or ideas for next steps. If you’ve ever struggled with FFmpeg’s CLI or tried to teach it, this might help.<p>Thanks!\n— David (maintainer)",
      "time": 1748492591,
      "title": "Show HN: Typed-FFmpeg 3.0–Typed Interface to FFmpeg and Visual Filter Editor",
      "type": "story",
      "url": "https://github.com/livingbio/typed-ffmpeg"
    },
    {
      "by": "chrisjj",
      "descendants": 29,
      "id": 44124808,
      "kids": [
        44126455,
        44127571,
        44125744,
        44126813,
        44126402,
        44125753,
        44128881,
        44125516
      ],
      "score": 94,
      "time": 1748516661,
      "title": "Simple programming language with offline usable browser IDE",
      "type": "story",
      "url": "https://tiki.li/apps/tut_learn.html?v=2505e"
    },
    {
      "by": "panic",
      "descendants": 31,
      "id": 44129529,
      "kids": [
        44131463,
        44129796,
        44130977,
        44130653,
        44129818,
        44130386,
        44129866
      ],
      "score": 79,
      "time": 1748547740,
      "title": "Untrusted chatbot AI between you & the internet is a disaster waiting to happen",
      "type": "story",
      "url": "https://macwright.com/2025/05/29/putting-an-untrusted-chat-layer-is-a-disaster"
    },
    {
      "by": "viveknathani_",
      "descendants": 17,
      "id": 44125489,
      "kids": [
        44127018,
        44131204,
        44131375,
        44130535,
        44127386,
        44130687,
        44128446,
        44131185,
        44129644,
        44127494,
        44127754,
        44128162,
        44127943
      ],
      "score": 85,
      "time": 1748522364,
      "title": "I started a little math club in Bangalore",
      "type": "story",
      "url": "https://teachyourselfmath.app/club"
    },
    {
      "by": "soheilpro",
      "descendants": 280,
      "id": 44122582,
      "kids": [
        44129047,
        44125674,
        44123857,
        44123955,
        44123730,
        44123963,
        44123331,
        44123837,
        44123706,
        44123562,
        44123028,
        44130674,
        44123145,
        44126987,
        44125757,
        44125761,
        44124823,
        44125276,
        44123838,
        44127060,
        44123096,
        44125712,
        44131162,
        44131026,
        44126316,
        44126646,
        44126460,
        44123564,
        44129626,
        44123720,
        44129151,
        44123107,
        44125790,
        44127454,
        44123330,
        44125634,
        44123380,
        44123402,
        44124720
      ],
      "score": 338,
      "time": 1748485828,
      "title": "Run a C# file directly using dotnet run app.cs",
      "type": "story",
      "url": "https://devblogs.microsoft.com/dotnet/announcing-dotnet-run-app/"
    },
    {
      "by": "samclemens",
      "descendants": 24,
      "id": 44123486,
      "kids": [
        44131768,
        44126752,
        44127368
      ],
      "score": 64,
      "time": 1748498287,
      "title": "The Maid Who Restored Charles II",
      "type": "story",
      "url": "https://www.historytoday.com/archive/feature/maid-who-restored-charles-ii"
    },
    {
      "by": "LorenDB",
      "descendants": 19,
      "id": 44127177,
      "kids": [
        44128321,
        44129789,
        44127722,
        44129963,
        44127654,
        44127633,
        44127279,
        44127823
      ],
      "score": 43,
      "time": 1748533436,
      "title": "Civil War in 3D: Stereographs from the New-York Historical Society (2015)",
      "type": "story",
      "url": "https://www.nyhistory.org/blogs/civil-war-in-3d-stereographs-from-the-new-york-historical-society"
    },
    {
      "by": "pseudolus",
      "descendants": 1,
      "id": 44106299,
      "kids": [
        44131726
      ],
      "score": 17,
      "time": 1748349053,
      "title": "Bertrand Piccard's Big Hydrogen Adventure – hydrogen fuel-cell aircraft",
      "type": "story",
      "url": "https://spectrum.ieee.org/hydrogen-fuel-cell-aircraft"
    },
    {
      "by": "returningfory2",
      "descendants": 0,
      "id": 44130295,
      "score": 7,
      "time": 1748552019,
      "title": "Notes on Tunisia",
      "type": "story",
      "url": "https://mattlakeman.org/2025/05/29/notes-on-tunisia/"
    },
    {
      "by": "surprisetalk",
      "descendants": 514,
      "id": 44112686,
      "kids": [
        44126652,
        44127351,
        44112977,
        44127085,
        44127541,
        44127786,
        44128174,
        44131607,
        44127089,
        44127366,
        44131687,
        44128197,
        44128166,
        44126621,
        44126541,
        44130450,
        44127116,
        44126996,
        44127295,
        44127829,
        44126865,
        44130167,
        44127245,
        44126658,
        44127885,
        44126773,
        44126663,
        44127113,
        44126672,
        44127283,
        44129040,
        44127087,
        44129067,
        44131332,
        44127944,
        44131220,
        44126871,
        44127391,
        44128918,
        44126604,
        44128163,
        44127357,
        44127895,
        44128482,
        44130461,
        44130358,
        44127262,
        44127033,
        44126907,
        44129130,
        44128742,
        44128619,
        44127084,
        44126774,
        44128897,
        44128755,
        44126870,
        44112881,
        44126906,
        44112781,
        44112763,
        44126619,
        44128477,
        44126684,
        44126910,
        44126768,
        44126970,
        44129146
      ],
      "score": 288,
      "time": 1748405580,
      "title": "The Polymarket users betting on when Jesus will return",
      "type": "story",
      "url": "https://ericneyman.wordpress.com/2025/03/24/will-jesus-christ-return-in-an-election-year/"
    },
    {
      "by": "coolelectronics",
      "descendants": 43,
      "id": 44101175,
      "kids": [
        44126258,
        44125015,
        44122494,
        44131495,
        44122796,
        44123835,
        44128124,
        44123612,
        44123545,
        44101846,
        44123238,
        44124317,
        44123103,
        44124728,
        44101643,
        44101319,
        44101422,
        44101526,
        44124777,
        44124064
      ],
      "score": 322,
      "time": 1748289985,
      "title": "Show HN: Porting Terraria and Celeste to WebAssembly",
      "type": "story",
      "url": "https://velzie.rip/blog/celeste-wasm"
    },
    {
      "by": "samizdis",
      "descendants": 23,
      "id": 44104832,
      "kids": [
        44128275,
        44129145,
        44129284,
        44130464,
        44130075,
        44128074,
        44127957
      ],
      "score": 32,
      "time": 1748332544,
      "title": "The key to a successful egg drop experiment? Drop it on its side",
      "type": "story",
      "url": "https://arstechnica.com/science/2025/05/the-key-to-a-successful-egg-drop-experiment-drop-it-on-its-side/"
    },
    {
      "by": "chiffre01",
      "descendants": 99,
      "id": 44129603,
      "kids": [
        44131492,
        44130456,
        44130634,
        44130953,
        44130222,
        44130447,
        44130490,
        44130209,
        44130683,
        44131319,
        44131238,
        44130760,
        44130421,
        44130418,
        44130954,
        44130427,
        44130439,
        44130783
      ],
      "score": 86,
      "time": 1748548093,
      "title": "California has got good at building giant batteries",
      "type": "story",
      "url": "https://www.economist.com/united-states/2025/05/22/california-has-got-really-good-at-building-giant-batteries"
    },
    {
      "by": "LorenDB",
      "descendants": 72,
      "id": 44112149,
      "kids": [
        44126167,
        44124051,
        44124829,
        44124289,
        44124019,
        44124153,
        44129054,
        44124145,
        44124789,
        44124040,
        44130967,
        44126047,
        44124494,
        44124249,
        44126169,
        44124749,
        44123999,
        44124244,
        44128323,
        44124066
      ],
      "score": 113,
      "time": 1748397223,
      "title": "High-quality OLED displays now enabling integrated thin and multichannel audio",
      "type": "story",
      "url": "https://www.sciencedaily.com/releases/2025/05/250521125055.htm"
    },
    {
      "by": "suchintan",
      "descendants": 8,
      "id": 44126725,
      "kids": [
        44131192,
        44131345,
        44130930,
        44127211,
        44130515,
        44127148
      ],
      "score": 25,
      "time": 1748530645,
      "title": "Web Bench: a new way to compare AI browser agents",
      "type": "story",
      "url": "https://blog.skyvern.com/web-bench-a-new-way-to-compare-ai-browser-agents/"
    },
    {
      "by": "lezhu",
      "descendants": 40,
      "id": 44124652,
      "kids": [
        44127760,
        44125609,
        44130077,
        44131172,
        44125957,
        44125931,
        44130174,
        44126674,
        44125441,
        44124700,
        44125474,
        44125234,
        44126250,
        44125250,
        44124942
      ],
      "score": 104,
      "text": "I built Staying – a tool that instantly turns your code into interactive animations with no setup required. Just write or paste your code and hit &quot;Visualize&quot;. No installs, no accounts, no configuration.\n*Supports*: Python, JavaScript &amp; experimental C++",
      "time": 1748514571,
      "title": "Show HN: I made a Zero-config tool to visualize your code",
      "type": "story",
      "url": "https://staying.fun/en"
    },
    {
      "by": "todsacerdoti",
      "descendants": 0,
      "id": 44130301,
      "score": 9,
      "time": 1748552037,
      "title": "Net-Negative Cursor",
      "type": "story",
      "url": "https://lukasatkinson.de/2025/net-negative-cursor/"
    },
    {
      "by": "amichail",
      "descendants": 20,
      "id": 44130226,
      "kids": [
        44131488,
        44131267,
        44131181,
        44131154,
        44131341,
        44131076
      ],
      "score": 33,
      "time": 1748551486,
      "title": "Superhuman performance of an LLM on the reasoning tasks of a physician",
      "type": "story",
      "url": "https://arxiv.org/abs/2412.10849"
    },
    {
      "by": "Elliott-Diy",
      "descendants": 5,
      "id": 44111236,
      "kids": [
        44127183
      ],
      "score": 49,
      "text": "Hi HN,<p>I built an OSINT tool called Weather2Geo that helps locate where a screenshot was taken based on the weather widget data visible (e.g. temp, condition, and local time in the taskbar). People often post these without realizing how specific those values can be in combination.<p>It works by comparing the given weather condition, temperature, and time against current data from thousands of cities. It’s timezone-aware, supports fuzzy matching, and groups results geographically to reduce noise.<p>It’s most effective on recent screenshots, ideally taken within the last hour—since weather and daylight conditions change quickly.<p>The tool helps pinpoint likely locations when screenshots lack EXIF data or other traditional OSINT clues.<p>It’s open source here:\n<a href=\"https:&#x2F;&#x2F;github.com&#x2F;elliott-diy&#x2F;Weather2Geo\">https:&#x2F;&#x2F;github.com&#x2F;elliott-diy&#x2F;Weather2Geo</a><p>Would love feedback, bug reports, or to hear if you think this has other use cases.<p>- Elliott",
      "time": 1748385077,
      "title": "Show HN: Weather2Geo – Geolocate screenshots from weather widgets",
      "type": "story",
      "url": "https://github.com/elliott-diy/Weather2Geo"
    },
    {
      "by": "notorious_pgb",
      "descendants": 52,
      "id": 44120241,
      "kids": [
        44121187,
        44120392,
        44121813,
        44123631,
        44120953,
        44121475,
        44123311,
        44124590,
        44123361,
        44121900,
        44121061,
        44120660,
        44120535,
        44120723,
        44120743,
        44120858,
        44121566,
        44120712,
        44120758,
        44123041
      ],
      "score": 244,
      "text": "This started as a throwaway metaphor in a blog post, but is now fully runnable: a toy RTOS with preemptive multitasking inside of Super Mario Bros. on the NES.<p>Essentially, this is:<p>- A rudimentary preemptive RTOS<p>- Using an unmodified NES emulator (FCEUX) as the CPU<p><pre><code>    - &quot;Unmodified&quot; depending on how you define terms\n</code></pre>\n- With emulator save states as the thread contexts<p>- With support for (very basic) mutexes, interrupt masking, and condition variables<p>- Demonstrated using Super Mario Bros. 1-1 with sections of the map dedicated to various synchronization primitives<p>There are many simplifications and shortcuts taken (doesn&#x27;t even have task priorities), and it doesn&#x27;t map 1:1 to true multithreading (e.g., emulator save states represent the state of the entire machine including RAM, whereas thread contexts represent a much more minimal slice), but I think it&#x27;s A) pretty interesting and B) a unique visceral explanation of threads.",
      "time": 1748463343,
      "title": "A toy RTOS inside Super Mario Bros. using emulator save states",
      "type": "story",
      "url": "https://prettygoodblog.com/p/what-threads-are-part-2"
    },
    {
      "by": "mickelsen",
      "descendants": 25,
      "id": 44123289,
      "kids": [
        44127370,
        44124299,
        44129403,
        44125249,
        44124685,
        44126892,
        44125294,
        44125010,
        44124462,
        44126268,
        44125621
      ],
      "score": 106,
      "time": 1748495143,
      "title": "RSyncUI – A SwiftUI based macOS GUI for rsync",
      "type": "story",
      "url": "https://github.com/rsyncOSX/RsyncUI"
    },
    {
      "by": "susam",
      "descendants": 17,
      "id": 44097362,
      "kids": [
        44126602,
        44125298,
        44131608,
        44125263,
        44125965
      ],
      "score": 53,
      "time": 1748267025,
      "title": "From Finite Integral Domains to Finite Fields",
      "type": "story",
      "url": "https://susam.net/from-finite-integral-domains-to-finite-fields.html"
    },
    {
      "by": "nsoonhui",
      "descendants": 243,
      "id": 44087809,
      "kids": [
        44122830,
        44124175,
        44123283,
        44122999,
        44123558,
        44122537,
        44122471,
        44121275,
        44120917,
        44121030,
        44127153,
        44122564,
        44127403,
        44120802,
        44123106,
        44122911,
        44125608,
        44121363,
        44121340,
        44124292,
        44126065,
        44121741,
        44121689,
        44124301,
        44125116,
        44121731,
        44127158,
        44123188,
        44127692,
        44125303,
        44123651,
        44121821,
        44126770,
        44120733,
        44121365,
        44121560,
        44122930,
        44124269,
        44123460,
        44123475,
        44124401,
        44121052,
        44123132,
        44125885,
        44122672,
        44122948,
        44121745
      ],
      "score": 193,
      "time": 1748180816,
      "title": "What If We Had Bigger Brains? Imagining Minds Beyond Ours",
      "type": "story",
      "url": "https://writings.stephenwolfram.com/2025/05/what-if-we-had-bigger-brains-imagining-minds-beyond-ours/"
    },
    {
      "by": "areoform",
      "descendants": 1,
      "id": 44131113,
      "kids": [
        44131798
      ],
      "score": 9,
      "time": 1748558875,
      "title": "MIT physicists discover a new type of superconductor that's also a magnet",
      "type": "story",
      "url": "https://news.mit.edu/2025/mit-physicists-discover-new-type-superconductor-also-magnet-0522"
    },
    {
      "by": "zdw",
      "descendants": 0,
      "id": 44128503,
      "kids": [
        44131796
      ],
      "score": 11,
      "time": 1748541466,
      "title": "Kea DHCP: Local Vulnerabilities in Many Linux and BSD Distributions",
      "type": "story",
      "url": "https://security.opensuse.org/2025/05/28/kea-dhcp-security-issues.html"
    },
    {
      "by": "BerislavLopac",
      "descendants": 156,
      "id": 44119890,
      "kids": [
        44122045,
        44122924,
        44122543,
        44121032,
        44121835,
        44123005,
        44120484,
        44120103,
        44126900,
        44124975,
        44122881,
        44120615,
        44120811,
        44120587,
        44120530,
        44120288,
        44122473,
        44120441,
        44122064,
        44126404,
        44123285,
        44121571,
        44120541,
        44120342
      ],
      "score": 142,
      "time": 1748461067,
      "title": "What does “Undecidable” mean, anyway",
      "type": "story",
      "url": "https://buttondown.com/hillelwayne/archive/what-does-undecidable-mean-anyway/"
    },
    {
      "by": "Alupis",
      "descendants": 0,
      "id": 44128677,
      "score": 10,
      "time": 1748542514,
      "title": "The Beam Book: Understanding the Erlang Runtime System",
      "type": "story",
      "url": "https://blog.stenmans.org/theBeamBook/"
    },
    {
      "by": "pseudolus",
      "descendants": 42,
      "id": 44106285,
      "kids": [
        44129812,
        44130521,
        44126063,
        44127289,
        44125142,
        44127646,
        44127570,
        44125107,
        44123868,
        44123981,
        44124912,
        44123825,
        44125525,
        44123876,
        44127967,
        44123846,
        44124041,
        44125008,
        44128084
      ],
      "score": 81,
      "time": 1748348952,
      "title": "Chimps strike stones against trees as communication, study suggests",
      "type": "story",
      "url": "https://phys.org/news/2025-05-year-chimpanzees-stones-trees-communication.html"
    },
    {
      "by": "ibobev",
      "descendants": 9,
      "id": 44096823,
      "kids": [
        44122495,
        44122066,
        44123135,
        44122293,
        44124190,
        44122536
      ],
      "score": 110,
      "time": 1748262593,
      "title": "Grass Rendering Series",
      "type": "story",
      "url": "https://hexaquo.at/pages/grass-rendering-series-part-1-theory/"
    },
    {
      "by": "moonikakiss",
      "descendants": 84,
      "id": 44121177,
      "kids": [
        44123917,
        44122697,
        44122366,
        44121684,
        44125693,
        44123116,
        44130761,
        44122407,
        44121648,
        44124741,
        44121742,
        44126202,
        44126005,
        44122416,
        44123517,
        44122414,
        44122640,
        44121680,
        44123682,
        44123438,
        44121655,
        44123114,
        44124166,
        44124245
      ],
      "score": 149,
      "time": 1748470938,
      "title": "HTAP is Dead",
      "type": "story",
      "url": "https://www.mooncake.dev/blog/htap-is-dead"
    },
    {
      "by": "thinkalone",
      "descendants": 108,
      "id": 44120507,
      "kids": [
        44121329,
        44121478,
        44126217,
        44121456,
        44121609,
        44121488,
        44120988,
        44121754,
        44130245,
        44121729,
        44122566,
        44122171,
        44125349,
        44124232,
        44121079,
        44122282,
        44124739,
        44123990,
        44124940,
        44121301,
        44122466,
        44120962,
        44123515,
        44123347,
        44121830,
        44126507,
        44123018,
        44123493,
        44131052,
        44121398,
        44122896,
        44122345,
        44129461,
        44122993,
        44124852,
        44123413,
        44122681,
        44123768,
        44122500,
        44120967
      ],
      "score": 383,
      "time": 1748465250,
      "title": "Long live American Science and Surplus",
      "type": "story",
      "url": "https://milwaukeerecord.com/city-life/long-live-american-science-surplus-which-needs-your-help/"
    },
    {
      "by": "benbreen",
      "descendants": 3,
      "id": 44123474,
      "kids": [
        44126545,
        44128723,
        44126948,
        44123748
      ],
      "score": 25,
      "time": 1748498112,
      "title": "The Art of the Critic",
      "type": "story",
      "url": "https://www.metropolitanreview.org/p/the-art-of-the-critic"
    },
    {
      "by": "bookofjoe",
      "descendants": 1,
      "id": 44130673,
      "kids": [
        44131268
      ],
      "score": 10,
      "time": 1748554926,
      "title": "The Vagus Nerve Industry",
      "type": "story",
      "url": "https://www.newstatesman.com/culture/books/book-of-the-day/2025/05/the-vagus-nerve-industry"
    },
    {
      "by": "tosh",
      "descendants": 80,
      "id": 44123953,
      "kids": [
        44127140,
        44125740,
        44124732,
        44124309,
        44124980,
        44124669,
        44125550,
        44124192,
        44124497,
        44129960,
        44127049,
        44125494,
        44125585,
        44124859
      ],
      "score": 119,
      "time": 1748505535,
      "title": "Edamagit: Magit for VSCode",
      "type": "story",
      "url": "https://github.com/kahole/edamagit"
    },
    {
      "by": "Bluestein",
      "descendants": 12,
      "id": 44102712,
      "kids": [
        44124703,
        44123273,
        44123742,
        44123400
      ],
      "score": 47,
      "time": 1748303351,
      "title": "Apollo Lunar Surface Journal",
      "type": "story",
      "url": "https://www.nasa.gov/history/alsj/"
    },
    {
      "by": "pact_inference",
      "descendants": 6,
      "id": 44126214,
      "kids": [
        44126446,
        44127069
      ],
      "score": 16,
      "time": 1748527157,
      "title": "Domain Adaptation of Base Models + ShadowdarkQA Bench",
      "type": "story",
      "url": "https://gygaxtest.com/posts/continued_pretraining_for-rules/"
    },
    {
      "by": "pseudolus",
      "descendants": 1,
      "id": 44126408,
      "kids": [
        44131289
      ],
      "score": 7,
      "time": 1748528432,
      "title": "New Adaptive Optics Shows Stunning Details of Our Star's Atmosphere",
      "type": "story",
      "url": "https://nso.edu/press-release/new-adaptive-optics-shows-stunning-details-of-our-stars-atmosphere/"
    },
    {
      "by": "jmsflknr",
      "descendants": 280,
      "id": 44117779,
      "kids": [
        44123619,
        44122983,
        44122654,
        44118449,
        44121142,
        44119728,
        44119189,
        44123207,
        44122931,
        44118555,
        44123642,
        44121465,
        44121053,
        44118622,
        44124712,
        44122798,
        44118580,
        44121556,
        44119034,
        44124002,
        44122936,
        44126418,
        44123359,
        44124970,
        44118515,
        44124619,
        44118692,
        44123734,
        44122949,
        44122932,
        44120067,
        44119663,
        44118935,
        44121740,
        44124133,
        44123802,
        44120578,
        44123882,
        44121894,
        44118794,
        44119537,
        44118495,
        44118837,
        44121818,
        44122648,
        44123827,
        44124709,
        44119500,
        44121120,
        44123152,
        44124591,
        44119475,
        44119194,
        44124164,
        44124503,
        44120839,
        44118862
      ],
      "score": 438,
      "time": 1748450029,
      "title": "Japan Post launches 'digital address' system",
      "type": "story",
      "url": "https://www.japantimes.co.jp/business/2025/05/27/companies/japan-post-digital-address/"
    },
    {
      "by": "robinhouston",
      "descendants": 34,
      "id": 44099591,
      "kids": [
        44126555,
        44125923,
        44127195,
        44126467,
        44126553,
        44126235,
        44127232,
        44125720,
        44100801,
        44126547,
        44125718,
        44101568,
        44126936
      ],
      "score": 33,
      "time": 1748280796,
      "title": "Walkers' Sensations Poppadoms vs. HMRC: The Chip of Theseus",
      "type": "story",
      "url": "https://www.ft.com/content/3a64f96e-3214-48ba-9da4-76b3fb7ab8c1"
    },
    {
      "by": "alberto-m",
      "descendants": 19,
      "id": 44087898,
      "kids": [
        44126958,
        44121105,
        44121474,
        44123600,
        44123959,
        44123636,
        44122128,
        44126361,
        44121620,
        44123949,
        44124237,
        44122141,
        44126521,
        44122647,
        44123037
      ],
      "score": 99,
      "time": 1748181607,
      "title": "A Visual History of Chessmen",
      "type": "story",
      "url": "https://chesshistory.github.io/"
    },
    {
      "by": "bobsingor",
      "descendants": 14,
      "id": 44126177,
      "kids": [
        44131301,
        44130818,
        44126178,
        44130363,
        44130469,
        44131484,
        44129041
      ],
      "score": 18,
      "time": 1748526938,
      "title": "Show HN: Open Source PDF Viewer Using Chrome’s PDF Engine (MIT, WebAssembly)",
      "type": "story",
      "url": "https://www.embedpdf.com/"
    },
    {
      "by": "mpweiher",
      "descendants": 0,
      "id": 44130915,
      "score": 6,
      "time": 1748556978,
      "title": "The Atomic Airplane",
      "type": "story",
      "url": "https://whatisnuclear.com/the-story-of-the-atomic-airplane.html"
    },
    {
      "by": "AlexeyBrin",
      "descendants": 4,
      "id": 44087248,
      "kids": [
        44123004,
        44122199
      ],
      "score": 77,
      "time": 1748175044,
      "title": "Basic for the Raspberry Pi Pico and Pico 2",
      "type": "story",
      "url": "https://geoffg.net/picomite.html"
    },
    {
      "by": "caust1c",
      "descendants": 90,
      "id": 44126753,
      "kids": [
        44127737,
        44127318,
        44127065,
        44126925,
        44127526,
        44126840,
        44126888,
        44128104,
        44127474
      ],
      "score": 105,
      "time": 1748530777,
      "title": "ClickHouse raises $350M Series C",
      "type": "story",
      "url": "https://clickhouse.com/blog/clickhouse-raises-350-million-series-c-to-power-analytics-for-ai-era"
    },
    {
      "by": "zdw",
      "descendants": 200,
      "id": 44094109,
      "kids": [
        44116108,
        44113540,
        44113518,
        44117850,
        44113678,
        44117025,
        44113976,
        44113381,
        44114691,
        44113854,
        44114270,
        44120209,
        44113763,
        44113985,
        44113395,
        44113674,
        44116614,
        44119476,
        44113812,
        44114066,
        44113730,
        44113645,
        44113856,
        44116215,
        44113317,
        44113792,
        44113464,
        44119264,
        44113425,
        44113496,
        44114700,
        44113572,
        44113379
      ],
      "score": 183,
      "time": 1748235685,
      "title": "A thought on JavaScript \"proof of work\" anti-scraper systems",
      "type": "story",
      "url": "https://utcc.utoronto.ca/~cks/space/blog/web/JavaScriptScraperObstacles"
    },
    {
      "by": "anarazel",
      "descendants": 170,
      "id": 44117722,
      "kids": [
        44118217,
        44118042,
        44118816,
        44119089,
        44117959,
        44118517,
        44119549,
        44121306,
        44119391,
        44118657,
        44120054,
        44124260,
        44117842,
        44123935,
        44118070,
        44118607,
        44121555,
        44122031,
        44118823,
        44122802,
        44122614,
        44118323,
        44125645,
        44119613,
        44125318,
        44118748
      ],
      "score": 338,
      "time": 1748449700,
      "title": "Compiler Explorer and the promise of URLs that last forever",
      "type": "story",
      "url": "https://xania.org/202505/compiler-explorer-urls-forever"
    },
    {
      "by": "speckx",
      "descendants": 0,
      "id": 44129539,
      "score": 10,
      "time": 1748547789,
      "title": "Scientists Have Clear Evidence of Martian Atmosphere 'Sputtering'",
      "type": "story",
      "url": "https://www.sciencealert.com/scientists-have-clear-evidence-of-martian-atmosphere-sputtering"
    },
    {
      "by": "katrinarodri",
      "descendants": 426,
      "id": 44118023,
      "kids": [
        44118251,
        44120049,
        44118550,
        44119477,
        44119013,
        44123462,
        44119032,
        44118176,
        44119337,
        44120691,
        44122106,
        44123297,
        44119038,
        44121625,
        44119348,
        44125081,
        44123796,
        44118442,
        44125891,
        44119659,
        44120316,
        44118482,
        44127566,
        44118885,
        44118367,
        44119509,
        44119088,
        44122693,
        44124531,
        44121862,
        44124771,
        44123867,
        44128056,
        44119867,
        44118190,
        44123333,
        44119313,
        44119497,
        44118572,
        44118913,
        44123741,
        44118249,
        44119704,
        44118599,
        44118481,
        44125850,
        44120236,
        44118431,
        44124913,
        44118357,
        44122004,
        44118630,
        44119494,
        44118603,
        44119654,
        44120040,
        44126003,
        44120151,
        44120555,
        44118381,
        44121386,
        44118423,
        44118197,
        44126017,
        44119134,
        44119004,
        44119188,
        44124889,
        44122731,
        44118652,
        44118995,
        44118745,
        44119109,
        44123637,
        44118592,
        44125633,
        44119689,
        44124589,
        44127987,
        44118605,
        44119720
      ],
      "score": 575,
      "text": "A year ago, my co-founder launched Desktop Docs here on HN. It&#x27;s a Mac app we built with Electron that uses CLIP embeddings to search photos and videos locally with natural language. We got positive feedback from HN and our first paying customers, but the app was almost 1GB and clunky to use.<p>TLDR; rebuilding in Rust was the right move.<p>So we rewrote the app with Rust and Tauri and here are the results:<p>- App size is 83% smaller: 1GB → 172MB\n- DMG Installer is 70% smaller: 232MB → 69.5MB\n- Indexing files is faster: A 38-minute video now indexes in ~3 minutes instead of 10-14 minutes\n- Overall more stability (old app used to randomly crash)<p>The original version worked, but it didn&#x27;t perform well when you tried indexing thousands of images or large videos. We lost a lot of time struggling to optimize Electron’s main-renderer process communication and ended up with a complex worker system to process large batches of media files.<p>For months we wrestled with indecision about continuing to optimize the Electron app vs. starting a full rebuild in Swift or Rust. The main thing holding us back was that we hadn’t coded in Swift in almost 10 years and we didn’t know Rust very well.<p>What finally broke us was when users complained the app crashed their video calls just running in background. I guess that’s what happens when you ship an app with Chromium that takes up 200mb before any application code.<p>Today the app still uses CLIP for embeddings and Redis for vector storage and search, except Rust now handles the image and video processing pipeline and all the file I&#x2F;O to let users browse their entire machine, not just indexed files.<p>For the UI, we decided to rebuild it from scratch instead of porting over the old UI. This turned out well because it resulted in a cleaner, simpler UI after living with the complexity of the old version.<p>The trickiest part of the migration was learning Rust. LLMs definitely help, but the Rust&#x2F;Tauri community just isn’t as mature compared to Electron. Bundling Redis into the app was a permissioning nightmare, but I think our solution with Rust handles this better than what we had with Electron.<p>All in, the rebuild took about two months and still needs some more work to be at total parity with its Electron version, but the core functionality of indexing and searching files is way more performant than before and that made it worth the time. Sometimes you gotta throw away working code to build the right thing.<p>AMA about Rust&#x2F;Tauri migration, Redis bundling nightmares, how CLIP embeddings work for local semantic search, or why Electron isn&#x27;t always the answer.",
      "time": 1748451191,
      "title": "Show HN: I rewrote my Mac Electron app in Rust",
      "type": "story",
      "url": "https://desktopdocs.com/?v=2025"
    },
    {
      "by": "hahahacorn",
      "descendants": 0,
      "id": 44101997,
      "score": 77,
      "time": 1748296188,
      "title": "Unlocking Ractors: class instance variables in Ruby",
      "type": "story",
      "url": "https://byroot.github.io/ruby/performance/2025/05/24/unlocking-ractors-class-variables.html"
    },
    {
      "by": "bveiseh",
      "descendants": 24,
      "id": 44117465,
      "kids": [
        44120360,
        44128728,
        44119206,
        44118218,
        44127697,
        44119091,
        44117925,
        44118538,
        44123693,
        44117986
      ],
      "score": 58,
      "text": "Hey HN! We&#x27;re Brandon, Sam, and Akul from MindFort (<a href=\"https:&#x2F;&#x2F;mindfort.ai\">https:&#x2F;&#x2F;mindfort.ai</a>). We&#x27;re building autonomous AI agents that continuously find, validate, and patch security vulnerabilities in web applications—essentially creating an AI red team that runs 24&#x2F;7.<p>Here&#x27;s a demo: <a href=\"https:&#x2F;&#x2F;www.loom.com&#x2F;share&#x2F;e56faa07d90b417db09bb4454dce8d5a\" rel=\"nofollow\">https:&#x2F;&#x2F;www.loom.com&#x2F;share&#x2F;e56faa07d90b417db09bb4454dce8d5a</a><p>Security testing today is increasingly challenging. Traditional scanners generate 30-50% false positives, drowning engineering teams in noise. Manual penetration testing happens quarterly at best, costs tens of thousands per assessment, and takes weeks to complete. Meanwhile, teams are shipping code faster than ever with AI assistance, but security reviews have become an even bigger bottleneck.<p>All three of us encountered this problem from different angles. Brandon worked at ProjectDiscovery building the Nuclei scanner, then at NetSPI (one of the largest pen testing firms) building AI tools for testers. Sam was a senior engineer at Salesforce leading security for Tableau. He dealt firsthand with juggling security findings and managing remediations. Akul did his master&#x27;s on AI and security, co-authored papers on using LLMs for ecurity attacks, and participated in red-teams at OpenAI and Anthropic.<p>We all realized that AI agents were going to fundamentally change security testing, and that the wave of AI-generated code would need an equally powerful solution to keep it secure.<p>We&#x27;ve built AI agents that perform reconnaissance, exploit vulnerabilities, and suggest patches—similar to how a human penetration tester works. The key difference from traditional scanners is that our agents validate exploits in runtime environments before reporting them, reducing false positives.<p>We use multiple foundational models orchestrated together. The agents perform recon to understand the attack surface, then use that context to inform testing strategies. When they find potential vulnerabilities, they spin up isolated environments to validate exploitation. If successful, they analyze the codebase to generate contextual patches.<p>What makes this different from existing tools? Validation through exploitation: We don&#x27;t just pattern-match—we exploit vulnerabilities to prove they&#x27;re real; - Codebase integration: The agents understand your code structure to find complex logic bugs and suggest appropriate fixes; - Continuous operation: Instead of point-in-time assessments, we&#x27;re constantly testing as your code evolves; - Attack chain discovery: The agents can find multi-step vulnerabilities that require chaining different issues together.<p>We&#x27;re currently in early access, working with initial partners to refine the platform. Our agents are already finding vulnerabilities that other tools miss and scoring well on penetration testing benchmarks.<p>Looking forward to your thoughts and comments!",
      "time": 1748448044,
      "title": "Launch HN: MindFort (YC X25) – AI agents for continuous pentesting",
      "type": "story"
    },
    {
      "by": "admtal",
      "descendants": 144,
      "id": 44103839,
      "kids": [
        44106366,
        44104643,
        44104601,
        44104748,
        44112577,
        44109824,
        44106115,
        44106079,
        44104244,
        44104440,
        44104402,
        44105485,
        44105456,
        44109044,
        44104319,
        44103948,
        44106026,
        44106029,
        44110344,
        44105261,
        44105776,
        44107390,
        44104756,
        44110495,
        44108118,
        44115393,
        44104569,
        44105072,
        44104917,
        44104370,
        44105167,
        44104589,
        44113124,
        44104725,
        44104588,
        44110056,
        44111468,
        44109279,
        44104340,
        44109625,
        44108331,
        44111527,
        44106905,
        44105083,
        44106466,
        44104516,
        44108578,
        44114355,
        44105464,
        44111580,
        44105516,
        44106483,
        44107639,
        44107792,
        44107061,
        44105960,
        44111196,
        44103874,
        44111036,
        44112757,
        44105999,
        44111533,
        44106995,
        44104480,
        44104604,
        44105264,
        44105653,
        44104871,
        44105795,
        44106210,
        44104713
      ],
      "score": 413,
      "text": "I made a tetris variant<p>Aims to remove all stress, and focus the game on what I like the best - stacking.<p>No timer, no score, no gravity.  Move to the next piece when you are ready, and clear lines when you are ready.<p>Separate mobile + desktop controls",
      "time": 1748318287,
      "title": "Show HN: Lazy Tetris",
      "type": "story",
      "url": "https://lazytetris.com/"
    },
    {
      "by": "walterbell",
      "descendants": 0,
      "id": 44128453,
      "score": 20,
      "time": 1748541231,
      "title": "A Spyware App Compromised Assad's Army",
      "type": "story",
      "url": "https://newlinesmag.com/reportage/how-a-spyware-app-compromised-assads-army/"
    },
    {
      "by": "error404x",
      "descendants": 232,
      "id": 44118818,
      "kids": [
        44121224,
        44119182,
        44119047,
        44119037,
        44122561,
        44119044,
        44122465,
        44122146,
        44122801,
        44121601,
        44119993,
        44120218,
        44128724,
        44123509,
        44119652,
        44122653,
        44120934
      ],
      "score": 415,
      "time": 1748455142,
      "title": "Deepseek R1-0528",
      "type": "story",
      "url": "https://huggingface.co/deepseek-ai/DeepSeek-R1-0528"
    },
    {
      "by": "lafond",
      "descendants": 186,
      "id": 44117302,
      "kids": [
        44121013,
        44119726,
        44117586,
        44122081,
        44130383,
        44119972,
        44117538,
        44117427,
        44123196,
        44119624,
        44117764,
        44121656,
        44127121,
        44117535,
        44119024,
        44123428,
        44121305,
        44117485,
        44122000,
        44122700,
        44120084,
        44122526,
        44123584,
        44121594,
        44122729,
        44119301,
        44120878,
        44117700,
        44117907,
        44118925,
        44118163,
        44123551,
        44117508,
        44117771,
        44117466,
        44119862,
        44119801,
        44121204,
        44119261,
        44117423,
        44117436,
        44117433,
        44117653,
        44120239,
        44117372,
        44117446,
        44117848
      ],
      "score": 355,
      "time": 1748447317,
      "title": "Getting a Cease and Desist from Waffle House",
      "type": "story",
      "url": "https://www.jack.bio/blog/wafflehouse"
    },
    {
      "by": "pramodbiligiri",
      "descendants": 68,
      "id": 44119502,
      "kids": [
        44128787,
        44129619,
        44129333,
        44129064,
        44130001,
        44129558,
        44128886,
        44129433
      ],
      "score": 50,
      "time": 1748459054,
      "title": "Unhappy Meals (2007)",
      "type": "story",
      "url": "https://michaelpollan.com/articles-archive/unhappy-meals/"
    },
    {
      "by": "todsacerdoti",
      "descendants": 86,
      "id": 44118373,
      "kids": [
        44118846,
        44120708,
        44119809,
        44121217,
        44121920,
        44122043,
        44124204,
        44123573,
        44119241,
        44121335,
        44119006,
        44120856,
        44122101,
        44118682,
        44119588,
        44123934,
        44124184,
        44121290,
        44119274
      ],
      "score": 277,
      "time": 1748452967,
      "title": "Compiling a neural net to C for a speedup",
      "type": "story",
      "url": "https://slightknack.dev/blog/difflogic/"
    },
    {
      "by": "alex_hirner",
      "descendants": 35,
      "id": 44086429,
      "kids": [
        44127263,
        44121265,
        44119625,
        44123780,
        44124054,
        44120374,
        44122231,
        44119896,
        44119842,
        44120703,
        44123482,
        44124715,
        44121271
      ],
      "score": 208,
      "time": 1748162026,
      "title": "Visualize and debug Rust programs with a new lens",
      "type": "story",
      "url": "https://firedbg.sea-ql.org/"
    },
    {
      "by": "matt_d",
      "descendants": 19,
      "id": 44113026,
      "kids": [
        44113576,
        44114755,
        44115747,
        44115423,
        44113767,
        44119995,
        44114639
      ],
      "score": 101,
      "time": 1748410487,
      "title": "DWARF as a Shared Reverse Engineering Format",
      "type": "story",
      "url": "https://lief.re/blog/2025-05-27-dwarf-editor/"
    },
    {
      "by": "ingve",
      "descendants": 276,
      "id": 44113210,
      "kids": [
        44116231,
        44113516,
        44113391,
        44114405,
        44113608,
        44117445,
        44113373,
        44119763,
        44116343,
        44113533,
        44113423,
        44116197,
        44118882,
        44121567,
        44119900,
        44122230,
        44117429,
        44122724,
        44113554,
        44122008,
        44121570,
        44119702,
        44114333,
        44121113,
        44113887,
        44113499,
        44113459,
        44120013,
        44120014,
        44117973,
        44117469,
        44116328,
        44117088,
        44113775,
        44113750,
        44116473,
        44113918,
        44117366,
        44113903,
        44116196,
        44116577,
        44117818,
        44120609,
        44130452,
        44114348,
        44121295,
        44113514,
        44119339,
        44115907,
        44116381,
        44116832,
        44119963,
        44113550,
        44117023,
        44119163,
        44117630,
        44117840,
        44113432,
        44116569,
        44122629,
        44116960,
        44116826,
        44121703,
        44123657,
        44116143,
        44113436,
        44113536,
        44117829,
        44116671
      ],
      "score": 438,
      "time": 1748413631,
      "title": "As a developer, my most important tools are a pen and a notebook",
      "type": "story",
      "url": "https://hamatti.org/posts/as-a-developer-my-most-important-tools-are-a-pen-and-a-notebook/"
    },
    {
      "by": "aaaronson",
      "descendants": 134,
      "id": 44107942,
      "kids": [
        44108720,
        44108776,
        44108994,
        44108544,
        44108376,
        44109109,
        44108786,
        44109385,
        44113987,
        44116189,
        44109480,
        44109368,
        44112530,
        44110377,
        44109386,
        44109235,
        44111876,
        44108461,
        44111303,
        44109809,
        44108779,
        44113071,
        44109811,
        44114183,
        44108483,
        44111073,
        44110108,
        44110105,
        44110713,
        44115930,
        44111771,
        44113257,
        44109807
      ],
      "score": 720,
      "time": 1748360035,
      "title": "Square Theory",
      "type": "story",
      "url": "https://aaronson.org/blog/square-theory"
    },
    {
      "by": "modinfo",
      "descendants": 13,
      "id": 44095553,
      "kids": [
        44121088,
        44095591,
        44123627,
        44123647
      ],
      "score": 49,
      "time": 1748251392,
      "title": "YAD: display graphical dialogs from shell scripts or command line",
      "type": "story",
      "url": "http://yad-guide.ingk.se/#_introduction"
    },
    {
      "by": "mudkipdev",
      "descendants": 137,
      "id": 44100148,
      "kids": [
        44101598,
        44110175,
        44102710,
        44101646,
        44108282,
        44103099,
        44107263,
        44104598,
        44102703,
        44105669,
        44103867,
        44103781,
        44106436,
        44103649,
        44104003,
        44102525,
        44101699,
        44101771,
        44104271,
        44102704,
        44118953,
        44106762,
        44109139,
        44105694,
        44109124,
        44104990,
        44108568,
        44101998,
        44103189,
        44102274,
        44103115,
        44102015,
        44122991,
        44102057,
        44106257,
        44103481,
        44104546,
        44103279,
        44103092,
        44101873,
        44103750,
        44102346,
        44103089,
        44104967,
        44101615
      ],
      "score": 1181,
      "time": 1748284123,
      "title": "CSS Minecraft",
      "type": "story",
      "url": "https://benjaminaster.com/css-minecraft/"
    },
    {
      "by": "ucarion",
      "descendants": 76,
      "id": 44117059,
      "kids": [
        44119005,
        44130215,
        44122432,
        44118344,
        44125632,
        44117574,
        44119766,
        44118637,
        44118781,
        44118915,
        44123066,
        44126239,
        44126419,
        44119198,
        44118496,
        44118119,
        44119168,
        44117562,
        44117368,
        44120993,
        44120595,
        44117543
      ],
      "score": 189,
      "text": "Hi folks! I&#x27;m Ulysse, and Tesseral (<a href=\"https:&#x2F;&#x2F;github.com&#x2F;tesseral-labs&#x2F;tesseral\">https:&#x2F;&#x2F;github.com&#x2F;tesseral-labs&#x2F;tesseral</a>) is open-source auth for B2B SaaS.<p>Early in my career, I worked on enterprise auth and security features at Segment. I&#x27;ve been obsessed with the subtle details of enterprise software ever since. For example, I wrote an implementation of SAML in the early days of the COVID pandemic because I thought it was fun.<p>Over the years, I&#x27;ve felt frustrated that too few people have seemed interested in making auth obvious for developers of business software. Auth really doesn&#x27;t need to be so confusing.<p>We made Tesseral to help software engineers get B2B auth exactly right – and focus their energy on building the features that users want.<p>You can use Tesseral to stand up a login page, authenticate your users, and manage their access to resources. Think of it like Auth0 or Clerk, but open source and built specifically for B2B apps. Among other things, that means that it’s designed for B2B multi-tenancy and includes enterprise-ready features like single sign-on (SAML SSO), multi-factor authentication (MFA), SCIM provisioning, and role-based access control (RBAC).<p>For those who expose public APIs, you can use Tesseral to manage API keys for your customers. You can even limit the scope of API keys to specific actions by using our RBAC feature.<p>We&#x27;ve taken care to make Tesseral powerful and secure enough to power real enterprise software but still leave it simple enough for any software developer to use. You don&#x27;t have to be a security expert to implement Tesseral. (By default, therefore, Tesseral imposes a few opinions. Let us know if you have a good reason to do something unusual, and we&#x27;ll work something out.)<p>If you want to experiment with Tesseral, you can host it yourself or use our hosted service. The hosted service lives at <a href=\"https:&#x2F;&#x2F;console.tesseral.com\">https:&#x2F;&#x2F;console.tesseral.com</a>. You can find documentation here: <a href=\"https:&#x2F;&#x2F;tesseral.com&#x2F;docs\">https:&#x2F;&#x2F;tesseral.com&#x2F;docs</a>.<p>Here are a few simple demos:<p><a href=\"https:&#x2F;&#x2F;www.youtube.com&#x2F;watch?v=IhYPzz3vB54\" rel=\"nofollow\">https:&#x2F;&#x2F;www.youtube.com&#x2F;watch?v=IhYPzz3vB54</a><p><a href=\"https:&#x2F;&#x2F;www.youtube.com&#x2F;watch?v=t-JJ8TNjqNU\" rel=\"nofollow\">https:&#x2F;&#x2F;www.youtube.com&#x2F;watch?v=t-JJ8TNjqNU</a><p><a href=\"https:&#x2F;&#x2F;www.youtube.com&#x2F;watch?v=mwthBIRZO8k\" rel=\"nofollow\">https:&#x2F;&#x2F;www.youtube.com&#x2F;watch?v=mwthBIRZO8k</a><p>We&#x27;re in the early stages of the project, so we still have some gaps. We have more features, bug fixes, SDKs, and documentation on the way.<p>What have we missed? What can we do better? We&#x27;re eager to hear from the community!",
      "time": 1748446062,
      "title": "Show HN: Tesseral – Open-Source Auth",
      "type": "story",
      "url": "https://github.com/tesseral-labs/tesseral"
    },
    {
      "by": "Bender",
      "descendants": 22,
      "id": 44125158,
      "kids": [
        44125704,
        44131509,
        44131331,
        44126173,
        44126190,
        44127362,
        44126498
      ],
      "score": 43,
      "time": 1748520150,
      "title": "Asus router backdoors affect 9K devices, persist after firmware updates",
      "type": "story",
      "url": "https://www.scworld.com/news/asus-router-backdoors-affect-9k-devices-persist-after-firmware-updates"
    },
    {
      "by": "levkk",
      "descendants": 80,
      "id": 44099187,
      "kids": [
        44103708,
        44104502,
        44102156,
        44099906,
        44100709,
        44109801,
        44103002,
        44102086,
        44100401,
        44099566,
        44101949,
        44099558,
        44102254,
        44112084,
        44101806,
        44102622,
        44102868,
        44099917,
        44100734,
        44107416,
        44100540,
        44105555,
        44100575,
        44099859
      ],
      "score": 301,
      "text": "Hey HN! Lev here, author of PgDog (<a href=\"https:&#x2F;&#x2F;github.com&#x2F;pgdogdev&#x2F;pgdog\">https:&#x2F;&#x2F;github.com&#x2F;pgdogdev&#x2F;pgdog</a>). I’m scaling our favorite database, PostgreSQL. PgDog is a new open source proxy, written in Rust, with first-class support for sharding — without changes to your app or needing database extensions.<p>Here’s a walkthrough of how it works: <a href=\"https:&#x2F;&#x2F;www.youtube.com&#x2F;watch?v=y6sebczWZ-c\" rel=\"nofollow\">https:&#x2F;&#x2F;www.youtube.com&#x2F;watch?v=y6sebczWZ-c</a><p>Running Postgres at scale is hard. Eventually, one primary isn’t enough at which point you need to split it up. Since there is currently no good tooling out there to do this, teams end up breaking their apps apart instead.<p>If you’re familiar with PgCat, my previous project, PgDog is its spiritual successor but with a fresh codebase and new goals. If not, PgCat is a pooler for Postgres also written in Rust.<p>So, what’s changed and why a new project? Cross-shard queries are supported out of the box. The new architecture is more flexible, completely asynchronous and supports manipulating the Postgres protocol at any stage of query execution. (Oh, and you guessed it  — I adopted a dog. Still a cat person though!)<p>Not everything is working yet, but simple aggregates like max(), min(), count(*) and sum() are in. More complex functions like percentiles and average will require a bit more work. Sorting (i.e. ORDER BY) works, as long as the values are part of the result set, e.g.:<p><pre><code>     SELECT id, email FROM users\n     WHERE admin = true\n     ORDER BY 1 DESC;\n</code></pre>\nPgDog buffers and sorts the rows in memory, before sending them to the client. Most of the time, the working set is small, so this is fine. For larger results, we need to build swap to disk, just like Postgres does, but for OLTP workloads, which PgDog is targeting, we want to keep things fast. Sorting currently works for bigint, integer, and text&#x2F;varchar. It’s pretty straightforward to add all the other data types, I just need to find the time and make sure to handle binary encoding correctly.<p>All standard Postgres features work as normal for unsharded and direct-to-shard queries. As long as you include the sharding key (a column like customer_id, for example) in your query, you won’t notice a difference.<p>How does this compare to Citus? In case you’re not familiar, Citus is an open source extension for sharding Postgres. It runs inside a single Postgres node (a coordinator) and distributes queries between worker databases.<p>PgDog’s architecture is fundamentally different. It runs outside the DB: it’s a proxy, so you can deploy it anywhere, including managed Postgres like RDS, Cloud SQL and others where Citus isn’t available. It’s multi-threaded and asynchronous, so it can handle thousands, if not millions, of concurrent connections. Its focus is OLTP, not OLAP. Meanwhile, Citus is more mature and has good support for cross-shard queries and aggregates. It will take PgDog a while to catch up.<p>My Rust has improved since my last attempt at this and I learned how to use the bytes crate correctly. PgDog does almost zero memory allocations per request. That results in a 3-5% performance increase over PgCat and a much more consistent p95. If you’re obsessed with performance like me, you know that small percentage is nothing to sneeze at. Like before, multi-threaded Tokio-powered PgDog leaves the single-threaded PgBouncer in the dust (<a href=\"https:&#x2F;&#x2F;pgdog.dev&#x2F;blog&#x2F;pgbouncer-vs-pgdog\">https:&#x2F;&#x2F;pgdog.dev&#x2F;blog&#x2F;pgbouncer-vs-pgdog</a>).<p>Since we’re using pg_query (which itself bundles the Postgres parser), PgDog can understand all Postgres queries. This is important because we can not only correctly extract the WHERE clause and INSERT parameters for automatic routing, but also rewrite queries. This will be pretty useful when we’ll add support for more complex aggregates, like avg(), and cross-shard joins!<p>Read&#x2F;write traffic split is supported out of the box, so you can put PgDog in front of the whole cluster and ditch the code annotations. It’s also a load balancer, so you can deploy it in front of multiple replicas to get 4 9’s of uptime.<p>One of the coolest features so far, in my opinion, is distributed COPY. This works by hacking the Postgres network protocol and sending individual rows to different shards (<a href=\"https:&#x2F;&#x2F;pgdog.dev&#x2F;blog&#x2F;hacking-postgres-wire-protocol\">https:&#x2F;&#x2F;pgdog.dev&#x2F;blog&#x2F;hacking-postgres-wire-protocol</a>). You can just use it without thinking about cluster topology, e.g.:<p><pre><code>    COPY temperature_records (sensor_uuid, created_at, value)\n    FROM STDIN CSV;\n</code></pre>\nThe sharding function is straight out of Postgres partitions and supports uuid v4 and bigint. Technically, it works with any data type, but I just haven’t added all the wrappers yet. Let me know if you need one.<p>What else? Since we have the Postgres parser handy, we can inspect, block and rewrite queries. One feature I was playing with is ensuring that the app is passing in the customer_id in all queries, to avoid data leaks between tenants. Brain dump of that in my blog here:  <a href=\"https:&#x2F;&#x2F;pgdog.dev&#x2F;blog&#x2F;multi-tenant-pg-can-be-easy\">https:&#x2F;&#x2F;pgdog.dev&#x2F;blog&#x2F;multi-tenant-pg-can-be-easy</a>.<p>What’s on the roadmap: (re)sharding Postgres using logical replication, so we can scale DBs without taking downtime. There is a neat trick on how to quickly do this on copy-on-write filesystems (like EBS used by RDS, Google Cloud volumes, ZFS, etc.). I’ll publish a blog post on this soon. More at-scale features like blocking bad queries and just general “I wish my Postgres proxy could do this” stuff. Speaking of which, if you can think of any more features you’d want, get in touch. Your wishlist can become my roadmap.<p>PgDog is being built in the open. If you have thoughts or suggestions about this topic, I would love to hear them. Happy to listen to your battle stories with Postgres as well.<p>Happy hacking!<p>Lev",
      "time": 1748278549,
      "title": "Show HN: PgDog – Shard Postgres without extensions",
      "type": "story",
      "url": "https://github.com/pgdogdev/pgdog"
    },
    {
      "by": "mahmoudimus",
      "descendants": 1,
      "id": 44122902,
      "kids": [
        44124824
      ],
      "score": 13,
      "time": 1748490199,
      "title": "Breaking the Sorting Barrier for Directed Single-Source Shortest Paths",
      "type": "story",
      "url": "https://arxiv.org/abs/2504.17033"
    },
    {
      "by": "microflash",
      "descendants": 179,
      "id": 44116503,
      "kids": [
        44116918,
        44116980,
        44116785,
        44117841,
        44117759,
        44116875,
        44121482,
        44117601,
        44125237,
        44117255,
        44117410,
        44117795,
        44119431,
        44116950,
        44117464,
        44117199,
        44121292,
        44116812,
        44117984,
        44116945,
        44118028,
        44121765,
        44117678,
        44116970,
        44118325,
        44117994,
        44118077,
        44118941,
        44117938,
        44116955,
        44117295,
        44118391,
        44119645,
        44116883,
        44116741,
        44117519,
        44116964,
        44117238,
        44117074,
        44117267
      ],
      "score": 364,
      "time": 1748443132,
      "title": "Mullvad Leta",
      "type": "story",
      "url": "https://leta.mullvad.net"
    },
    {
      "by": "udev4096",
      "descendants": 4,
      "id": 44124360,
      "kids": [
        44126344,
        44128283,
        44126593,
        44126831
      ],
      "score": 40,
      "time": 1748510756,
      "title": "Cory Doctorow on how we lost the internet",
      "type": "story",
      "url": "https://lwn.net/SubscriberLink/1021871/ffeed46818908c91/"
    },
    {
      "by": "simonw",
      "descendants": 162,
      "id": 44110584,
      "kids": [
        44111485,
        44111376,
        44112690,
        44111846,
        44116471,
        44112327,
        44110809,
        44114382,
        44121007,
        44125689,
        44111958,
        44111329,
        44111128,
        44112865,
        44110814,
        44111909,
        44114565,
        44113029,
        44113927,
        44114614,
        44113082,
        44110660,
        44113102,
        44114709,
        44114422,
        44111402,
        44115653,
        44112576,
        44114477,
        44110932,
        44114721,
        44110671,
        44112473,
        44111473,
        44110785
      ],
      "score": 513,
      "time": 1748379183,
      "title": "Show HN: My LLM CLI tool can run tools now, from Python code or plugins",
      "type": "story",
      "url": "https://simonwillison.net/2025/May/27/llm-tools/"
    },
    {
      "by": "mooreds",
      "descendants": 11,
      "id": 44125601,
      "kids": [
        44127350,
        44126829,
        44131415,
        44126456,
        44128703
      ],
      "score": 32,
      "time": 1748523259,
      "title": "Red Hat Ansible and HashiCorp Terraform Will Be Coming Together",
      "type": "story",
      "url": "https://thenewstack.io/red-hat-ansible-and-hashicorp-terraform-will-be-coming-together/"
    },
    {
      "by": "vaderyondu",
      "descendants": 6,
      "id": 44129287,
      "kids": [
        44130978,
        44130544,
        44129327,
        44130588
      ],
      "score": 4,
      "text": "Hi HackerRank Community,<p>Seeking advice on a potential career pivot and job change.<p>My Profile:\nI have a Master&#x27;s in System Security. My experience spans:\nAutomation: Java, Selenium.\nDevOps: CI&#x2F;CD (Jenkins, Azure Pipelines, GitHub Actions), scripting (Groovy, Shell), and some IaC (Terraform, Crossplane).<p>Key Achievement: I recently developed and successfully monetized a small SaaS application using LLMs (&quot;vibe coding&quot;).Currently in a Compliance role at a large enterprise.<p>My Core Strength &amp; Passion:\nI&#x27;m a fast learner, a strong problem-solver, and adept at connecting tools to deliver solutions. My real passion, however, lies in onboarding users to new solutions and helping them achieve maximum value based on their needs. I thrive on seeing others succeed with technology.<p>The Challenge &amp; My Question:\nWhile proficient across my DevOps skillset, I&#x27;m not a deep expert in specific cloud platforms (e.g., in-depth AWS&#x2F;GCP&#x2F;Azure setup), which many specialist roles around my domain seem to require.\nI&#x27;m looking for guidance on how to leverage my &quot;get-it-done&quot; DevOps background and my passion for user enablement for my next role. What career paths or specific job titles should I explore that combine these aspects? I&#x27;m thinking of roles like Solutions Architect, Technical Account Manager, Developer Advocate, or Customer Success Engineer, but I&#x27;m open to other suggestions.<p>Specifically, I&#x27;d appreciate insights on:\nRole Fit: Which roles best align my DevOps skills with my interest in user onboarding and value realization?\nPositioning: How can I best frame my diverse experience (including the monetized SaaS app) for these types of roles?<p>Skill Development: What key skills (technical or soft) would be most beneficial to develop for such a pivot?\nAny advice on leveraging my current compliance background in this transition?<p>Thanks for any insights you can share!",
      "time": 1748546367,
      "title": "Ask HN: Career Plateau: Looking for Advice on How to Break Through",
      "type": "story"
    },
    {
      "by": "eborgnia",
      "descendants": 51,
      "id": 44108206,
      "kids": [
        44108872,
        44112123,
        44109978,
        44109289,
        44110672,
        44112928,
        44115319,
        44109013,
        44108268,
        44108531,
        44119008,
        44108391,
        44112838,
        44112891,
        44108601,
        44111151,
        44112146,
        44113351,
        44109448,
        44109828,
        44114694,
        44109566,
        44108425,
        44112396,
        44108988,
        44112666
      ],
      "score": 105,
      "text": "Hey HN community! We&#x27;re Preston and Eitan, and we&#x27;re building Relace (<a href=\"https:&#x2F;&#x2F;relace.ai\">https:&#x2F;&#x2F;relace.ai</a>). We&#x27;re trying to make building code agents easy and cheap.<p>Here’s an example of our apply model vs. whole file edits:\n<a href=\"https:&#x2F;&#x2F;youtu.be&#x2F;J0-oYyozUZw\" rel=\"nofollow\">https:&#x2F;&#x2F;youtu.be&#x2F;J0-oYyozUZw</a><p>Building reliable code agents is hard. Beyond simple prototypes, any app with code generation in production quickly runs into two problems --  how do you reliably apply diffs, and how do you manage codebase context?<p>We&#x27;re focused on solving these two problems at order-of-magnitude lower price and latency.<p>Our first model that we released, in February, is the Fast Apply model -- it merges code snippets with files at 4300 tok&#x2F;s. It is more reliable (in terms of merge errors) than Sonnet, Qwen, Llama, or any other model at this task. Each file takes ~900ms and gives an instantaneous user experience, as well as saving ~40% on Claude 4 output tokens.<p>Our second model focuses on retrieval. For both vibe-coded and enterprise codebases, retrieving only the files relevant to a user request saves both on SoTA input token cost and reduces the number of times code agents need to view files. Our reranker (evals below) can scan a million-line codebase in ~1-2s, and our embedding model outperforms any other embedding model for retrieval as evaluated on a corpus of Typescript&#x2F;React repositories.<p>There are many different ways to build coding agents, but being able to edit code reliably and retrieve the most relevant parts of the codebase is going to be a foundational issue. We&#x27;re excited to be building ways to make it more accessible to millions of users who don&#x27;t want to spend $$$ on Claude.<p>These models are used in production, millions of times per week. If you&#x27;ve used Lovable, Create.xyz, Magic Patterns, Codebuff, Tempo Labs then you&#x27;ve used us!<p>Here&#x27;s a link to try it out: <a href=\"https:&#x2F;&#x2F;app.relace.ai\">https:&#x2F;&#x2F;app.relace.ai</a>, and here are our docs: <a href=\"https:&#x2F;&#x2F;docs.relace.ai\">https:&#x2F;&#x2F;docs.relace.ai</a>.<p>We&#x27;ve opened up free access for prototyping on our website to everyone, and the limits should be enough for personal coding use and building small projects (correct us if it’s not). We integrate directly with Open-Source IDE&#x27;s like Continue.dev. Please try us out, we&#x27;d love to hear your feedback!",
      "time": 1748361560,
      "title": "Launch HN: Relace (YC W23) – Models for fast and reliable codegen",
      "type": "story"
    },
    {
      "by": "bschne",
      "descendants": 2,
      "id": 44124713,
      "kids": [
        44124941,
        44125203,
        44129473,
        44130365,
        44130374
      ],
      "score": 63,
      "time": 1748515445,
      "title": "What programmers should know about how CPUs work [video]",
      "type": "story",
      "url": "https://www.youtube.com/watch?v=-HNpim5x-IE"
    },
    {
      "by": "surprisetalk",
      "descendants": 2,
      "id": 44088392,
      "kids": [
        44090551
      ],
      "score": 37,
      "time": 1748185800,
      "title": "Implementing complex numbers and FFT with just datatypes (2023)",
      "type": "story",
      "url": "https://gist.github.com/VictorTaelin/5776ede998d0039ad1cc9b12fd96811c"
    },
    {
      "by": "Brajeshwar",
      "descendants": 0,
      "id": 44125285,
      "score": 21,
      "time": 1748521184,
      "title": "Asus routers are being hit with stealthy, persistent backdoors",
      "type": "story",
      "url": "https://arstechnica.com/security/2025/05/thousands-of-asus-routers-are-being-hit-with-stealthy-persistent-backdoors/"
    },
    {
      "by": "testmasterflex",
      "descendants": 84,
      "id": 44116298,
      "kids": [
        44116659,
        44116798,
        44117007,
        44126832,
        44117124,
        44117092,
        44121702,
        44117488,
        44116656,
        44127313,
        44119990,
        44116365,
        44116859,
        44116506,
        44117901,
        44116501,
        44117000,
        44121584,
        44119417,
        44117875,
        44117117,
        44119454,
        44119647,
        44118024,
        44120575,
        44119443,
        44119181,
        44117836,
        44117656,
        44118198,
        44118564,
        44116561,
        44116551
      ],
      "score": 67,
      "text": "Hey HN!<p>I posted here some years ago trying to raise money for a Kickstarter for a product I call Loodio.<p>Loodio is a motion activated music player for bathrooms that plays music during the bathroom visit to give users privacy during their sacred moments.<p>The kickstarter failed, but I managed to create a product eventually with a lot of effort.<p>I managed to sell 150 units of the first unit, mostly to United States but to all different parts of the world while working on the next version.<p>The problem with the first version was that it was running on a Raspberry Pi Zero W (that had to be wall connected) and it was pretty big, had crappy sound and took a minute to start since it had to boot a whole linux system. I was running it on a python script and unix services. To add music, people had to SSH into the unit so you can imagine how painful that was for some.<p>However customers loved it! But I knew I could do better. The most common request was battery operation.<p>Here are some reviews of version 1: \n<a href=\"https:&#x2F;&#x2F;loodio.com&#x2F;pages&#x2F;reviews\" rel=\"nofollow\">https:&#x2F;&#x2F;loodio.com&#x2F;pages&#x2F;reviews</a><p>I&#x27;m proud to say that Loodio 2 is finally here and is working like I imagined when I started working on it almost 5 years ago now.<p>Loodio 2 introduces battery operation with 1 week of battery life (~5 hours of active operation).\nIt has great sound and an easy way to add your own music with SD card support (4GB included).<p>It doesn&#x27;t require any app. Can be run without WiFi (however you lose some features like internet radio, time updates, software updates and weather)<p>Why does it have a display, you may ask?\nBecause, I used to have an electric toothbrush that came with a display. That display showed how long you were brushing to make sure you did your 2 minutes per brush.\nWhen I wasn&#x27;t brushing my teeth, it showed the current time. And I stopped using the electric tooth brush (because a dentist told me they are too harsh on your teeth) but kept the display for probably 5 years afterwards because I noticed I really want to know the time while getting ready for school&#x2F;work in the morning.\nAnother thing I noticed was that I always check the weather outside, so I could dress appropriately.<p>So, Loodio shows you the time and weather (optionally) as well as playing music during your visit. These features together with the lights, are features that I think people don&#x27;t expect to use but with time becomes as important as the music. Customer interviews verify this.<p>I wasted a lot of money trying to outsource the development the first 18 months. I then decided to start doing it myself.\nThe version I&#x27;m selling is actually the 25th(!) iteration of the product. The problem with hardware is that it takes you around a month to iterate a circuit (if you don&#x27;t live next to the factory in Shenzhen) because of the cycle &#x27;Designing-&gt;Order from China-&gt;Testing-&gt;Repeat&#x27;. And I had no experience of electronics when starting out.<p>The enclosure is made from empty PCBs to save money for injection tooling later. It looks pretty cool. But mainly, works great!<p>I want to give credit to Tadeusz Karpinski and Velimir Stoleski that ported my crappy python script to the ESP32 that is running Loodio 2.<p>You need to try it! I really think you&#x27;re gonna like it! <a href=\"https:&#x2F;&#x2F;loodio.com\" rel=\"nofollow\">https:&#x2F;&#x2F;loodio.com</a>",
      "time": 1748441942,
      "title": "Show HN: Loodio 2 – A Simple Rechargable Bathroom Privacy Device",
      "type": "story",
      "url": "https://loodio.com/"
    },
    {
      "by": "areoform",
      "descendants": 62,
      "id": 44105470,
      "kids": [
        44107836,
        44106959,
        44107242,
        44108414,
        44106590,
        44106500,
        44108471,
        44109248,
        44117499,
        44107276,
        44108466
      ],
      "score": 140,
      "time": 1748340180,
      "title": "Revisiting the algorithm that changed horse race betting (2023)",
      "type": "story",
      "url": "https://actamachina.com/posts/annotated-benter-paper"
    },
    {
      "by": "e12e",
      "descendants": 5,
      "id": 44087798,
      "kids": [
        44119419,
        44120453,
        44120415,
        44119579
      ],
      "score": 65,
      "time": 1748180707,
      "title": "Building interactive web pages with Guile Hoot",
      "type": "story",
      "url": "https://spritely.institute/news/building-interactive-web-pages-with-guile-hoot.html"
    },
    {
      "by": "freetonik",
      "descendants": 390,
      "id": 44116862,
      "kids": [
        44118889,
        44118071,
        44118397,
        44121222,
        44118292,
        44117491,
        44118633,
        44120460,
        44117819,
        44117077,
        44118466,
        44127196,
        44117595,
        44119232,
        44130125,
        44120893,
        44126379,
        44126370,
        44118337,
        44121021,
        44117318,
        44117972,
        44120504,
        44124757,
        44117142,
        44121072,
        44119586,
        44118695,
        44117382,
        44119411,
        44118554,
        44121615,
        44125343,
        44118348,
        44122290,
        44121214,
        44117235,
        44117730,
        44120946,
        44117760,
        44118000,
        44120300,
        44119861,
        44120944,
        44118242,
        44118206,
        44117711,
        44118444,
        44117112,
        44119067,
        44118359,
        44117882
      ],
      "score": 305,
      "time": 1748445176,
      "title": "xAI to pay telegram $300M to integrate Grok into the chat app",
      "type": "story",
      "url": "https://techcrunch.com/2025/05/28/xai-to-invest-300m-in-telegram-integrate-grok-into-app/"
    }
  ]
}