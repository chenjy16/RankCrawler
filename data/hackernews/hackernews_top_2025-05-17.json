{
  "fetch_time": "2025-05-17 01:14:08",
  "stories": [
    {
      "by": "richards",
      "descendants": 67,
      "id": 44009848,
      "kids": [
        44011213,
        44010899,
        44010584,
        44010995,
        44010757,
        44010031,
        44011097,
        44010905,
        44011205,
        44011165,
        44011202,
        44010668,
        44010169,
        44010349,
        44010100,
        44010077,
        44010950
      ],
      "score": 135,
      "time": 1747429812,
      "title": "Getting AI to write good SQL",
      "type": "story",
      "url": "https://cloud.google.com/blog/products/databases/techniques-for-improving-text-to-sql"
    },
    {
      "by": "dipampaul17",
      "descendants": 18,
      "id": 44009321,
      "kids": [
        44009741,
        44009732,
        44009778,
        44009707,
        44009632,
        44010883,
        44009571,
        44010545,
        44009960,
        44010621,
        44010945,
        44009833
      ],
      "score": 176,
      "text": "I discovered that in LLM inference, keys and values in the KV cache have very different quantization sensitivities. Keys need higher precision than values to maintain quality.<p>I patched llama.cpp to enable different bit-widths for keys vs. values on Apple Silicon. The results are surprising:<p>- K8V4 (8-bit keys, 4-bit values): 59% memory reduction with only 0.86% perplexity loss\n- K4V8 (4-bit keys, 8-bit values): 59% memory reduction but 6.06% perplexity loss\n- The configurations use the same number of bits, but K8V4 is 7× better for quality<p>This means you can run LLMs with 2-3× longer context on the same Mac. Memory usage scales with sequence length, so savings compound as context grows.<p>Implementation was straightforward: \n1. Added --kvq-key and --kvq-val flags to llama.cpp\n2. Applied existing quantization logic separately to K and V tensors\n3. Validated with perplexity metrics across context lengths\n4. Used Metal for acceleration (with -mlong-calls flag to avoid vectorization issues)<p>Benchmarked on an M4 MacBook Pro running TinyLlama with 8K context windows. Compatible with Metal&#x2F;MPS and optimized for Apple Silicon.<p>GitHub: <a href=\"https:&#x2F;&#x2F;github.com&#x2F;dipampaul17&#x2F;KVSplit\">https:&#x2F;&#x2F;github.com&#x2F;dipampaul17&#x2F;KVSplit</a>",
      "time": 1747425898,
      "title": "Show HN: KVSplit – Run 2-3x longer contexts on Apple Silicon",
      "type": "story",
      "url": "https://github.com/dipampaul17/KVSplit"
    },
    {
      "by": "bradgessler",
      "descendants": 167,
      "id": 44008843,
      "kids": [
        44010933,
        44009004,
        44009209,
        44009019,
        44010366,
        44010586,
        44009068,
        44009301,
        44009105,
        44010840,
        44011073,
        44010266,
        44011038,
        44009742,
        44009046,
        44009047,
        44008983,
        44009053,
        44009084,
        44010870,
        44010824,
        44009470,
        44011030,
        44010059,
        44010521,
        44009965,
        44011118,
        44010938,
        44009341,
        44009919,
        44010004,
        44009424,
        44009688,
        44010534,
        44009312,
        44010542,
        44010516,
        44009277,
        44009072,
        44010589,
        44009138,
        44009306,
        44009480,
        44009293,
        44009154,
        44009280,
        44009843,
        44010357,
        44009847,
        44009813,
        44009265,
        44009259,
        44010532,
        44009335,
        44009602,
        44009600,
        44009694,
        44009062,
        44009304,
        44009397,
        44009262,
        44009213,
        44010020,
        44009686,
        44009680,
        44009516,
        44009491,
        44009288,
        44009258,
        44010247,
        44009696,
        44009630,
        44009739,
        44009318
      ],
      "score": 253,
      "time": 1747422595,
      "title": "Thoughts on thinking",
      "type": "story",
      "url": "https://dcurt.is/thinking"
    },
    {
      "by": "meetpateltech",
      "descendants": 281,
      "id": 44006345,
      "kids": [
        44007301,
        44011207,
        44008123,
        44008115,
        44009366,
        44007675,
        44007007,
        44008015,
        44010518,
        44006459,
        44007098,
        44006997,
        44006923,
        44007991,
        44008592,
        44009127,
        44010038,
        44009448,
        44006672,
        44006904,
        44007215,
        44007090,
        44010338,
        44009842,
        44007390,
        44006974,
        44006862,
        44007275,
        44006498,
        44006988,
        44006731,
        44007102,
        44006680,
        44007027,
        44006902,
        44009025,
        44007168,
        44006999,
        44006473,
        44006715,
        44006673,
        44006556,
        44006622,
        44008390
      ],
      "score": 359,
      "time": 1747407722,
      "title": "A Research Preview of Codex",
      "type": "story",
      "url": "https://openai.com/index/introducing-codex/"
    },
    {
      "by": "jaas",
      "descendants": 2,
      "id": 43972669,
      "kids": [
        44011161,
        44011033
      ],
      "score": 38,
      "time": 1747142556,
      "title": "Rustls Server-Side Performance",
      "type": "story",
      "url": "https://www.memorysafety.org/blog/rustls-server-perf/"
    },
    {
      "by": "sfeldma",
      "descendants": 0,
      "id": 44011254,
      "score": 3,
      "text": "Merliot Hub is an AI-integrated device hub.<p>What does that mean? It means you can control and interact with your physical devices, your security cameras, your thermometer, seamlessly using natural language from an LLM host such as Claude Desktop or Cursor. The hub is a gateway between AI and the physical world.<p>What could go wrong?",
      "time": 1747444178,
      "title": "Show HN: Merliot – plugging physical devices into LLMs",
      "type": "story",
      "url": "https://github.com/merliot/hub"
    },
    {
      "by": "lermontov",
      "descendants": 2,
      "id": 44010659,
      "kids": [
        44010663,
        44011198
      ],
      "score": 17,
      "time": 1747437521,
      "title": "They Were Identical 'Twinnies' Who Charmed Orwell, Camus and More",
      "type": "story",
      "url": "https://www.nytimes.com/2025/05/04/books/review/the-dazzling-paget-sisters-ariane-bankes.html"
    },
    {
      "by": "radanskoric",
      "descendants": 4,
      "id": 43984860,
      "kids": [
        44010645,
        44010703,
        44010777
      ],
      "score": 45,
      "time": 1747232277,
      "title": "Coding agent in 94 lines of Ruby",
      "type": "story",
      "url": "https://radanskoric.com/articles/coding-agent-in-ruby"
    },
    {
      "by": "Borkdude",
      "descendants": 17,
      "id": 44009464,
      "kids": [
        44009465,
        44009844,
        44010385,
        44010163,
        44011195,
        44010062
      ],
      "score": 90,
      "time": 1747426820,
      "title": "ClojureScript 1.12.42",
      "type": "story",
      "url": "https://clojurescript.org/news/2025-05-16-release"
    },
    {
      "by": "carabiner",
      "descendants": 118,
      "id": 44006426,
      "kids": [
        44008973,
        44007496,
        44010258,
        44009006,
        44010190,
        44006589,
        44008356,
        44010874,
        44008481,
        44008911,
        44009515,
        44009020,
        44010400,
        44010297,
        44009253,
        44010379,
        44007820,
        44009619,
        44010744
      ],
      "score": 221,
      "time": 1747408165,
      "title": "MIT asks arXiv to withdraw preprint of paper on AI and scientific discovery",
      "type": "story",
      "url": "https://economics.mit.edu/news/assuring-accurate-research-record"
    },
    {
      "by": "proberts",
      "descendants": 341,
      "id": 44006381,
      "kids": [
        44006984,
        44008631,
        44007821,
        44006833,
        44008497,
        44006665,
        44010707,
        44010634,
        44006758,
        44008652,
        44006728,
        44006594,
        44009615,
        44008358,
        44006678,
        44007994,
        44007774,
        44006668,
        44006939,
        44009384,
        44008139,
        44009730,
        44007358,
        44008278,
        44006562,
        44009483,
        44010041,
        44008177,
        44009204,
        44007138,
        44007875,
        44006739,
        44008375,
        44008905,
        44006763,
        44007616,
        44008523,
        44006693,
        44009633,
        44008612,
        44009744,
        44007579,
        44008469,
        44009283,
        44010000,
        44007727,
        44006863,
        44007822,
        44008483,
        44008577,
        44008227,
        44008112,
        44007729,
        44008811,
        44007226,
        44007739,
        44008352,
        44008260,
        44008547,
        44007356,
        44007481,
        44006949,
        44007012,
        44007619,
        44007993,
        44006733,
        44008214,
        44009671,
        44009492,
        44006792,
        44007931,
        44006662,
        44010303,
        44007042,
        44008530,
        44008230,
        44010403,
        44010410,
        44008315,
        44007467,
        44006820,
        44006801,
        44006644,
        44006557,
        44007604,
        44008475,
        44009313,
        44006725,
        44010547,
        44007664,
        44007946,
        44006937,
        44007878,
        44009064,
        44006635,
        44008914,
        44007999,
        44010894,
        44007607,
        44006765
      ],
      "score": 176,
      "text": "I&#x27;ll be here for the next 5-6 hours. As usual, there are countless topics given the rapidly changing immigration landscape and I&#x27;ll be guided by whatever you&#x27;re concerned with. Please remember that I can&#x27;t provide legal advice on specific cases because I won&#x27;t have access to all the facts. Please stick to a factual discussion in your questions and I&#x27;ll try to do the same in my answers.<p>Edit: I am taking a break now and will return later this afternoon&#x2F;evening to respond to any comments and answer any questions. Thank you everyone for a great and engaged AMA so far.",
      "time": 1747407932,
      "title": "I'm Peter Roberts, immigration attorney, who does work for YC and startups. AMA",
      "type": "story"
    },
    {
      "by": "joebig",
      "descendants": 0,
      "id": 44011139,
      "kids": [
        44011150
      ],
      "score": 4,
      "time": 1747442784,
      "title": "WebGL Gray-Scott Explorer (2012)",
      "type": "story",
      "url": "http://www.mrob.com/pub/comp/xmorphia/ogl/index.html"
    },
    {
      "by": "robinhouston",
      "descendants": 45,
      "id": 44006824,
      "kids": [
        44007375,
        44007538,
        44007159,
        44007174,
        44008063,
        44009771,
        44007529,
        44008374,
        44007403
      ],
      "score": 156,
      "time": 1747410330,
      "title": "X X^t can be faster",
      "type": "story",
      "url": "https://arxiv.org/abs/2505.09814"
    },
    {
      "by": "Towaway69",
      "descendants": 85,
      "id": 44006231,
      "kids": [
        44007122,
        44007812,
        44006463,
        44006385,
        44006768,
        44006615,
        44008861,
        44008498,
        44006913,
        44007580,
        44006232,
        44007180,
        44006855,
        44006468,
        44006405,
        44008564
      ],
      "score": 197,
      "text": "Hi There,<p>Erlang-RED has been my project for the last couple of months and I would love to get some feedback from the HN community.<p>The idea is to take advantage of Erlangs message passing and low overhead processes to have true concurrency in Node-RED flows. Plus also to bring low-code visual flow-based programming to Erlang.",
      "time": 1747407253,
      "title": "Show HN: Visual flow-based programming for Erlang, inspired by Node-RED",
      "type": "story",
      "url": "https://github.com/gorenje/erlang-red"
    },
    {
      "by": "pseudolus",
      "descendants": 41,
      "id": 44010705,
      "kids": [
        44011240,
        44011074,
        44011126,
        44010782,
        44011081,
        44011144,
        44010792,
        44011063,
        44010955,
        44011147,
        44010812,
        44010921,
        44010984,
        44010788,
        44011268,
        44011128
      ],
      "score": 54,
      "time": 1747438044,
      "title": "The Collapse of GPT",
      "type": "story",
      "url": "https://cacm.acm.org/news/the-collapse-of-gpt/"
    },
    {
      "by": "iamasuperuser",
      "descendants": 7,
      "id": 43977982,
      "kids": [
        44011215,
        44011107,
        44011020,
        43977983,
        44011105
      ],
      "score": 9,
      "time": 1747172041,
      "title": "Show HN: A C-Suite AI Agent Meant for SMB",
      "type": "story",
      "url": "https://askcaa.com/"
    },
    {
      "by": "jayl-e-e",
      "descendants": 1,
      "id": 44009894,
      "kids": [
        44010128
      ],
      "score": 30,
      "text": "Hey everyone!<p>Over the past two years I threw myself back into full-time engineering with a simple goal: write code that <i>gives back</i> to the community. After a lot of late-night FOMO (“AI will do it all for us, right?”) and some painful production incidents, I finally turned my weekend project into an open-source library.<p>[ What is <i>Solidis</i>? ]<p>- <i>Super-light (&lt; 30 KB) RESP2&#x2F;RESP3 client</i> with zero runtime deps and first-class ESM&#x2F;CJS support.<p>- Fully <i>tree-shakable</i> – import only the commands you need.<p>- Written with SOLID principles &amp; full TypeScript typings for every command.<p>- Designed for <i>cold-start sensitive</i> serverless platforms (small bundle + tiny memory footprint).<p>[ Why I built it ]<p>1. <i>node-redis &amp; ioredis pain</i><p>- ESM is still an after-thought.<p>- Hidden deadlocks on RST, vague error surfaces.<p>- Everything gets bundled, even commands you’ll never call.<p>2. I refuse to add a dependency I don’t fully understand – I literally read candidates 10× before `npm i`.<p>3. Serverless bills love to remind me that every KB and millisecond matters.<p>[ Key features ]<p>- Protocols: RESP2 and RESP3 (auto-negotiation)<p>- Bundle size: `&lt;30 KB` (core) &#x2F; `&lt;105 KB` (full)<p>- Dependencies: <i>0</i><p>- Extensibility: Drop-in command plugins, custom transactions<p>- Reliability: Auto-reconnect, per-command timeouts, type-checked replies<p>[ Roadmap &#x2F; Help wanted ]<p>- <i>Benchmarks</i> against `node-redis` &amp; `ioredis` (PRs welcome!)<p>- More first-class <i>Valkey</i> love<p>- <i>Fuzz-testing</i> the parser<p>- <i>Docs site</i> – the README came first; I’d love help polishing full docs<p>This might be my last big OSS push for a while, so <i>stars, issues, and PRs mean the world</i>.<p>If Solidis saves you some cold-start time or just scratches a TypeScript itch, let me know!<p><i>Repo:</i> <a href=\"https:&#x2F;&#x2F;github.com&#x2F;vcms-io&#x2F;solidis\">https:&#x2F;&#x2F;github.com&#x2F;vcms-io&#x2F;solidis</a><p><i>License:</i> MIT<p>Thanks for reading, and happy hacking!<p><i>(Feel free to AMA in the comments – I’m around.)</i>",
      "time": 1747430415,
      "title": "Show HN: Solidis – Tiny TS Redis client, no deps, for serverless",
      "type": "story",
      "url": "https://github.com/vcms-io/solidis"
    },
    {
      "by": "mitchbob",
      "descendants": 28,
      "id": 44008412,
      "kids": [
        44010627,
        44008736,
        44010423,
        44008549,
        44010681,
        44008413,
        44008719,
        44008955,
        44009631
      ],
      "score": 48,
      "time": 1747419806,
      "title": "The Magic Hours: The Films and Hidden Life of Terrence Malick",
      "type": "story",
      "url": "https://www.lrb.co.uk/the-paper/v47/n09/david-thomson/cool-tricking"
    },
    {
      "by": "CharlesW",
      "descendants": 10,
      "id": 44009621,
      "kids": [
        44010420,
        44009837,
        44010061
      ],
      "score": 28,
      "time": 1747427970,
      "title": "Methodical Banality",
      "type": "story",
      "url": "https://aeon.co/essays/who-needs-ai-text-generation-when-theres-erasmus-of-rotterdam"
    },
    {
      "by": "rbanffy",
      "descendants": 232,
      "id": 44003445,
      "kids": [
        44004897,
        44004148,
        44004601,
        44003888,
        44004437,
        44005463,
        44004459,
        44004803,
        44006092,
        44004078,
        44005881,
        44009594,
        44006653,
        44006220,
        44003999,
        44005920,
        44007262,
        44006151,
        44004461,
        44007770
      ],
      "score": 245,
      "time": 1747388551,
      "title": "The first year of free-threaded Python",
      "type": "story",
      "url": "https://labs.quansight.org/blog/free-threaded-one-year-recap"
    },
    {
      "by": "chhum",
      "descendants": 211,
      "id": 44005008,
      "kids": [
        44006194,
        44009800,
        44005715,
        44009701,
        44006859,
        44009768,
        44010592,
        44006750,
        44006819,
        44006389,
        44007415,
        44010208,
        44009929,
        44009862,
        44009449,
        44007492,
        44006117,
        44009846,
        44008320,
        44005992,
        44006356,
        44009555,
        44006861,
        44010796,
        44010140,
        44010094,
        44007780
      ],
      "score": 153,
      "time": 1747400725,
      "title": "Java at 30: Interview with James Gosling",
      "type": "story",
      "url": "https://thenewstack.io/java-at-30-the-genius-behind-the-code-that-changed-tech/"
    },
    {
      "by": "lakabimanil",
      "id": 44007644,
      "score": 1,
      "time": 1747414860,
      "title": "Foundry (YC F24) Is Hiring – Founding Engineer (ML × SWE)",
      "type": "job",
      "url": "https://www.ycombinator.com/companies/foundry/jobs/uwi8b6I-founding-engineer-ml-x-swe"
    },
    {
      "by": "meetpateltech",
      "descendants": 501,
      "id": 43975352,
      "kids": [
        44008902,
        44005192,
        44003351,
        44010086,
        44003227,
        44006325,
        44003140,
        44004143,
        44004914,
        44003657,
        44008301,
        44003478,
        44005229,
        44004877,
        44006846,
        44007344,
        44005764,
        44003783,
        44003360,
        44004023,
        44005335,
        44010830,
        44004900,
        44010655,
        44003050,
        44003279,
        44005407,
        44003998,
        44006273,
        44005382,
        44002999,
        44003294,
        44003117,
        44010353,
        44004013,
        44002962,
        44005721,
        44004035,
        44003201,
        44009969,
        44003251,
        44009214,
        44004903,
        44009565,
        44003375,
        44006448,
        44010559,
        44007378,
        44007151,
        44009403,
        44003356,
        44003836,
        44004122,
        44004086,
        44003039,
        44009552,
        44009044,
        44004030,
        44010033,
        44009911,
        44003154,
        44009641,
        44008053,
        44004762,
        44008767,
        44003010,
        44006737,
        44006196,
        44003596,
        44006229,
        44006822,
        44007157,
        44003653,
        44004744,
        44008712,
        44007331,
        44005755,
        44007794,
        44003172,
        44005770,
        44006241,
        44007783,
        44004065,
        44008694,
        44007382,
        44009743,
        44006531,
        44007140,
        44005800,
        44007557,
        44006189,
        44007412,
        44004128,
        44003388,
        44004989,
        44005140,
        44005644,
        44005699,
        44005088,
        44005891,
        44003307,
        44004507,
        44008145,
        44010032,
        44006193,
        44002977,
        44008582,
        44005703,
        44003899,
        44004002,
        44003678,
        44007239,
        44002982,
        44009775,
        44006774,
        44006603,
        44006573,
        44006565,
        44005875,
        44006899,
        44003133,
        44008240,
        44004142,
        44008647,
        44003246,
        44003178,
        44003090,
        44007330,
        44005798,
        44005744,
        44005689,
        44003220,
        44006759,
        44003897,
        44003586,
        44006093,
        44007920,
        44005594,
        44005205,
        44004842,
        44004746,
        44009171,
        44003127,
        44005392,
        44003849
      ],
      "score": 310,
      "time": 1747156811,
      "title": "Material 3 Expressive",
      "type": "story",
      "url": "https://design.google/library/expressive-material-design-google-research"
    },
    {
      "by": "rbanffy",
      "descendants": 137,
      "id": 43971616,
      "kids": [
        44010058,
        44006767,
        44005994,
        44005274,
        44006007,
        44005430,
        44006659,
        44010609,
        44006711,
        44006441,
        43972413,
        44008903,
        44007320,
        44007802,
        44010369,
        44008191,
        44007430,
        44005792,
        44006363,
        44005319,
        44005346,
        44005975,
        43971665,
        44010522,
        44005877,
        44009152,
        44005621,
        44008746,
        44007052,
        43971841,
        44005739
      ],
      "score": 259,
      "time": 1747134418,
      "title": "What were the MS-DOS programs that the moricons.dll icons were intended for?",
      "type": "story",
      "url": "https://devblogs.microsoft.com/oldnewthing/20250507-00/?p=111157"
    },
    {
      "by": "rbanffy",
      "descendants": 6,
      "id": 44007714,
      "kids": [
        44008816,
        44009156,
        44008935,
        44008782,
        44009241
      ],
      "score": 36,
      "time": 1747415282,
      "title": "New 'Superdiffusion' Proof Probes the Mysterious Math of Turbulence",
      "type": "story",
      "url": "https://www.quantamagazine.org/new-superdiffusion-proof-probes-the-mysterious-math-of-turbulence-20250516/"
    },
    {
      "by": "bookofjoe",
      "descendants": 5,
      "id": 43972154,
      "kids": [
        44010915,
        44010206,
        44009927
      ],
      "score": 24,
      "time": 1747139275,
      "title": "Lawful kinematics link eye movements to the limits of high-speed perception",
      "type": "story",
      "url": "https://www.nature.com/articles/s41467-025-58659-9"
    },
    {
      "by": "dcrimp",
      "descendants": 7,
      "id": 43976504,
      "kids": [
        44008409,
        44009851,
        44008640,
        43978318,
        44009849,
        44009664
      ],
      "score": 51,
      "time": 1747163521,
      "title": "Returning to My Roots in Hardware",
      "type": "story",
      "url": "https://dancrimp.nz/2025/03/31/hardware/"
    },
    {
      "by": "voxadam",
      "descendants": 13,
      "id": 43971944,
      "kids": [
        44009010,
        44011203,
        44011028,
        44008823,
        44009841
      ],
      "score": 22,
      "time": 1747137780,
      "title": "Taking a look at the next generation of telescopes",
      "type": "story",
      "url": "https://arstechnica.com/space/2025/05/tuesday-telescope-taking-a-look-at-the-next-generation-of-telescopes/"
    },
    {
      "by": "mitchbob",
      "descendants": 9,
      "id": 43975404,
      "kids": [
        44009294,
        44010806,
        44007939
      ],
      "score": 47,
      "time": 1747157134,
      "title": "Transformer: The Deep Chemistry of Life and Death",
      "type": "story",
      "url": "https://nick-lane.net/books/transformer-the-deep-chemistry-of-life-and-death/"
    },
    {
      "by": "gregpr07",
      "descendants": 11,
      "id": 44007065,
      "kids": [
        44008035,
        44009195,
        44008978,
        44010075,
        44008685,
        44007385,
        44009165,
        44007199,
        44008150
      ],
      "score": 46,
      "text": "Hey HN – Gregor &amp; Magnus here again.<p>A few months ago, we launched Browser Use (<a href=\"https:&#x2F;&#x2F;news.ycombinator.com&#x2F;item?id=43173378\">https:&#x2F;&#x2F;news.ycombinator.com&#x2F;item?id=43173378</a>), which let LLMs perform tasks in the browser using natural language prompts. It was great for one-off tasks like booking flights or finding products—but we soon realized enterprises have somewhat different needs:<p>They typically have one workflow with dynamic variables (e.g., filling out a form and downloading a PDF) that they want to reliably run a million times without breaking. Pure LLM agents were slow, expensive, and unpredictable for these high-frequency tasks.<p>So we just started working on Workflow Use:<p>- You show the browser what to do (by manually recording steps; show don’t tell).<p>- An LLM converts these recordings into deterministic scripts with variables (scripts include AI steps as well, where it’s 100% agentic)<p>- Scripts run reliably, 10x faster, and ~90% cheaper than Browser Use.<p>- If a step breaks, workflow will fallback to Browser Use and agentically run the step. (This self-healing functionality is still very early.)<p>This project just kicked off, so lots of things will break, it’s definitely not production-ready yet, and plenty of stuff is still missing (like a solid editor and proper self-healing). But we wanted to share early, get feedback, and figure out what workflows you’d want to automate this way.<p>Try it out and let us know what you think!",
      "time": 1747411500,
      "title": "Show HN: Workflow Use – Deterministic, self-healing browser automation (RPA 2.0)",
      "type": "story",
      "url": "https://github.com/browser-use/workflow-use"
    },
    {
      "by": "ingve",
      "descendants": 29,
      "id": 44005195,
      "kids": [
        44007398,
        44008019,
        44007633,
        44007532,
        44010981,
        44006485,
        44009334,
        44007869,
        44009702,
        44007386,
        44007827,
        44010378,
        44010181,
        44010871,
        44007289
      ],
      "score": 131,
      "time": 1747401760,
      "title": "Evolution of Rust Compiler Errors",
      "type": "story",
      "url": "https://kobzol.github.io/rust/rustc/2025/05/16/evolution-of-rustc-errors.html"
    },
    {
      "by": "Keats",
      "descendants": 28,
      "id": 44006735,
      "kids": [
        44007555,
        44008058,
        44010271,
        44009650,
        44007732,
        44008174,
        44009290,
        44007409,
        44008808
      ],
      "score": 63,
      "text": "We have been building a package manager for R inspired by Cargo in Rust. The main idea behind rv is to be explicit about the R version in use as well as declaring which dependencies are used in a rproject.toml file for a given project. There&#x27;s no renv::snapshot equivalent, everything needs to be declared up front, the config file (and resulting lockfile) is the source of truth. This avoids issue where renv might miss information about the installation and is also easy to tweak some packages, eg install one from source and install suggests from another.<p>If you have used Cargo&#x2F;npm&#x2F;any Python package manager&#x2F;etc, it will be very familiar.",
      "time": 1747409850,
      "title": "Show HN: Rv, a Package Manager for R",
      "type": "story",
      "url": "https://github.com/A2-ai/rv"
    },
    {
      "by": "jasonthorsness",
      "descendants": 20,
      "id": 43972449,
      "kids": [
        44008029,
        44010168,
        44007791,
        44006778,
        44008831,
        44009502,
        44006930,
        44008779
      ],
      "score": 54,
      "time": 1747141146,
      "title": "Tower Defense: Cache Control",
      "type": "story",
      "url": "https://www.jasonthorsness.com/26"
    },
    {
      "by": "LorenDB",
      "descendants": 77,
      "id": 44001087,
      "kids": [
        44001886,
        44003925,
        44007996,
        44007817,
        44002018,
        44007582,
        44001651,
        44005356,
        44008952,
        44005513,
        44006071,
        44001807,
        44005148,
        44001528,
        44002611
      ],
      "score": 340,
      "time": 1747359807,
      "title": "Ollama's new engine for multimodal models",
      "type": "story",
      "url": "https://ollama.com/blog/multimodal-models"
    },
    {
      "by": "pgjones",
      "descendants": 30,
      "id": 44004827,
      "kids": [
        44006804,
        44005951,
        44009669,
        44007257,
        44005869,
        44008812,
        44008236,
        44005593,
        44005627,
        44006578,
        44005841,
        44005546
      ],
      "score": 72,
      "text": "SQL-tString is a SQL builder that utilises the recently accepted PEP-750, <a href=\"https:&#x2F;&#x2F;peps.python.org&#x2F;pep-0750&#x2F;\" rel=\"nofollow\">https:&#x2F;&#x2F;peps.python.org&#x2F;pep-0750&#x2F;</a>, t-strings to build SQL queries, for example,<p><pre><code>    from sql_tstring import sql\n    \n    val = 2\n    query, values = sql(t&quot;SELECT x FROM y WHERE x = {val}&quot;)\n    assert query == &quot;SELECT x FROM y WHERE x = ?&quot;\n    assert values == [2]\n    db.execute(query, values)  # Most DB engines support this\n</code></pre>\nThe placeholder ? protects against SQL injection, but cannot be used everywhere. For example, a column name cannot be a placeholder. If you try this SQL-tString will raise an error,<p><pre><code>    col = &quot;x&quot;\n    sql(t&quot;SELECT {col} FROM y&quot;)  # Raises ValueError\n</code></pre>\nTo proceed you&#x27;ll need to declare what the valid values of col can be,<p><pre><code>    from sql_tstring import sql_context\n    \n    with sql_context(columns=&quot;x&quot;):\n        query, values = sql(t&quot;SELECT {col} FROM y&quot;)\n    assert query == &quot;SELECT x FROM y&quot;\n    assert values == []\n</code></pre>\nThus allowing you to protect against SQL injection.<p>As t-strings are format strings you can safely format the literals you&#x27;d like to pass as variables,<p><pre><code>    text = &quot;world&quot;\n    query, values = sql(t&quot;SELECT x FROM y WHERE x LIKE &#x27;%{text}&#x27;&quot;)\n    assert query == &quot;SELECT x FROM y WHERE x LIKE ?&quot;\n    assert values == [&quot;%world&quot;]\n</code></pre>\nThis is especially useful when used with the Absent rewriting value.<p>SQL-tString is a SQL builder and as such you can use special RewritingValues to alter and build the query you want at runtime. This is best shown by considering a query you sometimes want to search by one column a, sometimes by b, and sometimes both,<p><pre><code>    def search(\n        *,\n        a: str | AbsentType = Absent,\n        b: str | AbsentType = Absent\n    ) -&gt; tuple[str, list[str]]:\n        return sql(t&quot;SELECT x FROM y WHERE a = {a} AND b = {b}&quot;)\n    \n    assert search() == &quot;SELECT x FROM y&quot;, []\n    assert search(a=&quot;hello&quot;) == &quot;SELECT x FROM y WHERE a = ?&quot;, [&quot;hello&quot;]\n    assert search(b=&quot;world&quot;) == &quot;SELECT x FROM y WHERE b = ?&quot;, [&quot;world&quot;]\n    assert search(a=&quot;hello&quot;, b=&quot;world&quot;) == (\n        &quot;SELECT x FROM y WHERE a = ? AND b = ?&quot;, [&quot;hello&quot;, &quot;world&quot;]\n    )\n</code></pre>\nSpecifically Absent (which is an alias of RewritingValue.ABSENT) will remove the expression it is present in, and if there an no expressions left after the removal it will also remove the clause.<p>The other rewriting values I&#x27;ve included are handle the frustrating case of comparing to NULL, for example the following is valid but won&#x27;t work as you&#x27;d likely expect,<p><pre><code>    optional = None\n    sql(t&quot;SELECT x FROM y WHERE x = {optional}&quot;)\n</code></pre>\nInstead you can use IsNull to achieve the right result,<p><pre><code>    from sql_tstring import IsNull\n\n    optional = IsNull\n    query, values = sql(t&quot;SELECT x FROM y WHERE x = {optional}&quot;)\n    assert query == &quot;SELECT x FROM y WHERE x IS NULL&quot;\n    assert values == []\n</code></pre>\nThere is also a IsNotNull for the negated comparison.<p>The final feature allows for complex query building by nesting a t-string within the existing,<p><pre><code>    inner = t&quot;x = &#x27;a&#x27;&quot;\n    query, _ = sql(t&quot;SELECT x FROM y WHERE {inner}&quot;)\n    assert query == &quot;SELECT x FROM y WHERE x = &#x27;a&#x27;&quot;\n</code></pre>\nThis library can be used today without Python3.14&#x27;s t-strings with some limitations, <a href=\"https:&#x2F;&#x2F;github.com&#x2F;pgjones&#x2F;sql-tstring?tab=readme-ov-file#pre-python-314-usage\">https:&#x2F;&#x2F;github.com&#x2F;pgjones&#x2F;sql-tstring?tab=readme-ov-file#pr...</a>, and I&#x27;ve been doing so this year. Thoughts and feedback very welcome.",
      "time": 1747399702,
      "title": "Show HN: SQL-tString a t-string SQL builder in Python",
      "type": "story",
      "url": "https://github.com/pgjones/sql-tstring"
    },
    {
      "by": "delduca",
      "descendants": 2,
      "id": 44010007,
      "kids": [
        44011264,
        44010164
      ],
      "score": 9,
      "text": "Hi HN!<p>I’ve been building a 2D game using a custom engine I wrote from scratch – no Unity, no frameworks. It’s fully self-funded and will be released commercially on Steam.<p>Engine source code (MIT): <a href=\"http:&#x2F;&#x2F;github.com&#x2F;willtobyte&#x2F;carimbo\">http:&#x2F;&#x2F;github.com&#x2F;willtobyte&#x2F;carimbo</a><p>I’d love feedback on the gameplay, visuals, performance, or anything else. Thanks!",
      "time": 1747431601,
      "title": "Show HN: Self-Funded Game with Homemade Engine – Play Online, Steam Coming",
      "type": "story",
      "url": "https://bereprobate.com"
    },
    {
      "by": "surprisetalk",
      "descendants": 77,
      "id": 44005110,
      "kids": [
        44007988,
        44005946,
        44008453,
        44009826,
        44009618,
        44006027,
        44008216,
        44006602,
        44006467,
        44007131,
        44005752
      ],
      "score": 93,
      "time": 1747401276,
      "title": "British naval dominance during the age of sail",
      "type": "story",
      "url": "https://www.lesswrong.com/posts/YE4XsvSFJiZkWFtFE/explaining-british-naval-dominance-during-the-age-of-sail"
    },
    {
      "by": "nalinidash",
      "descendants": 434,
      "id": 44001765,
      "kids": [
        44002326,
        44002116,
        44003765,
        44007387,
        44002276,
        44002271,
        44001883,
        44001832,
        44004904,
        44005698,
        44002994,
        44004276,
        44002111,
        44002386,
        44006989,
        44005666,
        44004068,
        44006493,
        44008607,
        44006958,
        44005633,
        44003616,
        44004917,
        44003441,
        44002627,
        44009687,
        44002081,
        44003947,
        44004132,
        44002304,
        44002885,
        44002796,
        44002208,
        44002852,
        44003844,
        44003545,
        44002596,
        44001912,
        44001904,
        44004137,
        44007418,
        44005089,
        44003350,
        44003767,
        44003289,
        44001988,
        44002004,
        44003571
      ],
      "score": 180,
      "time": 1747368588,
      "title": "The Awful German Language (1880)",
      "type": "story",
      "url": "https://faculty.georgetown.edu/jod/texts/twain.german.html"
    },
    {
      "by": "luismedel",
      "descendants": 17,
      "id": 43970953,
      "kids": [
        44007348,
        44009427,
        43978413,
        44008339
      ],
      "score": 46,
      "time": 1747126900,
      "title": "LPython: Novel, Fast, Retargetable Python Compiler (2023)",
      "type": "story",
      "url": "https://lpython.org/blog/2023/07/lpython-novel-fast-retargetable-python-compiler/"
    },
    {
      "by": "jbredeche",
      "descendants": 485,
      "id": 43997636,
      "kids": [
        43998447,
        44000717,
        43998721,
        43998761,
        43997668,
        43999073,
        43998640,
        44002113,
        43998661,
        44000636,
        44008619,
        44002059,
        44008013,
        44009662,
        44005708,
        44003576,
        44001703,
        43999963,
        44001161,
        44001440,
        44005053,
        44008239,
        44004165,
        44001700,
        43998840,
        44003764,
        44001535,
        44001745,
        44001991,
        44001331,
        43998764,
        43998808,
        44001936,
        44005811,
        43998917,
        43998684,
        43998409,
        44003462,
        44002908,
        44002122,
        44002077,
        44001624,
        43999616,
        44003648,
        44001812,
        43998395,
        44004553,
        44006122,
        44005711,
        44001592,
        44000850,
        44008642
      ],
      "score": 1151,
      "time": 1747332366,
      "title": "Baby is healed with first personalized gene-editing treatment",
      "type": "story",
      "url": "https://www.nytimes.com/2025/05/15/health/gene-editing-personalized-rare-disorders.html"
    },
    {
      "by": "mellosouls",
      "descendants": 6,
      "id": 44007854,
      "kids": [
        44008014,
        44009415,
        44008436,
        44008006
      ],
      "score": 30,
      "time": 1747416088,
      "title": "Stax Museum Bob Abrahamian Collection",
      "type": "story",
      "url": "https://bobacollection.staxmuseum.org/"
    },
    {
      "by": "bryanrasmussen",
      "descendants": 63,
      "id": 43974461,
      "kids": [
        44002280,
        44006888,
        44005680,
        44005494,
        44007106,
        44004103
      ],
      "score": 143,
      "time": 1747152480,
      "title": "Náhuatl and Mayan Language Renaissance Occurring in Mexico",
      "type": "story",
      "url": "https://yucatanmagazine.com/mayan-language-renaissance/"
    },
    {
      "by": "greyface-",
      "descendants": 111,
      "id": 44004625,
      "kids": [
        44004852,
        44006100,
        44004969,
        44004978,
        44005815,
        44004931,
        44005882,
        44005870,
        44007046,
        44005028,
        44004948,
        44005094,
        44005588,
        44005150
      ],
      "score": 254,
      "time": 1747398605,
      "title": "Sci-Net",
      "type": "story",
      "url": "https://sci-hub.se/sci-net"
    },
    {
      "by": "jnord",
      "descendants": 1,
      "id": 44010823,
      "kids": [
        44011267
      ],
      "score": 13,
      "time": 1747439390,
      "title": "It's Not Just a Feeling: Data Shows Boys and Young Men Are Falling Behind",
      "type": "story",
      "url": "https://www.nytimes.com/2025/05/13/upshot/boys-falling-behind-data.html"
    },
    {
      "by": "plam503711",
      "descendants": 178,
      "id": 44004388,
      "kids": [
        44004768,
        44004552,
        44004715,
        44004569,
        44004502,
        44005440,
        44004753,
        44004829,
        44007145,
        44005477,
        44006179,
        44004531,
        44006328,
        44006703,
        44005825,
        44005432,
        44005657,
        44004495,
        44004490,
        44004760,
        44004935,
        44005003,
        44004887,
        44004600,
        44008517,
        44004731,
        44004774,
        44006367,
        44005185,
        44004793,
        44006651,
        44004566,
        44004849,
        44004593,
        44009048,
        44004961,
        44004742,
        44007715,
        44004899,
        44005628,
        44005090,
        44004564,
        44004868,
        44007255,
        44005651,
        44004687,
        44009753,
        44004698,
        44004646,
        44004565,
        44004804,
        44007824,
        44006614,
        44004485,
        44004721,
        44004602,
        44004574
      ],
      "score": 465,
      "time": 1747396987,
      "title": "Ground control to Major Trial",
      "type": "story",
      "url": "https://virtualize.sh/blog/ground-control-to-major-trial/"
    },
    {
      "by": "fka",
      "descendants": 37,
      "id": 44003347,
      "kids": [
        44008186,
        44006098,
        44005677,
        44007424,
        44008875,
        44004489,
        44005717,
        44004181,
        44005353,
        44004470,
        44004118,
        44004277
      ],
      "score": 71,
      "time": 1747387431,
      "title": "Beyond Text: On-Demand UI Generation for Better Conversational Experiences",
      "type": "story",
      "url": "https://blog.fka.dev/blog/2025-05-16-beyond-text-only-ai-on-demand-ui-generation-for-better-conversational-experiences/"
    },
    {
      "by": "FrasiertheLion",
      "descendants": 99,
      "id": 43996555,
      "kids": [
        43998097,
        43997573,
        43997706,
        43997958,
        44000940,
        43999157,
        43999475,
        43996775,
        44009457,
        43998974,
        44000412,
        44000877,
        43997436,
        43999237,
        43998431,
        43998138,
        44002210,
        43998391,
        43997430,
        43996784,
        43998186,
        43997415,
        44002230,
        43998835,
        43996795,
        44000606,
        44003013,
        43999075,
        44002007,
        43998874,
        43996664,
        43997566,
        43997581
      ],
      "score": 138,
      "text": "Hello HN! We’re Tanya, Sacha, Jules and Nate from Tinfoil: <a href=\"https:&#x2F;&#x2F;tinfoil.sh\">https:&#x2F;&#x2F;tinfoil.sh</a>. We host models and AI workloads on the cloud while guaranteeing zero data access and retention. This lets us run open-source LLMs like Llama, or Deepseek R1 on cloud GPUs without you having to trust us—or any cloud provider—with private data.<p>Since AI performs better the more context you give it, we think solving AI privacy will unlock more valuable AI applications, just how TLS on the Internet enabled e-commerce to flourish knowing that your credit card info wouldn&#x27;t be stolen by someone sniffing internet packets.<p>We come from backgrounds in cryptography, security, and infrastructure. Jules did his PhD in trusted hardware and confidential computing at MIT, and worked with NVIDIA and Microsoft Research on the same, Sacha did his PhD in privacy-preserving cryptography at MIT, Nate worked on privacy tech like Tor, and I (Tanya) was on Cloudflare&#x27;s cryptography team. We were unsatisfied with band-aid techniques like PII redaction (which is actually undesirable in some cases like AI personal assistants) or “pinky promise” security through legal contracts like DPAs. We wanted a real solution that replaced trust with provable security.<p>Running models locally or on-prem is an option, but can be expensive and inconvenient. Fully Homomorphic Encryption (FHE) is not practical for LLM inference for the foreseeable future. The next best option is using secure enclaves: a secure environment on the chip that no other software running on the host machine can access. This lets us perform LLM inference in the cloud while being able to prove that no one, not even Tinfoil or the cloud provider, can access the data. And because these security mechanisms are implemented in hardware, there is minimal performance overhead.<p>Even though we (Tinfoil) control the host machine, we do not have any visibility into the data processed inside of the enclave. At a high level, a secure enclave is a set of cores that are reserved, isolated, and locked down to create a sectioned off area. Everything that comes out of the enclave is encrypted: memory and network traffic, but also peripheral (PCIe) traffic to other devices such as the GPU. These encryptions are performed using secret keys that are generated inside the enclave during setup, which never leave its boundaries. Additionally, a “hardware root of trust” baked into the chip lets clients check security claims and verify that all security mechanisms are in place.<p>Up until recently, secure enclaves were only available on CPUs. But NVIDIA confidential computing recently added these hardware-based capabilities to their latest GPUs, making it possible to run GPU-based workloads in a secure enclave.<p>Here’s how it works in a nutshell:<p>1. We publish the code that should run inside the secure enclave to Github, as well as a hash of the compiled binary to a transparency log called Sigstore<p>2. Before sending data to the enclave, the client fetches a signed document from the enclave which includes a hash of the running code signed by the CPU manufacturer. It then verifies the signature with the hardware manufacturer to prove the hardware is genuine. Then the client fetches a hash of the source code from a transparency log (Sigstore) and checks that the hash equals the one we got from the enclave. This lets the client get verifiable proof that the enclave is running the exact code we claim.<p>3. With the assurance that the enclave environment is what we expect, the client sends its data to the enclave, which travels encrypted (TLS) and is only decrypted inside the enclave.<p>4. Processing happens entirely within this protected environment. Even an attacker that controls the host machine can’t access this data.\nWe believe making end-to-end verifiability a “first class citizen” is key. Secure enclaves have traditionally been used to remove trust from the cloud provider, not necessarily from the application provider. This is evidenced by confidential VM technologies such as Azure Confidential VM allowing ssh access by the host into the confidential VM. Our goal is to provably remove trust both from ourselves, aka the application provider, as well as the cloud provider.<p>We encourage you to be skeptical of our privacy claims. Verifiability is our answer. It’s not just us saying it’s private; the hardware and cryptography let you check. Here’s a guide that walks you through the verification process: <a href=\"https:&#x2F;&#x2F;docs.tinfoil.sh&#x2F;verification&#x2F;attestation-architecture\">https:&#x2F;&#x2F;docs.tinfoil.sh&#x2F;verification&#x2F;attestation-architectur...</a>.<p>People are using us for analyzing sensitive docs, building copilots for proprietary code, and processing user data in agentic AI applications without the privacy risks that previously blocked cloud AI adoption.<p>We’re excited to share Tinfoil with HN!<p>* Try the chat (<a href=\"https:&#x2F;&#x2F;tinfoil.sh&#x2F;chat\">https:&#x2F;&#x2F;tinfoil.sh&#x2F;chat</a>): It verifies attestation with an in-browser check. Free, limited messages, $20&#x2F;month for unlimited messages and additional models<p>* Use the API (<a href=\"https:&#x2F;&#x2F;tinfoil.sh&#x2F;inference\">https:&#x2F;&#x2F;tinfoil.sh&#x2F;inference</a>): OpenAI API compatible interface. $2 &#x2F; 1M tokens<p>* Take your existing Docker image and make it end to end confidential by deploying on Tinfoil. Here&#x27;s a demo of how you could use Tinfoil to run a deepfake detection service that could run securely on people&#x27;s private videos: <a href=\"https:&#x2F;&#x2F;www.youtube.com&#x2F;watch?v=_8hLmqoutyk\" rel=\"nofollow\">https:&#x2F;&#x2F;www.youtube.com&#x2F;watch?v=_8hLmqoutyk</a>. Note: This feature is not currently self-serve.<p>* Reach out to us at contact@tinfoil.sh if you want to run a different model or want to deploy a custom application, or if you just want to learn more!<p>Let us know what you think, we’d love to hear about your experiences and ideas in this space!",
      "time": 1747325940,
      "title": "Launch HN: Tinfoil (YC X25): Verifiable Privacy for Cloud AI",
      "type": "story"
    },
    {
      "by": "generichuman",
      "descendants": 157,
      "id": 44000759,
      "kids": [
        44004292,
        44007009,
        44001141,
        44001099,
        44000882,
        44000913,
        44001523,
        44003485,
        44003419,
        44001089,
        44001202,
        44006986,
        44003582,
        44001640,
        44004364,
        44001031,
        44003393,
        44001377,
        44001539,
        44001686,
        44001073,
        44000868,
        44001299,
        44002523
      ],
      "score": 216,
      "time": 1747356035,
      "title": "Teal – A statically-typed dialect of Lua",
      "type": "story",
      "url": "https://teal-language.org/"
    },
    {
      "by": "arittr",
      "descendants": 57,
      "id": 43998049,
      "kids": [
        44006399,
        44003190,
        43999554,
        44003534,
        44002570,
        44002582,
        44003165,
        44004379
      ],
      "score": 164,
      "time": 1747334875,
      "title": "Windsurf SWE-1: Our First Frontier Models",
      "type": "story",
      "url": "https://windsurf.com/blog/windsurf-wave-9-swe-1"
    },
    {
      "by": "andreeamiclaus",
      "descendants": 4,
      "id": 43977821,
      "kids": [
        44009878,
        44010623,
        43977822
      ],
      "score": 7,
      "time": 1747170969,
      "title": "Data preparation for function tooling is boring",
      "type": "story",
      "url": "https://thehyperplane.substack.com/p/data-preparation-for-function-tooling"
    },
    {
      "by": "stephenhandley",
      "descendants": 23,
      "id": 44001391,
      "kids": [
        44001819,
        44001392,
        44002191,
        44001482,
        44003273,
        44002021,
        44002095,
        44001693,
        44001879,
        44001688,
        44003049,
        44006138,
        44002178
      ],
      "score": 88,
      "time": 1747363578,
      "title": "Cracked – Method chaining/CSS-style selector web audio library",
      "type": "story",
      "url": "https://github.com/billorcutt/i_dropped_my_phone_the_screen_cracked"
    },
    {
      "by": "abelanger",
      "descendants": 23,
      "id": 44005899,
      "kids": [
        44007756,
        44008896,
        44009409,
        44006512,
        44009476,
        44008368,
        44008504,
        44007759,
        44010091
      ],
      "score": 42,
      "time": 1747405463,
      "title": "The fastest Postgres inserts",
      "type": "story",
      "url": "https://docs.hatchet.run/blog/fastest-postgres-inserts"
    },
    {
      "by": "Brajeshwar",
      "descendants": 6,
      "id": 43973677,
      "kids": [
        44005209,
        44008859,
        44004031
      ],
      "score": 65,
      "time": 1747148277,
      "title": "Zinc Microcapacitors Are the Best of Both Worlds",
      "type": "story",
      "url": "https://spectrum.ieee.org/zinc-microcapacitor"
    },
    {
      "by": "r3tr0",
      "descendants": 54,
      "id": 43974872,
      "kids": [
        44003575,
        44002187,
        44002910,
        44001607,
        44001410,
        44010872,
        44002545,
        44006377,
        44003511,
        44005033,
        44003773,
        43974873,
        44007139,
        44002161,
        44003860,
        44005085,
        44002002,
        44005774,
        44001729,
        44003488,
        44001783
      ],
      "score": 119,
      "time": 1747154584,
      "title": "Lock-Free Rust: How to Build a Rollercoaster While It's on Fire",
      "type": "story",
      "url": "https://yeet.cx/blog/lock-free-rust/"
    },
    {
      "by": "ngoldbaum",
      "descendants": 1,
      "id": 43976886,
      "kids": [
        44010022
      ],
      "score": 10,
      "time": 1747165655,
      "title": "The first year of free-threaded Python",
      "type": "story",
      "url": "https://labs.quansight.org/blog/free-threaded-one-year-recap"
    },
    {
      "by": "smartmic",
      "descendants": 20,
      "id": 43998707,
      "kids": [
        44000400,
        43999638,
        43999895,
        44003179,
        44007526,
        44000031,
        43999301,
        44005372,
        44000679,
        44005799,
        44001658,
        44000990
      ],
      "score": 163,
      "time": 1747339019,
      "title": "Tek – A music making program for 24-bit Unicode terminals",
      "type": "story",
      "url": "https://codeberg.org/unspeaker/tek"
    },
    {
      "by": "gnabgib",
      "descendants": 150,
      "id": 43999748,
      "kids": [
        44001929,
        44001038,
        43999955,
        44005784,
        44000152,
        44000282,
        44003801,
        44001081,
        44000559,
        44001491,
        44000274,
        44003601,
        44002644,
        44003014,
        44000820,
        44001577,
        44000728,
        44002046,
        44002660,
        44000308,
        44003880,
        44000530,
        44002866,
        44002344,
        44000224,
        44001358,
        44000941,
        44000124,
        44000123
      ],
      "score": 409,
      "time": 1747346239,
      "title": "A leap year check in three instructions",
      "type": "story",
      "url": "https://hueffner.de/falk/blog/a-leap-year-check-in-three-instructions.html"
    },
    {
      "by": "surprisetalk",
      "descendants": 49,
      "id": 43968693,
      "kids": [
        44002305,
        44003588,
        44005178,
        44004221,
        44002963,
        44005282,
        44003792,
        44006056,
        44005103,
        44003782,
        44003426,
        44003668,
        44005603,
        44005548,
        44002914,
        44005872
      ],
      "score": 72,
      "time": 1747095967,
      "title": "Comma 3X: Initial Impressions",
      "type": "story",
      "url": "https://beesbuzz.biz/blog/14719-Comma-3X-Initial-impressions"
    },
    {
      "by": "sohkamyung",
      "descendants": 32,
      "id": 44005668,
      "kids": [
        44007807,
        44006699,
        44007282,
        44008447,
        44005718,
        44006866,
        44007304,
        44006410
      ],
      "score": 98,
      "time": 1747404184,
      "title": "Ed Smylie, Who Saved the Apollo 13 Crew with Duct Tape, Dies at 95",
      "type": "story",
      "url": "https://www.nytimes.com/2025/05/16/science/space/ed-smylie-dead.html"
    },
    {
      "by": "CharlesW",
      "descendants": 3,
      "id": 44009689,
      "kids": [
        44010690,
        44011018,
        44010295
      ],
      "score": 17,
      "time": 1747428382,
      "title": "54 years ago, a programmer fixed a bug – and created an existential crisis",
      "type": "story",
      "url": "https://www.inverse.com/innovation/blinking-cursor-history"
    },
    {
      "by": "Deeg9rie9usi",
      "descendants": 34,
      "id": 43970057,
      "kids": [
        44000508,
        44003392,
        44000483,
        44002281,
        44003243,
        44000647,
        44004225,
        44001064,
        44000674,
        44000876,
        44002633,
        44010857,
        44003342,
        44003295,
        44000713,
        44000512,
        44004253
      ],
      "score": 86,
      "time": 1747117183,
      "title": "GTK Krell Monitors",
      "type": "story",
      "url": "https://gkrellm.srcbox.net/"
    },
    {
      "by": "todsacerdoti",
      "descendants": 37,
      "id": 43998115,
      "kids": [
        44000132,
        44000290,
        43999043,
        43998957,
        43998691,
        44000141,
        43999311,
        43999590,
        43999190,
        44003995,
        44000934
      ],
      "score": 133,
      "time": 1747335235,
      "title": "The current state of TLA⁺ development",
      "type": "story",
      "url": "https://ahelwer.ca/post/2025-05-15-tla-dev-status/"
    },
    {
      "by": "Anon84",
      "descendants": 132,
      "id": 44009999,
      "kids": [
        44010006,
        44010822,
        44011031,
        44010446,
        44010127,
        44010736,
        44010595,
        44010355,
        44010241,
        44010209,
        44010985,
        44010543,
        44010382,
        44010467,
        44010116,
        44010228,
        44010364,
        44010819,
        44010165
      ],
      "score": 178,
      "time": 1747431555,
      "title": "Moody’s strips U.S. of triple-A credit rating",
      "type": "story",
      "url": "https://www.ft.com/content/e456ea34-c6ad-43fe-abe9-d4ce781c07b4"
    },
    {
      "by": "0xKelsey",
      "descendants": 139,
      "id": 43971177,
      "kids": [
        43992762,
        43992561,
        44004704,
        43996070,
        43993911,
        43992921,
        44003149,
        43993723,
        43998290,
        44003774,
        43992806,
        43993116,
        43992599,
        43999366,
        43995103,
        43992955,
        43995365,
        43993887,
        43992488
      ],
      "score": 281,
      "time": 1747128943,
      "title": "Working on complex systems: What I learned working at Google",
      "type": "story",
      "url": "https://www.thecoder.cafe/p/complex-systems"
    },
    {
      "by": "CharlesW",
      "descendants": 83,
      "id": 43997932,
      "kids": [
        43998644,
        44003101,
        44002588,
        43998933,
        44004970,
        43999158,
        43999645,
        43998543,
        43998942,
        44006055,
        44001546,
        44001225,
        43998509,
        43999245,
        43998511,
        43998783,
        43998987,
        43998870,
        43999090,
        43999441,
        43998383,
        44002922,
        43998662,
        44000130,
        44001507,
        43998326
      ],
      "score": 116,
      "time": 1747334182,
      "title": "“The Mind in the Wheel” lays out a new foundation for the science of mind",
      "type": "story",
      "url": "https://www.experimental-history.com/p/new-paradigm-for-psychology-just"
    },
    {
      "by": "a7fort",
      "descendants": 197,
      "id": 44003700,
      "kids": [
        44004024,
        44004319,
        44004040,
        44004077,
        44003966,
        44005638,
        44004044,
        44005873,
        44010057,
        44004327,
        44004125,
        44010199,
        44006430,
        44004117,
        44004072,
        44005245,
        44005501,
        44004151,
        44007745,
        44005547,
        44006612,
        44004190,
        44005235,
        44005293,
        44004620,
        44004099,
        44006337,
        44004037,
        44006451,
        44004799,
        44006291,
        44004102,
        44004049,
        44004105,
        44004444,
        44004412,
        44004188,
        44009145,
        44003997,
        44003977,
        44004161,
        44004540,
        44006043,
        44004307,
        44004764,
        44006712,
        44004381,
        44003974,
        44004338,
        44005523,
        44004073,
        44004064,
        44004150,
        44006667,
        44004432,
        44004059,
        44004400,
        44005558,
        44004123,
        44005821,
        44004083,
        44004361,
        44006301,
        44004131,
        44004012,
        44004391,
        44004058,
        44004333,
        44004512,
        44004196,
        44004240,
        44004005,
        44004533
      ],
      "score": 313,
      "time": 1747391375,
      "title": "After months of coding with LLMs, I'm going back to using my brain",
      "type": "story",
      "url": "https://albertofortin.com/writing/coding-with-ai"
    },
    {
      "by": "beeburrt",
      "descendants": 281,
      "id": 44002333,
      "kids": [
        44002548,
        44003023,
        44002877,
        44006320,
        44002400,
        44002742,
        44002414,
        44002960,
        44002413,
        44003752,
        44002394,
        44006347,
        44002974,
        44002934,
        44002746,
        44007070,
        44003810,
        44002401,
        44003681,
        44002494,
        44003390,
        44002712,
        44002846,
        44002892,
        44003795,
        44002535,
        44002569,
        44005457,
        44002634,
        44003876,
        44002516,
        44003550,
        44004084,
        44004257,
        44002681,
        44002418,
        44002412
      ],
      "score": 324,
      "time": 1747376585,
      "title": "BuyMeACoffee silently dropped support for many countries (2024)",
      "type": "story",
      "url": "https://zverok.space/blog/2024-08-08-bmac-snafu.html"
    },
    {
      "by": "gpi",
      "descendants": 483,
      "id": 43996307,
      "kids": [
        44003942,
        43998293,
        43996769,
        43997944,
        44003034,
        43997464,
        43999086,
        43997650,
        43996432,
        44003560,
        44002952,
        43998578,
        44003920,
        44003963,
        43996123,
        43996627,
        43999084,
        43997501,
        43997245,
        44004214,
        44003236,
        43998147,
        43996848,
        43998459,
        44003007,
        44003629,
        43996610,
        43996361,
        43996946,
        44005935,
        44000050,
        43998103,
        43994703,
        43996354,
        43997582,
        43997871,
        43996572,
        44001555,
        44004365,
        43996671,
        43996993,
        43996394,
        43996445,
        44000331,
        43996631,
        44000653,
        44000650,
        43994606,
        44003011,
        43994952,
        43996568,
        43998920,
        43994577,
        43996984,
        43996540,
        43998327,
        43997462,
        43998212,
        43994953,
        43996825
      ],
      "score": 397,
      "time": 1747324341,
      "title": "Coinbase says hackers bribed staff to steal customer data, demanding $20M ransom",
      "type": "story",
      "url": "https://www.cnbc.com/2025/05/15/coinbase-says-hackers-bribed-staff-to-steal-customer-data-and-are-demanding-20-million-ransom.html"
    },
    {
      "by": "LorenDB",
      "descendants": 71,
      "id": 43993897,
      "kids": [
        43994063,
        43994364,
        43994714,
        43995463,
        43995424,
        43996458,
        43996253,
        43994993,
        43994250,
        43994444,
        43994664
      ],
      "score": 107,
      "time": 1747308562,
      "title": "In the US, a rotating detonation rocket engine takes flight",
      "type": "story",
      "url": "https://arstechnica.com/space/2025/05/venus-aerospace-flies-its-rotating-detonation-rocket-engine-for-the-first-time/"
    },
    {
      "by": "crawshaw",
      "descendants": 298,
      "id": 43998472,
      "kids": [
        43999072,
        43998994,
        44002526,
        43999803,
        43999382,
        44000320,
        44000221,
        44000292,
        44000143,
        43998743,
        44000013,
        44002704,
        44005336,
        43999731,
        44001475,
        43999457,
        44005114,
        44002382,
        43999463,
        43998980,
        44002573,
        44001985,
        43999627,
        44000849,
        44001101,
        44002283,
        44000465,
        44006581,
        44000846,
        44004940,
        44003271,
        43999200,
        44001342,
        44000632,
        43999501,
        44001275,
        44001176,
        44001336,
        44000997,
        44004902,
        44000299,
        43999393
      ],
      "score": 419,
      "time": 1747337624,
      "title": "The unreasonable effectiveness of an LLM agent loop with tool use",
      "type": "story",
      "url": "https://sketch.dev/blog/agent-loop"
    },
    {
      "by": "PaulHoule",
      "descendants": 3,
      "id": 43974599,
      "kids": [
        44005050
      ],
      "score": 25,
      "time": 1747153213,
      "title": "Thermoelectric generator based on a robust carbon nanotube/BiSbTe foam",
      "type": "story",
      "url": "https://onlinelibrary.wiley.com/doi/10.1002/cey2.650"
    },
    {
      "by": "rbanffy",
      "descendants": 70,
      "id": 43998008,
      "kids": [
        44000368,
        43998541,
        44000587,
        43999659,
        43998475,
        44003247,
        43999408,
        44008821,
        44001095,
        44000749,
        43998569,
        43998854,
        44002480,
        43999386,
        43998950,
        44006554,
        44000970,
        43998731,
        44003472,
        44003143
      ],
      "score": 83,
      "time": 1747334623,
      "title": "Dr. Dobb's Journal interviews Jef Raskin (1986)",
      "type": "story",
      "url": "https://computeradsfromthepast.substack.com/p/dr-dobbs-journal-interviews-jef-raskin"
    },
    {
      "by": "robtherobber",
      "descendants": 108,
      "id": 44003449,
      "kids": [
        44006083,
        44005133,
        44004460,
        44005302,
        44004395,
        44006661,
        44006429,
        44007051,
        44005283,
        44005415,
        44007612,
        44004420,
        44004996,
        44005731,
        44004282
      ],
      "score": 112,
      "time": 1747388597,
      "title": "The average workday increased during the pandemic’s early weeks (2020)",
      "type": "story",
      "url": "https://www.library.hbs.edu/working-knowledge/you-re-right-you-are-working-longer-and-attending-more-meetings"
    },
    {
      "by": "sebg",
      "descendants": 43,
      "id": 43994333,
      "kids": [
        43997640,
        44001495,
        43995517,
        43997315,
        43996171,
        43996788,
        44004324,
        44001257,
        43996087,
        43995998,
        43995153,
        44000444
      ],
      "score": 146,
      "time": 1747312335,
      "title": "Pathfinding",
      "type": "story",
      "url": "https://juhrjuhr.itch.io/deep-space-exploitation/devlog/945428/9-pathfinding"
    },
    {
      "by": "nullhole",
      "descendants": 83,
      "id": 44000700,
      "kids": [
        44001238,
        44001239,
        44001433,
        44001486,
        44002717,
        44003126,
        44001402,
        44001389,
        44003886,
        44003665,
        44000881,
        44001762,
        44003186,
        44001431,
        44003341,
        44001551,
        44002380,
        44002969,
        44001381,
        44000986,
        44003637,
        44002560
      ],
      "score": 333,
      "time": 1747355349,
      "title": "NASA keeps ancient Voyager 1 spacecraft alive with Hail Mary thruster fix",
      "type": "story",
      "url": "https://www.theregister.com/2025/05/15/voyager_1_survives_with_thruster_fix/"
    },
    {
      "by": "transpute",
      "descendants": 1,
      "id": 44002639,
      "kids": [
        44005880
      ],
      "score": 27,
      "time": 1747380206,
      "title": "Git: Move files from one repo to another with history (2021)",
      "type": "story",
      "url": "https://vivekdhami.com/posts/git-move-repo-files-with-history/"
    },
    {
      "by": "bookofjoe",
      "descendants": 22,
      "id": 43974344,
      "kids": [
        44001986,
        44002347,
        44002765,
        44002784,
        43974560,
        44002351,
        44002209,
        44003234
      ],
      "score": 42,
      "time": 1747151908,
      "title": "Bringing 3D shoppable products online with generative AI",
      "type": "story",
      "url": "https://research.google/blog/bringing-3d-shoppable-products-online-with-generative-ai/"
    },
    {
      "by": "taubek",
      "descendants": 36,
      "id": 43971442,
      "kids": [
        44001159,
        44001513,
        44001340,
        44003522,
        44001121,
        44002368,
        44001617,
        44001461,
        44002298
      ],
      "score": 53,
      "time": 1747132063,
      "title": "Rolling Highway",
      "type": "story",
      "url": "https://en.wikipedia.org/wiki/Rolling_highway"
    },
    {
      "by": "markisus",
      "descendants": 51,
      "id": 43994827,
      "kids": [
        43995572,
        43995052,
        43995289,
        44001802,
        43995165,
        43995751,
        44010223,
        43995521,
        43995314,
        43998356,
        43998460,
        43998531,
        44000989,
        43995399,
        43997645,
        43994970,
        43995471,
        43998566,
        43995676,
        43995211,
        43995029
      ],
      "score": 139,
      "text": "LiveSplat is a system for turning RGBD camera streams into Gaussian splat scenes in real-time. The system works by passing all the RGBD frames into a feed forward neural net that outputs the current scene as Gaussian splats. These splats are then rendered in real-time. I&#x27;ve put together a demo video at the link above.",
      "time": 1747315609,
      "title": "Show HN: Real-Time Gaussian Splatting",
      "type": "story",
      "url": "https://github.com/axbycc/LiveSplat"
    },
    {
      "by": "davydog187",
      "descendants": 76,
      "id": 43972485,
      "kids": [
        43995411,
        43998344,
        43997882,
        43995421,
        43996224,
        43996339,
        43995221,
        43997955,
        43997613,
        43999285,
        43997427,
        43996391,
        43997108,
        43997507,
        43996779,
        43995320,
        43995362
      ],
      "score": 208,
      "time": 1747141431,
      "title": "Lua for Elixir",
      "type": "story",
      "url": "https://davelucia.com/blog/lua-elixir"
    },
    {
      "by": "MinimalAction",
      "descendants": 196,
      "id": 43996431,
      "kids": [
        43998232,
        43998345,
        43998126,
        43998166,
        43998463,
        43997860,
        43998530,
        43998278,
        43997778,
        43998417,
        43998368,
        43999427,
        43999046,
        43998385,
        44002619,
        43998456,
        43998325,
        44008578,
        43998231,
        44000393,
        43998760,
        43998121,
        43998076,
        44008653,
        43999002,
        44000698,
        43998507,
        43998051,
        43998187,
        44000027,
        43999149,
        43997907,
        43998120,
        44000950,
        43998247,
        44002429,
        43998521,
        44000256,
        43999017,
        43998527,
        44000171,
        44008164,
        43998649,
        44004977,
        43998484,
        43998616,
        44001320,
        43998239,
        43998135,
        43998087,
        43998105,
        44001240,
        44007701,
        44000678,
        43998694,
        43998943,
        43999932,
        44000067,
        43999077,
        43998724,
        43998940,
        44001034,
        43998320,
        43998257,
        43998583,
        43998192,
        44001610,
        43999134,
        43998069,
        44000611
      ],
      "score": 461,
      "time": 1747325122,
      "title": "I don't like NumPy",
      "type": "story",
      "url": "https://dynomight.net/numpy/"
    },
    {
      "by": "Tomte",
      "descendants": 6,
      "id": 44008657,
      "kids": [
        44009107,
        44009499
      ],
      "score": 15,
      "time": 1747421188,
      "title": "What Can You Do with a Slide Rule?",
      "type": "story",
      "url": "https://www.math.utah.edu/~pa/sliderules/"
    },
    {
      "by": "BSTRhino",
      "descendants": 43,
      "id": 43982892,
      "kids": [
        44000281,
        44001758,
        44000386,
        44002058,
        44000453,
        44001552,
        44000930,
        44000998,
        44000627,
        44000142,
        44000131,
        44000136,
        43989997,
        44000962
      ],
      "score": 84,
      "text": "For the past 3 years, I&#x27;ve been creating a new 2D game programming language where the multiplayer is completely automatic.\nThe idea is that someone who doesn&#x27;t even know what a &quot;remote procedure call&quot; is can make a multiplayer game by just setting `maxHumanPlayers=5` and it &quot;just works&quot;. The trick is the whole game simulation, including all the concurrent threads, can be executed deterministically and snapshotted for rollback netcode.<p>Normally when coding multiplayer you have to worry about following &quot;the rules of multiplayer&quot; like avoiding non-determinism, or not modifying entities your client has no authority over, but all that is just way too hard for someone who just wants to get straight into making games. So my idea was that if we put multiplayer into the fabric of the programming language, below all of your code, we can make the entire language multiplayer-safe. In Easel the entire world is hermetically sealed - there is nothing you can do to break multiplayer, which means it suits someone who just wants to make games and not learn all about networking. I&#x27;ve had people make multiplayer games on their first day of coding with Easel because you basically cannot go wrong.<p>There were so many other interesting things that went into this project. It&#x27;s written in Rust and compiled to WebAssembly because I think that the zero-download nature of the web is a better way of getting many people together into multiplayer games. The networking is done by relaying peer-to-peer connections through Cloudflare Calls, which means Cloudflare collates the messages and reduces the bandwidth requirements for the clients so games can have more players.<p>I also took inspiration from my experience React when creating this language, here&#x27;s how you would make a ship change color from green to red as it loses health:<p>`with Health {  \n  ImageSprite(@ship.svg, color=(Health &#x2F; MaxHealth).BlendHue(#ff6600, #66ff00))  \n}`<p>There is a lot of hidden magic that makes the code snippet above work - it creates a async coroutine that loops each time Health sends a signal, and the ImageSprite has an implicit ID assigned by the compiler so it knows which one to update each time around the loop. All of this lets you work at a higher level of abstraction and, in my opinion, make code that is easier to understand.<p>Speaking of async coroutines, my belief is that they don&#x27;t get used enough in other game engines because their lifetimes are not tied to anything - you have this danger where they can outlive their entities and crash your game. In Easel each async task lives and dies with its entity, which is why we call them behaviors. Clear lifetime semantics makes it safe to use async tasks everywhere in Easel, which is why Easel games often consist of thousands of concurrently-executing behaviors. In my opinion, this untangles your code and makes it easier to understand.<p>That&#x27;s just the beginning, there is even more to talk about, it has been a long journey these past 3 years, but I will stop there for now! I hope that, even for those people who don&#x27;t care about the multiplayer capabilities of Easel, they just find it an interesting proposal of how a next-generation game programming language could work.<p>The Editor runs in your web browser and is free to play around with, so I would love to see more people try out making some games! Click the &quot;Try it out&quot; button to open the Sample Project and see if you can change the code to achieve the suggested tasks listed in the README.",
      "time": 1747218678,
      "title": "Show HN: Easel – Code multiplayer games like singleplayer",
      "type": "story",
      "url": "https://easel.games/about"
    },
    {
      "by": "flashblaze",
      "descendants": 8,
      "id": 44003184,
      "kids": [
        44008304,
        44008742,
        44010817,
        44006266,
        44006796,
        44008966
      ],
      "score": 24,
      "time": 1747385727,
      "title": "Run your GitHub Actions locally",
      "type": "story",
      "url": "https://github.com/nektos/act"
    },
    {
      "by": "todsacerdoti",
      "descendants": 212,
      "id": 43999492,
      "kids": [
        44000516,
        44000113,
        44002373,
        44000347,
        43999922,
        44000207,
        44002245,
        44001185,
        44005442,
        44000686,
        44002790,
        44000358,
        44000777,
        44000091,
        44005167,
        44000055,
        44000399,
        44000499,
        44001451,
        44000411,
        44001288,
        44004398,
        44000253,
        44000775,
        44000782
      ],
      "score": 185,
      "time": 1747344430,
      "title": "Initialization in C++ is bonkers (2017)",
      "type": "story",
      "url": "https://blog.tartanllama.xyz/initialization-is-bonkers/"
    },
    {
      "by": "Fysi",
      "descendants": 259,
      "id": 43985489,
      "kids": [
        43986909,
        43986056,
        43987287,
        43986870,
        43987447,
        43986283,
        43987310,
        43990118,
        43992332,
        43985993,
        43985878,
        43986280,
        43990366,
        43990645,
        43992099,
        43988871,
        43986661,
        43988235,
        43986854,
        43986308,
        43992287,
        43997851,
        43989248,
        43985774,
        43989197,
        43986867,
        43989257,
        43988124,
        43988245,
        43989343,
        43987306,
        43988308,
        43998445,
        43987369,
        43987081,
        43991589,
        43989797,
        43988798,
        43987029,
        43987550,
        43989150,
        43986216,
        43991663,
        43991234,
        43988596,
        43989656,
        43985797,
        43989314,
        43991986,
        43987856,
        43990728,
        43992980,
        43998734,
        43987286,
        43987833,
        43988718,
        43991840,
        43990800,
        43986886,
        43985799,
        43988727,
        43986627,
        43994681,
        43985790,
        43988485,
        43985928
      ],
      "score": 993,
      "text": "See also <a href=\"https:&#x2F;&#x2F;www.nature.com&#x2F;articles&#x2F;d41586-025-01523-z\" rel=\"nofollow\">https:&#x2F;&#x2F;www.nature.com&#x2F;articles&#x2F;d41586-025-01523-z</a> (<a href=\"https:&#x2F;&#x2F;archive.is&#x2F;NBaXE\" rel=\"nofollow\">https:&#x2F;&#x2F;archive.is&#x2F;NBaXE</a>)",
      "time": 1747235415,
      "title": "AlphaEvolve: A Gemini-powered coding agent for designing advanced algorithms",
      "type": "story",
      "url": "https://deepmind.google/discover/blog/alphaevolve-a-gemini-powered-coding-agent-for-designing-advanced-algorithms/"
    },
    {
      "by": "Jabrov",
      "descendants": 66,
      "id": 44003741,
      "kids": [
        44004169,
        44005555,
        44004538,
        44005365,
        44004376,
        44007086,
        44005300,
        44005203,
        44005280,
        44008020,
        44010524,
        44007117,
        44010731,
        44008583,
        44005832,
        44004372,
        44006472,
        44006740
      ],
      "score": 178,
      "time": 1747391798,
      "title": "Ollama violating llama.cpp license for over a year",
      "type": "story",
      "url": "https://github.com/ollama/ollama/issues/3185"
    },
    {
      "by": "surprisetalk",
      "descendants": 264,
      "id": 43991396,
      "kids": [
        43992243,
        43994459,
        43992785,
        43993092,
        43991582,
        43991857,
        43993339,
        43993148,
        43994956,
        43991964,
        43993602,
        43991997,
        43993074,
        43998041,
        43993086,
        43991603,
        43991969,
        43991900,
        43993820,
        43991548,
        43992026,
        43992088,
        43992111,
        44000389,
        43994249,
        43993454,
        43992752,
        43991750,
        43992497,
        43992483,
        43993725,
        43992849,
        43992567,
        43999531,
        43993153,
        43992218,
        43991489,
        43993229,
        43996565,
        43992820,
        43996154,
        43992000,
        43994310,
        43993018,
        43992512,
        43991898,
        43992393,
        43991514,
        43993484,
        43993306,
        43992159,
        43997773,
        43993892,
        43991697,
        43996516,
        43994958,
        43994573,
        43992619,
        43992462,
        43992297,
        43991443,
        43992637,
        43992263,
        43991683,
        43991543,
        43991967,
        43994851,
        43992365
      ],
      "score": 706,
      "time": 1747277839,
      "title": "Human",
      "type": "story",
      "url": "https://quarter--mile.com/Human"
    },
    {
      "by": "fanf2",
      "descendants": 1,
      "id": 44009642,
      "kids": [
        44010892
      ],
      "score": 8,
      "time": 1747428123,
      "title": "I think about C99 strict aliasing rules",
      "type": "story",
      "url": "https://alanwu.space/post/strict-aliasing/"
    },
    {
      "by": "mikerg87",
      "descendants": 137,
      "id": 43971853,
      "kids": [
        43994284,
        43991827,
        43995434,
        43996072,
        43992857,
        43994733,
        43993002,
        43993813,
        43992459,
        43994047,
        43992290,
        43995918,
        43996580,
        43993677,
        43996767,
        44006916,
        43997510,
        43994546,
        43997338,
        43995657,
        43995698,
        43992844,
        43997709,
        43998146,
        43993680,
        44003694,
        43994559,
        43999332,
        43993902,
        43991992,
        43992270,
        43995733,
        43994506,
        43994091,
        43992728,
        44001316,
        43995407,
        43998751,
        43993991,
        43994465,
        43994959,
        43993687,
        43994242,
        43999316,
        43994634,
        43995136,
        43994616,
        43997343,
        43993550,
        43991861,
        43992665,
        43992279,
        43992607
      ],
      "score": 660,
      "time": 1747136996,
      "title": "Internet Artifacts",
      "type": "story",
      "url": "https://neal.fun/internet-artifacts/"
    },
    {
      "by": "edunteman",
      "descendants": 51,
      "id": 43988381,
      "kids": [
        43991197,
        43989752,
        43992832,
        43988789,
        43990420,
        43989430,
        43988590,
        43989033,
        43989862,
        43989464,
        43991632,
        43994379,
        43991958,
        43989416,
        43989296,
        43989110,
        43988980,
        43989382,
        43990883,
        43992034,
        43990185,
        43992435,
        43994344
      ],
      "score": 214,
      "text": "Hi HN! Erik here from Pig.dev, and today I&#x27;d like to share a new project we&#x27;ve just open sourced:<p>Muscle Mem is an SDK that records your agent&#x27;s tool-calling patterns as it solves tasks, and will deterministically replay those learned trajectories whenever the task is encountered again, falling back to agent mode if edge cases are detected. Like a JIT compiler, for behaviors.<p>At Pig, we built computer-use agents for automating legacy Windows applications (healthcare, lending, manufacturing, etc).<p>A recurring theme we ran into was that businesses <i>already</i> had RPA (pure-software scripts), and it worked for them in most cases. The pull to agents as an RPA alternative was <i>not</i> to have an infinitely flexible &quot;AI Employees&quot; as tech Twitter&#x2F;X may want you to think, but simply because their RPA breaks under occasional edge-cases and agents can gracefully handle those cases.<p>Using a pure-agent approach proved to be highly wasteful. Window&#x27;s accessibility APIs are poor, so you&#x27;re generally stuck using pure-vision agents, which can run around $40&#x2F;hr in token costs and take 5x longer than a human to perform a workflow. At this point, you&#x27;re better off hiring a human.<p>The goal of Muscle-Mem is to get LLMs out of the hot path of repetitive automations, intelligently swapping between script-based execution for repeat cases, and agent-based automations for discovery and self-healing.<p>While inspired by computer-use environments, Muscle Mem is designed to generalize to any automation performing discrete tasks in dynamic environments. It took a great deal of thought to figure out an API that generalizes, which I cover more deeply in this blog:\n<a href=\"https:&#x2F;&#x2F;erikdunteman.com&#x2F;blog&#x2F;muscle-mem&#x2F;\" rel=\"nofollow\">https:&#x2F;&#x2F;erikdunteman.com&#x2F;blog&#x2F;muscle-mem&#x2F;</a><p>Check out the repo, consider giving it a star, or dive deeper into the above blog. I look forward to your feedback!",
      "time": 1747251506,
      "title": "Show HN: Muscle-Mem, a behavior cache for AI agents",
      "type": "story",
      "url": "https://github.com/pig-dot-dev/muscle-mem"
    },
    {
      "by": "internet_points",
      "descendants": 1,
      "id": 43972083,
      "kids": [
        44002789,
        44003228
      ],
      "score": 34,
      "time": 1747138803,
      "title": "Archisuits (2005–2006)",
      "type": "story",
      "url": "https://insecurespaces.net/archisuits-2005-2006/"
    },
    {
      "by": "mrmanner",
      "descendants": 12,
      "id": 44003447,
      "kids": [
        44005171,
        44004511,
        44004314,
        44004195,
        44004154,
        44005758
      ],
      "score": 114,
      "time": 1747388579,
      "title": "Leeks and Leaks",
      "type": "story",
      "url": "https://daniel.haxx.se/blog/2025/05/16/leeks-and-leaks/"
    },
    {
      "by": "Kerrick",
      "descendants": 29,
      "id": 43997286,
      "kids": [
        43999592,
        44010551,
        43999885,
        43999422,
        43999921,
        44009712,
        43999615,
        43999538,
        44000158,
        44000810,
        43999555,
        43999530,
        44000596,
        43999815,
        43997291,
        44001373
      ],
      "score": 56,
      "time": 1747330203,
      "title": "Stop using REST for state synchronization (2024)",
      "type": "story",
      "url": "https://www.mbid.me/posts/stop-using-rest-for-state-synchronization/"
    },
    {
      "by": "pompidoo",
      "descendants": 97,
      "id": 43996251,
      "kids": [
        43998321,
        44000259,
        43999519,
        44000951,
        43997410,
        44001011,
        43997768,
        43998814,
        44000043,
        43997218,
        44001025,
        44000140,
        44009733,
        43997642,
        43998699,
        43997723,
        43997346,
        43997335,
        43997520,
        43997364
      ],
      "score": 109,
      "text": "I developed a device that turns an Airtag on and off at specific intervals. \nCurrent Airtags are detectable right away and cannot be used to track stolen property. That device allows you to hide an Airtag in your car, for example, and someone that steals your car will not be able to use some app to detect it. \nThe Airtag will also not warn the thief of its presence. After some hours, the Airtag turns on again and you can find out its location. It’s not foolproof, as the timing has to be right, but still useful.<p>What do you think?",
      "time": 1747323986,
      "title": "Show HN: Undetectag, track stolen items with AirTag",
      "type": "story",
      "url": "https://undetectag.com/"
    },
    {
      "by": "Luc",
      "descendants": 117,
      "id": 43997728,
      "kids": [
        43999365,
        43998789,
        43998377,
        43998650,
        43998681,
        44002638,
        44001054,
        44004110,
        43999222,
        43998825,
        43998821,
        44001504,
        44009482,
        44001895,
        43998956,
        43999404,
        43998822
      ],
      "score": 70,
      "time": 1747332928,
      "title": "Improving Naval Ship Acquisition",
      "type": "story",
      "url": "https://www.construction-physics.com/p/fixing-naval-ship-acquisition"
    },
    {
      "by": "luu",
      "descendants": 30,
      "id": 43998423,
      "kids": [
        44001710,
        44001004,
        44000756,
        43999683,
        44000102,
        44000451,
        44001144,
        44001972,
        44000306,
        44000327,
        43999714,
        44000322,
        43999750
      ],
      "score": 93,
      "time": 1747337281,
      "title": "Refactoring Clojure",
      "type": "story",
      "url": "https://www.orsolabs.com/post/refactoring-clojure-1/"
    },
    {
      "by": "weinzierl",
      "descendants": 1,
      "id": 44002694,
      "kids": [
        44004422
      ],
      "score": 16,
      "time": 1747380773,
      "title": "OWASP Top for Large Language Model Applications",
      "type": "story",
      "url": "https://owasp.org/www-project-top-10-for-large-language-model-applications/"
    },
    {
      "by": "alyt",
      "descendants": 3,
      "id": 44005413,
      "kids": [
        44009716,
        44005597
      ],
      "score": 10,
      "text": "Hey HN,<p>For anyone unfamiliar: you can use `#region My Region` and `#endregion` comments to organize your code into foldable &quot;regions&quot;.<p>Before building this extension, I&#x27;d use regions as a last resort, e.g. for large test files or classes that aren&#x27;t worth splitting up more, or code that can&#x27;t be split at all. They&#x27;d help somewhat, but the lack of tooling made them pretty underwhelming to work with. So I built out Region Helper, which as of yesterday&#x27;s release provides:<p>- Commands &#x2F; hotkeys for jumping between &#x2F; selecting regions<p>- Fuzzy search (like &quot;Go to Symbol&quot; but for regions)<p>- A &quot;Regions&quot; tree view (interactive: click to navigate, and auto-highlights cursor&#x27;s active region)<p>- A &quot;Full Outline&quot; tree view: like the builtin Outline, but incorporates regions (also interactive)<p>- Diagnostics: blue squiggle warnings when you have unmatched #region &#x2F; #endregion markers<p>- Builtin support for 49 languages, customizable via settings<p>- An API for accessing Region Helper&#x27;s data, so devs can build their own region extensions without needing to re-parse regions<p>- (New) Expand&#x2F;Collapse All tree actions and persisted tree item collapse state across sessions<p>It&#x27;s also performant even on massive files, e.g. TypeScript&#x27;s ~50K LOC `checker.ts`.<p>These days, I personally enjoy using regions way more, and also add them more often to my code, now that they also serve as quick-jump points while navigating a file. Still definitely important not to overuse them, but I don&#x27;t find them to be nearly as much of a code smell as I might have before.<p>If you&#x27;re extra curious, you can check out Region Helper&#x27;s source code to see a few real examples of where I&#x27;ve used them while building out this extension.<p>P.S. if you didn&#x27;t know, your VSCode settings files (e.g. `settings.json`) are JSONC and support `&#x2F;&#x2F; #region`  and `&#x2F;&#x2F; #endregion` markers. Since they can&#x27;t be split into multiple files, regions are a pretty convenient way to organize them.<p>Feel free to share your own thoughts on regions and whether or not you find them useful ever, always curious to hear others&#x27; opinions.",
      "time": 1747402784,
      "title": "Show HN: Making #regions actually useful in VSCode",
      "type": "story",
      "url": "https://github.com/alythobani/vscode-region-helper"
    },
    {
      "by": "GavCo",
      "descendants": 14,
      "id": 43970768,
      "kids": [
        43996999,
        43997571
      ],
      "score": 56,
      "time": 1747124950,
      "title": "The Fastest Way yet to Color Graphs",
      "type": "story",
      "url": "https://www.quantamagazine.org/the-fastest-way-yet-to-color-graphs-20250512/"
    }
  ]
}