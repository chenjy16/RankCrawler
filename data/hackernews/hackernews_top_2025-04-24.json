{
  "fetch_time": "2025-04-24 01:13:46",
  "stories": [
    {
      "by": "todsacerdoti",
      "descendants": 191,
      "id": 43775926,
      "kids": [
        43776171,
        43776017,
        43776211,
        43776840,
        43776165,
        43776138,
        43778003,
        43778355,
        43778322,
        43776039,
        43776035,
        43776073,
        43776007,
        43777822,
        43777398,
        43776064,
        43776479,
        43776067,
        43777330,
        43778216,
        43778210,
        43777591,
        43776108,
        43778074,
        43776160,
        43776072,
        43777898,
        43778056,
        43776227,
        43776525,
        43776141,
        43776241,
        43776982
      ],
      "score": 673,
      "time": 1745437356,
      "title": "You wouldn't steal a font",
      "type": "story",
      "url": "https://fedi.rib.gay/notes/a6xqityngfubsz0f"
    },
    {
      "by": "yett",
      "descendants": 203,
      "id": 43772311,
      "kids": [
        43772976,
        43774928,
        43774091,
        43772964,
        43773015,
        43773789,
        43776470,
        43774026,
        43773316,
        43775701,
        43777374,
        43774643,
        43774945,
        43773043,
        43774269,
        43777890,
        43774498,
        43775125,
        43774691,
        43774044,
        43773774,
        43774114,
        43776713,
        43775189,
        43773738,
        43773834,
        43772686,
        43776998
      ],
      "score": 889,
      "time": 1745416811,
      "title": "How a 20 year old bug in GTA San Andreas surfaced in Windows 11 24H2",
      "type": "story",
      "url": "https://cookieplmonster.github.io/2025/04/23/gta-san-andreas-win11-24h2-bug/"
    },
    {
      "by": "ashvardanian",
      "descendants": 2,
      "id": 43777731,
      "kids": [
        43778066,
        43778116
      ],
      "score": 29,
      "time": 1745450372,
      "title": "CubeCL: GPU Kernels in Rust for CUDA, ROCm, and WGPU",
      "type": "story",
      "url": "https://github.com/tracel-ai/cubecl"
    },
    {
      "by": "todsacerdoti",
      "descendants": 291,
      "id": 43776476,
      "kids": [
        43776900,
        43777858,
        43776729,
        43777197,
        43776903,
        43778381,
        43777121,
        43776673,
        43776736,
        43776773,
        43776800,
        43777055,
        43776946,
        43777997,
        43777778,
        43777689,
        43776724,
        43776803,
        43777068,
        43776999,
        43777610,
        43777195,
        43776752,
        43777674,
        43776951,
        43776825,
        43777237,
        43777993,
        43777565,
        43777153,
        43776658,
        43776994,
        43777823,
        43776812
      ],
      "score": 587,
      "time": 1745441337,
      "title": "DOGE Worker’s Code Supports NLRB Whistleblower",
      "type": "story",
      "url": "https://krebsonsecurity.com/2025/04/doge-workers-code-supports-nlrb-whistleblower/"
    },
    {
      "by": "welpandthen",
      "descendants": 56,
      "id": 43776512,
      "kids": [
        43776516,
        43777419,
        43777217,
        43776710,
        43777248,
        43776544,
        43776602,
        43776641,
        43777405,
        43777053,
        43777023
      ],
      "score": 97,
      "time": 1745441539,
      "title": "Google blocked Motorola use of Perplexity AI, witness says",
      "type": "story",
      "url": "https://www.bloomberg.com/news/articles/2025-04-23/perplexity-executive-says-google-blocked-motorola-s-use-of-ai-assistant"
    },
    {
      "by": "escot",
      "descendants": 41,
      "id": 43776967,
      "kids": [
        43777407,
        43777183,
        43778387,
        43777148,
        43778292,
        43777905,
        43777461,
        43778098,
        43777509,
        43777986,
        43777452,
        43777709,
        43777594,
        43777624,
        43778267
      ],
      "score": 78,
      "time": 1745444847,
      "title": "Yagri: You are gonna read it",
      "type": "story",
      "url": "https://www.scottantipa.com/yagri"
    },
    {
      "by": "wgpatrick",
      "descendants": 49,
      "id": 43774990,
      "kids": [
        43776291,
        43775853,
        43778283,
        43777354,
        43778129,
        43777567,
        43775234,
        43776113,
        43776280,
        43776021,
        43776607,
        43776661,
        43775504,
        43775532,
        43776058,
        43775591,
        43775263,
        43775291,
        43778206,
        43776331,
        43775100
      ],
      "score": 165,
      "time": 1745432023,
      "title": "Teaching LLMs how to solid model",
      "type": "story",
      "url": "https://willpatrick.xyz/technology/2025/04/23/teaching-llms-how-to-solid-model.html"
    },
    {
      "by": "UnmappedStack",
      "descendants": 5,
      "id": 43778081,
      "kids": [
        43778082,
        43778348,
        43778289
      ],
      "score": 13,
      "time": 1745453722,
      "title": "Show HN: My from-scratch OS kernel that runs DOOM",
      "type": "story",
      "url": "https://github.com/UnmappedStack/TacOS"
    },
    {
      "by": "adityaathalye",
      "descendants": 28,
      "id": 43774726,
      "kids": [
        43774877,
        43775780,
        43775386,
        43777064,
        43775415,
        43775024,
        43776563,
        43775414
      ],
      "score": 98,
      "time": 1745430500,
      "title": "Graphics livecoding in Common Lisp",
      "type": "story",
      "url": "https://kevingal.com/blog/cl-livecoding.html"
    },
    {
      "by": "jandeboevrie",
      "descendants": 30,
      "id": 43775670,
      "kids": [
        43778205,
        43776907,
        43776321,
        43778304,
        43776095,
        43777016
      ],
      "score": 66,
      "time": 1745435583,
      "title": "C++26: more constexpr in the core language",
      "type": "story",
      "url": "https://www.sandordargo.com/blog/2025/04/23/cpp26-constexpr-language-changes"
    },
    {
      "by": "simba-k",
      "descendants": 5,
      "id": 43773777,
      "kids": [
        43778075,
        43777925,
        43778021
      ],
      "score": 46,
      "time": 1745425024,
      "title": "MCP on AWS Lambda with MCPEngine",
      "type": "story",
      "url": "https://www.featureform.com/post/deploy-mcp-on-aws-lambda-with-mcpengine"
    },
    {
      "by": "Aldipower",
      "descendants": 474,
      "id": 43770337,
      "kids": [
        43770682,
        43772307,
        43770457,
        43771286,
        43778058,
        43770529,
        43772323,
        43770594,
        43770500,
        43770688,
        43770762,
        43770619,
        43771384,
        43773895,
        43770975,
        43776213,
        43771566,
        43770574,
        43773480,
        43770752,
        43772820,
        43770896,
        43771190,
        43771022,
        43770895,
        43770745,
        43770697,
        43770662,
        43771145,
        43771177
      ],
      "score": 332,
      "time": 1745402464,
      "title": "Apple and Meta fined millions for breaching EU law",
      "type": "story",
      "url": "https://ca.finance.yahoo.com/news/apple-fined-570-million-meta-094701712.html"
    },
    {
      "by": "petekoomen",
      "descendants": 312,
      "id": 43773813,
      "kids": [
        43775818,
        43774450,
        43777420,
        43774648,
        43777951,
        43774387,
        43774845,
        43775817,
        43778299,
        43774860,
        43774813,
        43775246,
        43774627,
        43774542,
        43774592,
        43777114,
        43776402,
        43774709,
        43774682,
        43774997,
        43774525,
        43775719,
        43777814,
        43774937,
        43775270,
        43775177,
        43774582,
        43778320,
        43777216,
        43776438,
        43777329,
        43775640,
        43777368,
        43775671,
        43775221,
        43775860,
        43775573,
        43774952,
        43775197,
        43778302,
        43776326,
        43777220,
        43775224,
        43775578,
        43775861,
        43776983,
        43777475,
        43775623,
        43777520,
        43776371,
        43775178,
        43774697,
        43775751,
        43775572,
        43777431,
        43775391,
        43774754,
        43774887,
        43775203,
        43774751,
        43774848,
        43775791,
        43776498,
        43774474,
        43774732,
        43775576,
        43777151,
        43775323,
        43775110,
        43773814,
        43775980,
        43775740,
        43776018,
        43775882,
        43775329,
        43777274,
        43776128
      ],
      "score": 458,
      "time": 1745425196,
      "title": "AI Horseless Carriages",
      "type": "story",
      "url": "https://koomen.dev/essays/horseless-carriages/"
    },
    {
      "by": "frabonacci",
      "descendants": 41,
      "id": 43773563,
      "kids": [
        43776870,
        43774438,
        43776863,
        43774880,
        43774031,
        43774154,
        43774258,
        43774944,
        43776623,
        43773898,
        43776085,
        43774823,
        43774213,
        43773939,
        43773890,
        43775634,
        43774809
      ],
      "score": 103,
      "text": "Hey HN, we’re Francesco and Alessandro, the creators of c&#x2F;ua (<a href=\"https:&#x2F;&#x2F;www.trycua.com\">https:&#x2F;&#x2F;www.trycua.com</a>), a Docker‑style container runtime that lets AI agents drive full operating systems in lightweight, isolated VMs. Our entire framework is open‑source (<a href=\"https:&#x2F;&#x2F;github.com&#x2F;trycua&#x2F;cua\">https:&#x2F;&#x2F;github.com&#x2F;trycua&#x2F;cua</a>), and today we’re thrilled to have our Launch HN!<p>Check out our demo to see it in action: <a href=\"https:&#x2F;&#x2F;www.youtube.com&#x2F;watch?v=Ee9qf-13gho\" rel=\"nofollow\">https:&#x2F;&#x2F;www.youtube.com&#x2F;watch?v=Ee9qf-13gho</a>, and for more examples - including Tableau, Photoshop, CAD workflows - see the demos in our repo: <a href=\"https:&#x2F;&#x2F;github.com&#x2F;trycua&#x2F;cua\">https:&#x2F;&#x2F;github.com&#x2F;trycua&#x2F;cua</a>.<p>For Computer-Use AI agents to be genuinely useful, they must interact with your system&#x27;s native applications. But giving full access to your host device is risky. What if the agent&#x27;s process gets compromised, or the LLM hallucinates and leaks your data? And practically speaking, do you really want to give up control of your entire machine just so the agent can do its job?<p>The idea behind c&#x2F;ua is simple: let agents operate in a mirror of the user’s system - isolated, secure, and disposable - so users can fire-and-forget complex tasks without needing to dedicate their entire system to the agent. By running in a virtualized environment, agents can carry out their work without interrupting your workflow or risking the integrity of your system.<p>While exploring this idea, I discovered Apple’s Virtualization.Framework and realized it offered fast and lightweight virtualization on Apple Silicon. This led us to build a high-performance virtualization layer and, eventually, a computer-use interface that allows agents to interact with apps just like a human would - without taking over the entire system.<p>As we built this, we decided to open-source the virtualization core as a standalone CLI tool called Lume (Show HN here: <a href=\"https:&#x2F;&#x2F;news.ycombinator.com&#x2F;item?id=42908061\">https:&#x2F;&#x2F;news.ycombinator.com&#x2F;item?id=42908061</a>). c&#x2F;ua builds on top of Lume, providing a full framework for running agent workflows inside secure macOS or Linux VMs, so your system stays free for you to use while the agent works its magic in the background.<p>With Cua you can build an AI agent within a virtual environment to: - navigate and interact with any application&#x27;s interface; - read screen content and perform keyboard&#x2F;mouse actions; - switch between applications and self-debug when needed; - operate in a secure sandbox with controlled file access. All of this occurs in a fully isolated environment, ensuring your host system, files, and sensitive data remain completely secure, while you continue using your device without interruption.<p>People are using c&#x2F;ua to: - Bypass CryptoJS-based encryption and anti-bot measures to interact with modern web apps reliably; - Automate Tableau dashboards and export insights via Claude Desktop; - Drive Photoshop for batch image editing by prompt; - Modify 3D models in Fusion 360 with a CAD Copilot; -Extract data from legacy ERP apps without brittle screen‑scraping scripts.<p>We’re currently working on multi‑VM orchestration for parallel agentic workflows, Windows and Linux VM support, and episodic and long-term memory for CUA Agents.<p>On the open‑source side, c&#x2F;ua is 100 % free under the MIT license - run it locally with any LLM you like. We’re also gearing up a hosted orchestration service for teams who want zero‑ops setup (early access sign‑ups opening soon).<p>We’d love to hear from you. What desktop or legacy apps do you wish you could automate? Any thoughts, feedback, or horror stories from fragile AI automations are more than welcome!",
      "time": 1745423705,
      "title": "Launch HN: Cua (YC X25) – Open-Source Docker Container for Computer-Use Agents",
      "type": "story",
      "url": "https://github.com/trycua/cua"
    },
    {
      "by": "stass",
      "descendants": 20,
      "id": 43775283,
      "kids": [
        43776368,
        43776797,
        43776452,
        43777777,
        43776364,
        43777853,
        43775911,
        43776441,
        43777099,
        43777069,
        43777080,
        43775470
      ],
      "score": 76,
      "time": 1745433410,
      "title": "Sail-Trim Simulator",
      "type": "story",
      "url": "https://simulator.atterwind.info/"
    },
    {
      "by": "gnabgib",
      "descendants": 25,
      "id": 43775766,
      "kids": [
        43778173,
        43776195,
        43777022,
        43776604,
        43776210,
        43776335,
        43777535,
        43776362,
        43776375,
        43776107
      ],
      "score": 63,
      "time": 1745436298,
      "title": "First Successful Lightning Triggering and Guiding Using a Drone",
      "type": "story",
      "url": "https://group.ntt/en/newsrelease/2025/04/18/250418a.html"
    },
    {
      "by": "tylerg",
      "descendants": 48,
      "id": 43774327,
      "kids": [
        43774825,
        43775142,
        43774978,
        43774940,
        43775114,
        43778174,
        43777562,
        43774688,
        43775102,
        43775895,
        43776050,
        43775359
      ],
      "score": 100,
      "time": 1745428378,
      "title": "The Future of MCPs",
      "type": "story",
      "url": "https://iamcharliegraham.substack.com/publish/post/161906169"
    },
    {
      "by": "somebee",
      "descendants": 56,
      "id": 43771365,
      "kids": [
        43772516,
        43778117,
        43778147,
        43771622,
        43777694,
        43775216,
        43772067,
        43774375,
        43774337,
        43774922,
        43772681,
        43772784,
        43774854,
        43773297,
        43772476,
        43771888,
        43771869,
        43771707,
        43774142,
        43772977,
        43771602,
        43771603,
        43772544,
        43774120,
        43773187,
        43772697,
        43771584,
        43772555,
        43775017,
        43772874,
        43772871,
        43772100,
        43771857
      ],
      "score": 173,
      "text": "Hey HN,<p>I&#x27;m Sindre, CTO of Scrimba (YC S20). We originally launched Scrimba to make video learning more interactive for aspiring frontend developers. So instead of passively watching videos, you can jump in an experiment with the code directly inside the video player. Since launch, almost two million people have used Scrimba to grow their skills.<p>However, one limitation is that we&#x27;ve only supported frontend code, as our interactive videos run in the browser, whereas most of our learners want to go fullstack—building APIs, handling auth, working with databases, and so forth.<p>To fix this, we spent the last 6 months integrating StackBlitz WebContainers into Scrimba. This enables a full Node.js environment—including a terminal, shell, npm access, and a virtual file system—directly inside our video player. Everything runs in the browser.<p>Here is a 2-minute recorded demo: <a href=\"https:&#x2F;&#x2F;scrimba.com&#x2F;s08dpq3nom\">https:&#x2F;&#x2F;scrimba.com&#x2F;s08dpq3nom</a><p>If you want to see more, feel free to enroll into any of the seven fullstack courses we&#x27;ve launched so far, on subject like Node, Next, Express, SQL, Vite, and more. We&#x27;ve opened them up for Hacker News today so that you don&#x27;t even need to create an account to watch the content:<p><a href=\"https:&#x2F;&#x2F;scrimba.com&#x2F;fullstack\">https:&#x2F;&#x2F;scrimba.com&#x2F;fullstack</a><p><i>Other notable highlights about our &quot;IDE videos&quot;:</i><p>- Based on events (code edits, cursor moves, etc) instead of pixels<p>- Roughly 100x smaller than traditional videos<p>- Recording is simple: just talk while you code<p>- Can be embedded in blogs, docs, or courses, like MDN does here: <a href=\"https:&#x2F;&#x2F;developer.mozilla.org&#x2F;en-US&#x2F;curriculum&#x2F;core&#x2F;css-fundamentals&#x2F;\" rel=\"nofollow\">https:&#x2F;&#x2F;developer.mozilla.org&#x2F;en-US&#x2F;curriculum&#x2F;core&#x2F;css-fund...</a><p>- Entirely built in Imba, a language I created myself: <a href=\"https:&#x2F;&#x2F;news.ycombinator.com&#x2F;item?id=28207662\">https:&#x2F;&#x2F;news.ycombinator.com&#x2F;item?id=28207662</a><p>We think this format could be useful for open-source maintainers and API-focused teams looking to create interactive docs or walkthroughs. Our videos are already embedded by MDN, LangChain, and Coursera.<p>If you maintain a library or SDK and want an interactive video about it, let us know—happy to record one for free that you can use however you like.<p>Would love to answer any questions or hear people&#x27;s feedback!",
      "time": 1745411749,
      "title": "Show HN: Node.js video tutorials where you can edit and run the code",
      "type": "story"
    },
    {
      "by": "geeknews",
      "descendants": 0,
      "id": 43778105,
      "score": 5,
      "time": 1745454040,
      "title": "Shortest walking tour to 81,998 bars in Korea – TSP solved in 178 days",
      "type": "story",
      "url": "https://www.math.uwaterloo.ca/tsp/korea/index.html"
    },
    {
      "by": "thunderbong",
      "descendants": 25,
      "id": 43769289,
      "kids": [
        43774314,
        43774453,
        43774150,
        43773246
      ],
      "score": 37,
      "time": 1745390551,
      "title": "Beer on Board in the Age of Sail (2017)",
      "type": "story",
      "url": "https://blog.library.si.edu/blog/2017/08/02/beer-board-age-sail/"
    },
    {
      "by": "danielpetrica",
      "descendants": 1,
      "id": 43746109,
      "kids": [
        43746110
      ],
      "score": 4,
      "time": 1745178824,
      "title": "My experience of participating to a startup weekend competition in Italy",
      "type": "story",
      "url": "https://danielpetrica.com/my-experience-of-participating-to-a-startup-weekend-competition-in-italy/"
    },
    {
      "by": "nativeit",
      "descendants": 39,
      "id": 43777700,
      "kids": [
        43778095,
        43778007,
        43778086,
        43778208,
        43778091,
        43777971,
        43778031,
        43778166,
        43778011,
        43777988,
        43778124
      ],
      "score": 36,
      "time": 1745450047,
      "title": "Don't make it \"like Google\"",
      "type": "story",
      "url": "https://rakhim.exotext.com/dont-make-it-like-google"
    },
    {
      "by": "SinePost",
      "descendants": 12,
      "id": 43774938,
      "kids": [
        43775421,
        43777841,
        43776261,
        43774956,
        43775534,
        43776248,
        43776468,
        43777908
      ],
      "score": 60,
      "time": 1745431719,
      "title": "Spring 83: a draft protocol intended to suggest new ways of relating online",
      "type": "story",
      "url": "https://github.com/robinsloan/spring-83"
    },
    {
      "by": "todsacerdoti",
      "descendants": 1,
      "id": 43777677,
      "kids": [
        43778321
      ],
      "score": 9,
      "time": 1745449899,
      "title": "Echoplayer: Echo – Open Hardware Music Player",
      "type": "story",
      "url": "https://github.com/amachronic/echoplayer"
    },
    {
      "by": "hn_acker",
      "descendants": 37,
      "id": 43775624,
      "kids": [
        43776300,
        43777734,
        43776063,
        43776235,
        43776087,
        43776767,
        43776395,
        43778047,
        43776749,
        43776200,
        43775625
      ],
      "score": 54,
      "time": 1745435342,
      "title": "Ninth Circuit Takes a Wrecking Ball to Internet Personal Jurisdiction Law",
      "type": "story",
      "url": "https://blog.ericgoldman.org/archives/2025/04/ninth-circuit-takes-a-wrecking-ball-to-internet-personal-jurisdiction-law-briskin-v-shopify.htm"
    },
    {
      "by": "softwaredoug",
      "descendants": 1,
      "id": 43776385,
      "kids": [
        43777382
      ],
      "score": 23,
      "time": 1745440674,
      "title": "Lucene University",
      "type": "story",
      "url": "https://github.com/msfroh/lucene-university"
    },
    {
      "by": "adityaathalye",
      "descendants": 4,
      "id": 43759204,
      "kids": [
        43776419,
        43777537,
        43777411
      ],
      "score": 60,
      "time": 1745298337,
      "title": "Sustain your creative drive in the face of technological change",
      "type": "story",
      "url": "https://thecreativeindependent.com/people/multi-disciplinary-artist-jack-rusher-on-the-need-to-sustain-your-creative-drive-in-the-face-of-technological-change/"
    },
    {
      "by": "kylebenzle",
      "descendants": 3,
      "id": 43765815,
      "kids": [
        43772297,
        43766076,
        43765819
      ],
      "score": 24,
      "time": 1745352810,
      "title": "The Dauug House - Dauug|36 minicomputer documentation",
      "type": "story",
      "url": "https://dauug.cs.wright.edu/"
    },
    {
      "by": "thingfish",
      "descendants": 177,
      "id": 43770445,
      "kids": [
        43770537,
        43770600,
        43771749,
        43774731,
        43771141,
        43770711,
        43770563,
        43771230,
        43770848,
        43771964,
        43770464,
        43775956,
        43775514,
        43772553,
        43770714,
        43774471,
        43777093,
        43771948,
        43770699,
        43771617,
        43772612,
        43772569,
        43775063,
        43775863,
        43775058,
        43772613,
        43772345,
        43772349
      ],
      "score": 258,
      "time": 1745403717,
      "title": "MinC Is Not Cygwin",
      "type": "story",
      "url": "https://minc.commandlinerevolution.nl/english/home.html"
    },
    {
      "by": "SubiculumCode",
      "descendants": 2,
      "id": 43776539,
      "kids": [
        43776639
      ],
      "score": 9,
      "time": 1745441778,
      "title": "FontDiffuser: Text to Font",
      "type": "story",
      "url": "https://yeungchenwa.github.io/fontdiffuser-homepage/"
    },
    {
      "by": "c0rtex",
      "descendants": 133,
      "id": 43773746,
      "kids": [
        43773806,
        43775124,
        43774326,
        43778358,
        43777206,
        43777909,
        43778089,
        43775011,
        43775333,
        43774070,
        43774036,
        43778256,
        43774164,
        43774143,
        43778251,
        43773747,
        43774560,
        43773988,
        43774062,
        43773901,
        43776693,
        43774398,
        43773843,
        43774041,
        43774076,
        43773973,
        43777296
      ],
      "score": 88,
      "time": 1745424820,
      "title": "More Everything Forever",
      "type": "story",
      "url": "https://www.nytimes.com/2025/04/23/books/review/more-everything-forever-adam-becker.html"
    },
    {
      "by": "skull8888888",
      "descendants": 20,
      "id": 43773720,
      "kids": [
        43777550,
        43777486,
        43777600,
        43777760,
        43777433
      ],
      "score": 44,
      "text": "Hey HN, Robert from Laminar (lmnr.ai) here.<p>We built Index - new SOTA Open Source browser agent.<p>It reached 92% on WebVoyager with Claude 3.7 (extended thinking). o1 was used as a judge, also we manually double checked the judge.<p>At the core is same old idea - run simple JS script in the browser to identify interactable elements -&gt; draw bounding boxes around them on a screenshot of a browser window -&gt; feed it to the LLM.<p>What made Index so good:<p>1. We essentially created browser agent observability. We patched Playwright to record the entire browser session while the agent operates, simultaneously tracing all agent steps and LLM calls. Then we synchronized everything in the UI, creating an unparalleled debugging experience. This allowed us to pinpoint exactly where the agent fails by seeing what it &quot;sees&quot; in session replay alongside execution traces.<p>2. Our detection script is simple but extremely good. It&#x27;s carefully crafted via trial and error. We also employed CV and OCR.<p>3. Agent is very simple, literally just a while loop. All power comes from carefully crafted prompt and ton of eval runs.<p>Index is a simple python package. It also comes with a beautiful CLI.<p>pip install lmnr-index<p>playwright install chromium<p>index run<p>We&#x27;ve recently added o4-mini, Gemini 2.5 Pro and Flash. Pro is <i>extremely good and fast</i>. Give it a try via CLI.<p>You can also use index via serverless API. (<a href=\"https:&#x2F;&#x2F;docs.lmnr.ai&#x2F;index-agent&#x2F;api&#x2F;getting-started\">https:&#x2F;&#x2F;docs.lmnr.ai&#x2F;index-agent&#x2F;api&#x2F;getting-started</a>)<p>Or via chat UI - <a href=\"https:&#x2F;&#x2F;lmnr.ai&#x2F;chat\">https:&#x2F;&#x2F;lmnr.ai&#x2F;chat</a>.<p>To learn more about browser agent observability and evals check out open-source repo (<a href=\"https:&#x2F;&#x2F;github.com&#x2F;lmnr-ai&#x2F;lmnr\">https:&#x2F;&#x2F;github.com&#x2F;lmnr-ai&#x2F;lmnr</a>) and our docs (<a href=\"https:&#x2F;&#x2F;docs.lmnr.ai&#x2F;tracing&#x2F;browser-agent-observability\">https:&#x2F;&#x2F;docs.lmnr.ai&#x2F;tracing&#x2F;browser-agent-observability</a>).",
      "time": 1745424671,
      "title": "Show HN: Index – new SOTA Open Source browser agent",
      "type": "story",
      "url": "https://github.com/lmnr-ai/index"
    },
    {
      "by": "rbanffy",
      "descendants": 2,
      "id": 43744635,
      "kids": [
        43777418,
        43748161
      ],
      "score": 18,
      "time": 1745165076,
      "title": "Get your Minitel back, the COMPUTEL videotex BBS is back",
      "type": "story",
      "url": "https://cq94.medium.com/get-your-minitels-back-the-computel-videotex-bbs-is-back-1d8c42f1ea17"
    },
    {
      "by": "speckx",
      "descendants": 0,
      "id": 43765227,
      "kids": [
        43777804
      ],
      "score": 19,
      "time": 1745348674,
      "title": "Mt Ontake",
      "type": "story",
      "url": "https://www.emgoto.com/mt-ontake/"
    },
    {
      "by": "danvk",
      "descendants": 18,
      "id": 43774702,
      "kids": [
        43777704,
        43775047,
        43775938,
        43775842,
        43776009,
        43775067
      ],
      "score": 67,
      "time": 1745430335,
      "title": "A Computational Proof of the Highest-Scoring Boggle Board",
      "type": "story",
      "url": "https://www.danvk.org/2025/04/23/boggle-solved.html"
    },
    {
      "by": "lichtenberger",
      "descendants": 10,
      "id": 43770821,
      "kids": [
        43774131,
        43775088,
        43775888
      ],
      "score": 65,
      "time": 1745407468,
      "title": "How ZGC allocates memory for the Java heap",
      "type": "story",
      "url": "https://joelsiks.com/posts/zgc-heap-memory-allocation/"
    },
    {
      "by": "ingav",
      "descendants": 201,
      "id": 43771645,
      "kids": [
        43775437,
        43772130,
        43775648,
        43775010,
        43771999,
        43775369,
        43772207,
        43772022,
        43773288,
        43772575,
        43775929,
        43771946,
        43772525,
        43773924,
        43776620,
        43772931,
        43776657,
        43773925,
        43772112,
        43775445,
        43772205,
        43776169,
        43776831,
        43773517,
        43772907,
        43773511,
        43773618,
        43772124,
        43772090,
        43773602,
        43773956,
        43771967,
        43772509,
        43777173,
        43771646,
        43775619,
        43773319,
        43772018,
        43771996,
        43772376,
        43772872,
        43772193,
        43772125,
        43777182,
        43772600,
        43772720,
        43777460,
        43772745,
        43772171,
        43772226,
        43771929,
        43772206,
        43773207,
        43774820
      ],
      "score": 252,
      "time": 1745413232,
      "title": "How I blog with Obsidian, Hugo, GitHub, and Cloudflare",
      "type": "story",
      "url": "https://ingau.me/blog/how-i-write-my-blogs-in-obsidian-and-publish-instantly/"
    },
    {
      "by": "austinallegro",
      "descendants": 46,
      "id": 43772503,
      "kids": [
        43774080,
        43774610,
        43777076,
        43773739,
        43775866,
        43774500,
        43773679,
        43772866,
        43774758
      ],
      "score": 55,
      "time": 1745417670,
      "title": "Automated Antenna Design with Evolutionary Algorithms [pdf] (2006)",
      "type": "story",
      "url": "https://ntrs.nasa.gov/api/citations/20060024675/downloads/20060024675.pdf"
    },
    {
      "by": "Stratoscope",
      "descendants": 7,
      "id": 43765310,
      "kids": [
        43767443,
        43765311,
        43778180,
        43776347,
        43777819,
        43776465,
        43765562
      ],
      "score": 21,
      "time": 1745349273,
      "title": "Willy Ley was a prophet of space travel",
      "type": "story",
      "url": "https://www.nytimes.com/2025/04/21/nyregion/willy-ley-rocket-ashes.html"
    },
    {
      "by": "Fibra",
      "descendants": 16,
      "id": 43770615,
      "kids": [
        43773289,
        43776689,
        43772387,
        43771579,
        43773185,
        43772656
      ],
      "score": 86,
      "time": 1745405528,
      "title": "Collatz's Ant",
      "type": "story",
      "url": "https://gbragafibra.github.io/2025/01/08/collatz_ant2.html"
    },
    {
      "by": "javisantana",
      "descendants": 0,
      "id": 43747186,
      "score": 44,
      "time": 1745190281,
      "title": "Lessons learned operating petabyte-scale ClickHouse clusters: Part II",
      "type": "story",
      "url": "https://www.tinybird.co/blog-posts/what-i-learned-operating-clickhouse-part-ii"
    },
    {
      "by": "Tomte",
      "descendants": 9,
      "id": 43774742,
      "kids": [
        43775320,
        43776047,
        43775677,
        43777034,
        43776648,
        43774836,
        43774914
      ],
      "score": 31,
      "time": 1745430592,
      "title": "The Really Big One (2015)",
      "type": "story",
      "url": "https://www.newyorker.com/magazine/2015/07/20/the-really-big-one"
    },
    {
      "by": "luismedel",
      "descendants": 81,
      "id": 43770446,
      "kids": [
        43771485,
        43771595,
        43773136,
        43773373,
        43771420,
        43770872,
        43771626,
        43771131,
        43770989,
        43772237,
        43773017,
        43777540,
        43771172,
        43772220,
        43775897,
        43772659,
        43772445,
        43772854,
        43771554,
        43774919,
        43772538,
        43772768,
        43772542,
        43771628,
        43773865,
        43772869,
        43775353,
        43772719,
        43772530,
        43772109,
        43770993
      ],
      "score": 123,
      "time": 1745403718,
      "title": "Geocoding APIs compared: Pricing, free tiers and terms of use",
      "type": "story",
      "url": "https://www.bitoff.org/geocoding-apis-comparison/"
    },
    {
      "by": "NotInOurNames",
      "descendants": 163,
      "id": 43773710,
      "kids": [
        43774808,
        43778388,
        43775801,
        43774770,
        43776089,
        43776552,
        43777939,
        43775981,
        43777378,
        43775348,
        43774802,
        43775681,
        43774784,
        43775389,
        43777126,
        43777714,
        43777517,
        43775889,
        43774810,
        43777502,
        43777529,
        43774969,
        43774917
      ],
      "score": 253,
      "time": 1745424612,
      "title": "They made computers behave like annoying salesmen",
      "type": "story",
      "url": "https://rakhim.exotext.com/they-made-computers-behave-like-annoying-salesmen"
    },
    {
      "by": "anitil",
      "descendants": 150,
      "id": 43769478,
      "kids": [
        43771327,
        43769885,
        43772780,
        43772534,
        43774377,
        43770049,
        43770590,
        43770151,
        43776164,
        43769854,
        43769769,
        43771493,
        43773212,
        43774211,
        43770426,
        43769945,
        43773557,
        43770028,
        43772802,
        43770129,
        43774567,
        43774149,
        43772728,
        43769804,
        43770089,
        43775916,
        43774868,
        43769479,
        43769815,
        43772830,
        43769857,
        43773723,
        43772313,
        43771398,
        43769813,
        43771356
      ],
      "score": 123,
      "time": 1745392819,
      "title": "Pixel is a unit of length and area",
      "type": "story",
      "url": "https://www.nayuki.io/page/pixel-is-a-unit-of-length-and-area"
    },
    {
      "by": "soegaard",
      "descendants": 14,
      "id": 43743399,
      "kids": [
        43774017,
        43772743,
        43774223,
        43776520,
        43773667,
        43774370
      ],
      "score": 58,
      "time": 1745152565,
      "title": "How MOS 6502 Illegal Opcodes Work (2008)",
      "type": "story",
      "url": "https://www.pagetable.com/?p=39"
    },
    {
      "by": "NikoNaskida",
      "descendants": 1,
      "id": 43770162,
      "kids": [
        43777979
      ],
      "score": 23,
      "text": "Hey HN, I am Niko.<p>I&#x27;ve built this 3D Dino Game In browser using tech like three.js and MoveNet (tensorflow).<p>Basically, it&#x27;s a normal 3D dinosaur game with a twist: you need to actually perform actions irl to avoid obstacles.<p>Duck to crouch, jump to jump, raise left hand - go left, raise right hand - go right.<p>Game is using your phone&#x2F;laptop camera to track your body movements and perform in-game actions.<p>PS. Game is 100% client side and I don&#x27;t record&#x2F;track&#x2F;use&#x2F;save any of your data<p>Hope you find it worth playing. (better play on PC)<p>It&#x27;s a 100% FREE browser game with no login! Please feel welcome to DM feedback or reply or anything!",
      "time": 1745400493,
      "title": "Show HN: Body Controlled 3D Dino Game",
      "type": "story",
      "url": "https://nicknaskida.github.io/vibe-coding-game-jam/"
    },
    {
      "by": "Kumzy",
      "descendants": 11,
      "id": 43771816,
      "kids": [
        43774173,
        43774775,
        43773842,
        43774712,
        43774369,
        43773906,
        43775836,
        43775512,
        43774629
      ],
      "score": 30,
      "text": "Hello HN!<p>Advanced Alchemy is an optimized companion library for SQLAlchemy, designed to supercharge your database models with powerful tooling for migrations, asynchronous support, lifecycle hook and more.<p>You can find the repository and documentation here:<p><pre><code>    - GitHub Repository: https:&#x2F;&#x2F;github.com&#x2F;litestar-org&#x2F;advanced-alchemy\n    - Official Documentation : https:&#x2F;&#x2F;docs.advanced-alchemy.litestar.dev&#x2F;latest&#x2F;\n</code></pre>\nAdvanced-Alchemy extends SQLAlchemy with productivity-enhancing features, while keeping full compatibility with the ecosystem you already know.<p>At its core, Advanced-Alchemy offers:<p>- Sync and async repositories, featuring common CRUD and highly optimized bulk operations<p>- Integration with major web frameworks including Litestar, Starlette, FastAPI, Sanic<p>- Custom-built alembic configuration and CLI with optional framework integration<p>- Utility base classes with audit columns, primary keys and utility functions<p>- Built in File Object data type for storing objects:<p><pre><code>    - Unified interface for various storage backends fsspec and obstore\n    - Optional lifecycle event hooks integrated with SQLAlchemy&#x27;s event system to automatically save and delete files as records are inserted, updated, or deleted.\n</code></pre>\n- Optimized JSON types including a custom JSON type for Oracle<p>- Integrated support for UUID6 and UUID7 using uuid-utils<p>- Integrated support for Nano ID using fastnanoid<p>- Pre-configured base classes with audit columns UUID or Big Integer primary keys and a sentinel column.<p>- Synchronous and asynchronous repositories featuring:<p><pre><code>    - Common CRUD operations for SQLAlchemy models\n    - Bulk inserts, updates, upserts, and deletes with dialect-specific enhancements\n    - Integrated counts, pagination, sorting, filtering with LIKE, IN, and dates before and&#x2F;or after.\n</code></pre>\n- Tested support for multiple database backends including:<p><pre><code>    - SQLite via aiosqlite or sqlite\n    - Postgres via asyncpg or psycopg3 (async or sync)\n    - MySQL via asyncmy\n    - Oracle via oracledb (async or sync) (tested on 18c and 23c)\n    - Google Spanner via spanner-sqlalchemy\n    - DuckDB via duckdb_engine\n    - Microsoft SQL Server via pyodbc or aioodbc\n    - CockroachDB via sqlalchemy-cockroachdb (async or sync)\n</code></pre>\nThe framework is designed to be lightweight yet powerful, with a clean API that makes it easy to integrate into existing projects.<p>You can find a full example using FastAPI there: <a href=\"https:&#x2F;&#x2F;docs.advanced-alchemy.litestar.dev&#x2F;latest&#x2F;usage&#x2F;frameworks&#x2F;fastapi.html\" rel=\"nofollow\">https:&#x2F;&#x2F;docs.advanced-alchemy.litestar.dev&#x2F;latest&#x2F;usage&#x2F;fram...</a><p>There are custom datatypes, a service and repository (including optimized bulk operations), and native integration with Flask, FastAPI, Starlette, Litestar and Sanic.<p>Feedback and enhancements are always welcomed! We have an active discord community, so if you don&#x27;t get a response on an issue or would like to chat directly with the dev team, please reach out.<p>The library: <a href=\"https:&#x2F;&#x2F;github.com&#x2F;litestar-org&#x2F;advanced-alchemy\">https:&#x2F;&#x2F;github.com&#x2F;litestar-org&#x2F;advanced-alchemy</a>",
      "time": 1745414268,
      "title": "Show HN: Advanced-Alchemy – A framework agnostic library for SQLAlchemy",
      "type": "story",
      "url": "https://github.com/litestar-org/advanced-alchemy"
    },
    {
      "by": "draazon",
      "descendants": 17,
      "id": 43773537,
      "kids": [
        43776726,
        43774310,
        43773727,
        43774546,
        43773743,
        43773538,
        43774263,
        43773597
      ],
      "score": 42,
      "time": 1745423565,
      "title": "The Danglepoise",
      "type": "story",
      "url": "https://www.sallery.co.uk/danglepoise"
    },
    {
      "by": "adamnemecek",
      "descendants": 280,
      "id": 43765011,
      "kids": [
        43765346,
        43765528,
        43765443,
        43765329,
        43766579,
        43765805,
        43766896,
        43766117,
        43766147,
        43765976,
        43766414,
        43768353,
        43768288,
        43772576,
        43765190,
        43769732,
        43765936,
        43767327,
        43765982,
        43765370,
        43772812,
        43769465,
        43772026,
        43766086,
        43765096,
        43769361,
        43766973,
        43767100,
        43765210,
        43766667,
        43765874,
        43765317,
        43765344,
        43765097,
        43767185,
        43770146,
        43765484,
        43773870,
        43767336,
        43766049
      ],
      "score": 423,
      "time": 1745347160,
      "title": "Sapphire: Rust based package manager for macOS",
      "type": "story",
      "url": "https://github.com/alexykn/sapphire"
    },
    {
      "by": "musha68k",
      "descendants": 16,
      "id": 43769461,
      "kids": [
        43778269,
        43772605,
        43771280,
        43771681,
        43774529,
        43770456
      ],
      "score": 94,
      "time": 1745392636,
      "title": "Why Does My eBPF Program Work on One Kernel but Fail on Another?",
      "type": "story",
      "url": "https://ebpfchirp.substack.com/p/why-does-my-ebpf-program-work-on"
    },
    {
      "by": "cdplayer96",
      "descendants": 3,
      "id": 43747856,
      "kids": [
        43778051,
        43776308
      ],
      "score": 22,
      "time": 1745199600,
      "title": "Samurai Cops: Inside Edo's Police Force During Feudal Japan",
      "type": "story",
      "url": "https://www.tokyoweekender.com/art_and_culture/japanese-culture/samurai-cops-inside-edos-police-force-during-feudal-japan/"
    },
    {
      "by": "whalee",
      "descendants": 298,
      "id": 43768421,
      "kids": [
        43771089,
        43768802,
        43769689,
        43768701,
        43768841,
        43769675,
        43769314,
        43768856,
        43771792,
        43768720,
        43769528,
        43770118,
        43771776,
        43768786,
        43768548,
        43774352,
        43770593,
        43768704,
        43768556,
        43768628,
        43768664
      ],
      "score": 358,
      "time": 1745379425,
      "title": "Native visionOS platform support",
      "type": "story",
      "url": "https://github.com/godotengine/godot/pull/105628"
    },
    {
      "by": "dabinat",
      "descendants": 0,
      "id": 43777174,
      "score": 11,
      "time": 1745446124,
      "title": "Linux 6.15 lands fix for 3x Nginx regression",
      "type": "story",
      "url": "https://www.phoronix.com/review/linux-615-regression-fix"
    },
    {
      "by": "ingve",
      "descendants": 0,
      "id": 43777177,
      "score": 20,
      "time": 1745446131,
      "title": "QEMU Version 10.0.0 Released",
      "type": "story",
      "url": "https://www.qemu.org/2025/04/23/qemu-10-0-0/"
    },
    {
      "by": "yuhongsun",
      "id": 43766255,
      "score": 1,
      "time": 1745355648,
      "title": "Onyx (YC W24) Is Hiring for ML Engineer",
      "type": "job",
      "url": "https://www.ycombinator.com/companies/onyx/jobs/3Se5ptG-machine-learning-engineer"
    },
    {
      "by": "yaronsc",
      "descendants": 0,
      "id": 43775380,
      "score": 10,
      "text": "Hi all, Dapr maintainer here. We&#x27;ve added a new example that shows how you can build a conversational agent that can upload, parse and understand complex documents, while retaining long-term memory. The example also shows how the agent can upload the file to multiple storage providers. Would be great to get your feedback.",
      "time": 1745434013,
      "title": "Show HN: Document agent example that can parse and chat over unstructured data",
      "type": "story",
      "url": "https://github.com/dapr/dapr-agents/tree/main/quickstarts/06-document-agent-chainlit"
    },
    {
      "by": "gaws",
      "descendants": 88,
      "id": 43766715,
      "kids": [
        43767525,
        43770526,
        43769975,
        43771576,
        43767635,
        43773953,
        43774842,
        43768823,
        43767724,
        43767951,
        43774151,
        43771879,
        43775850,
        43773877,
        43773880,
        43767177,
        43767719,
        43770616,
        43767867,
        43769044,
        43767978,
        43770474,
        43770481,
        43769729,
        43770023,
        43774918,
        43769918,
        43769035,
        43769294,
        43768419,
        43770871,
        43767653
      ],
      "score": 228,
      "time": 1745359130,
      "title": "CSS Hell",
      "type": "story",
      "url": "https://csshell.com/"
    },
    {
      "by": "vseplet",
      "descendants": 13,
      "id": 43775878,
      "kids": [
        43776488,
        43776556,
        43775910,
        43777445,
        43776933
      ],
      "score": 16,
      "text": "Hey HN,<p>I built a small experimental writing tool called nowrite.fun.<p>The concept is brutally simple:\nYou set a timer (e.g. 5 minutes), start writing — and if you stop typing, your text vanishes. No drafts, no recovery, no forgiveness.<p>Inspired by apps like Write or Die, but rebuilt from scratch with a lightweight stack: Deno + TypeScript, XState, anime.js, and canvas-confetti. Hosted on Deno Deploy.<p>It’s a tool for short, focused writing sprints — a tweet, a blog paragraph, a newsletter blurb.\nKeep typing → you win.\nHesitate → it’s gone.<p>It’s minimal, a bit stressful, and surprisingly motivating.<p>I also posted it on Product Hunt to see if this kind of weird, borderline masochistic UX resonates with anyone:\n <a href=\"https:&#x2F;&#x2F;www.producthunt.com&#x2F;posts&#x2F;no-write\" rel=\"nofollow\">https:&#x2F;&#x2F;www.producthunt.com&#x2F;posts&#x2F;no-write</a>\nIf you find it fun or useful, I’d really appreciate an upvote!<p>Would love your thoughts, feature ideas, or performance roasts.<p>Try it here: <a href=\"https:&#x2F;&#x2F;nowrite.fun\" rel=\"nofollow\">https:&#x2F;&#x2F;nowrite.fun</a>",
      "time": 1745437001,
      "title": "Show HN: Nowrite.fun – If you stop typing, your text disappears",
      "type": "story",
      "url": "https://nowrite.fun"
    },
    {
      "by": "okane",
      "descendants": 15,
      "id": 43773976,
      "kids": [
        43774325,
        43774598,
        43774561,
        43776055,
        43776392,
        43774083,
        43774588,
        43774245,
        43774388,
        43774251,
        43774463
      ],
      "score": 68,
      "time": 1745426483,
      "title": "Show HN: Moose – OSS framework to build analytical back ends with ClickHouse",
      "type": "story",
      "url": "https://docs.fiveonefour.com/moose"
    },
    {
      "by": "tbragin",
      "descendants": 116,
      "id": 43763688,
      "kids": [
        43764030,
        43764667,
        43768855,
        43764011,
        43777910,
        43766293,
        43768022,
        43766570,
        43769228,
        43765627,
        43764559,
        43764874,
        43768815,
        43770660,
        43765152,
        43765212,
        43768459,
        43765088,
        43766367,
        43770019,
        43769340,
        43771820
      ],
      "score": 356,
      "time": 1745337812,
      "title": "ClickHouse gets lazier and faster: Introducing lazy materialization",
      "type": "story",
      "url": "https://clickhouse.com/blog/clickhouse-gets-lazier-and-faster-introducing-lazy-materialization"
    },
    {
      "by": "PaulHoule",
      "descendants": 18,
      "id": 43763614,
      "kids": [
        43764048,
        43771208,
        43764152,
        43771023,
        43764408,
        43765066,
        43764977,
        43763924
      ],
      "score": 239,
      "time": 1745337312,
      "title": "Algebraic Semantics for Machine Knitting",
      "type": "story",
      "url": "https://uwplse.org/2025/03/31/Algebraic-Knitting.html"
    },
    {
      "by": "segmenta",
      "descendants": 50,
      "id": 43763967,
      "kids": [
        43767628,
        43769404,
        43768951,
        43765101,
        43765919,
        43769981,
        43766044,
        43764981,
        43765515,
        43767310,
        43768497,
        43767461,
        43768545,
        43767996,
        43766482
      ],
      "score": 145,
      "text": "Hi HN! We’re Arjun, Ramnique, and Akhilesh, and we are building Rowboat  (<a href=\"https:&#x2F;&#x2F;www.rowboatlabs.com&#x2F;\">https:&#x2F;&#x2F;www.rowboatlabs.com&#x2F;</a>), an AI-assisted IDE for building and managing multi-agent systems. You start with a single agent, then scale up to teams of agents that work together, use MCP tools, and improve over time - all through a chat-based copilot.<p>Our repo is <a href=\"https:&#x2F;&#x2F;github.com&#x2F;rowboatlabs&#x2F;rowboat\">https:&#x2F;&#x2F;github.com&#x2F;rowboatlabs&#x2F;rowboat</a>, docs are at <a href=\"https:&#x2F;&#x2F;docs.rowboatlabs.com&#x2F;\">https:&#x2F;&#x2F;docs.rowboatlabs.com&#x2F;</a>, and there’s a demo video here: <a href=\"https:&#x2F;&#x2F;youtu.be&#x2F;YRTCw9UHRbU\" rel=\"nofollow\">https:&#x2F;&#x2F;youtu.be&#x2F;YRTCw9UHRbU</a><p>It’s becoming clear that real-world agentic systems work best when multiple agents collaborate, rather than having one agent attempt to do everything. This isn’t too surprising - it’s a bit like how good code consists of multiple functions that each do one thing, rather than cramming everything into one function.<p>For example, a travel assistant works best when different agents handle specialized tasks: one agent finds the best flights, another optimizes hotel selections, and a third organizes the itinerary. This modular approach makes the system easier to manage, debug, and improve over time.<p>OpenAI’s Agents SDK provides a neat Python library to support this, but building reliable agentic systems requires constant iterations and tweaking - e.g. updating agent instructions (which can quickly get as complex as actual code), connecting tools, and testing the system and incorporating feedback. Rowboat is an AI IDE to do all this. Rowboat is to AI agents what Cursor is to code.<p>We’ve taken a code-like approach to agent instructions (prompts). There are special keywords to directly reference other agents, tools or prompts - which are highlighted in the UI. The copilot is the best way to create and edit these instructions - each change comes with a code-style diff.<p>You can give agents access to tools by integrating any MCP server or connecting your own functions through a webhook. You can instruct the agents on when to use specific tools via ‘@mentions’ in the agent instruction. To enable quick testing, we added a way to mock tool responses using LLM calls.<p>Rowboat playground lets you test and debug the assistants as you build them. You can see agent transfers, tool invocations and tool responses in real-time. The copilot has the context of the chat, and can improve the agent instructions based on feedback. For example, you could say ‘The agent shouldn’t have done x here. Fix this’ and the copilot can go and make this fix.<p>You can integrate agentic systems built in Rowboat into your application via the HTTP API or the Python SDK (‘pip install rowboat’). For example, you can build user-facing chatbots, enterprise workflows and employee assistants using Rowboat.<p>We’ve been working with LLMs since GPT-1 launched in 2018. Most recently, we built Coinbase’s support chatbot after our last AI startup was acquired by them.<p>Rowboat is Apache 2.0 licensed, giving you full freedom to self-host, modify, or extend it however you like.<p>We’re excited to share Rowboat with everyone here. We’d love to hear your thoughts!",
      "time": 1745339601,
      "title": "Show HN: Rowboat – Open-source IDE for multi-agent systems",
      "type": "story",
      "url": "https://github.com/rowboatlabs/rowboat"
    },
    {
      "by": "luu",
      "descendants": 0,
      "id": 43775607,
      "score": 5,
      "time": 1745435265,
      "title": "xPal Encyrpted Messenger Security",
      "type": "story",
      "url": "https://furry.engineer/@soatok/114381133533722007"
    },
    {
      "by": "mooreds",
      "descendants": 0,
      "id": 43776264,
      "score": 4,
      "time": 1745439757,
      "title": "The Race That Turned to Ruin",
      "type": "story",
      "url": "https://longreads.com/2025/04/03/balloon-race-belarus-disaster/"
    },
    {
      "by": "dedalus",
      "descendants": 7,
      "id": 43739374,
      "kids": [
        43773706,
        43774047,
        43773109,
        43775108
      ],
      "score": 30,
      "time": 1745095921,
      "title": "Understand Your Dependencies",
      "type": "story",
      "url": "https://deps.dev/"
    },
    {
      "by": "amichail",
      "descendants": 6,
      "id": 43746868,
      "kids": [
        43772541,
        43773169
      ],
      "score": 23,
      "time": 1745187107,
      "title": "Physicists Designed a Quantum Rubik's Cube and Found the Best Way to Solve It",
      "type": "story",
      "url": "https://www.sciencealert.com/physicists-designed-a-quantum-rubiks-cube-and-found-the-best-way-to-solve-it"
    },
    {
      "by": "lachyg",
      "descendants": 42,
      "id": 43764439,
      "kids": [
        43766530,
        43764764,
        43765025,
        43765704,
        43764953,
        43764780,
        43767219,
        43765271,
        43766143,
        43768471,
        43765734
      ],
      "score": 174,
      "time": 1745342971,
      "title": "π0.5: A VLA with open-world generalization",
      "type": "story",
      "url": "https://pi.website/blog/pi05"
    },
    {
      "by": "freetonik",
      "descendants": 140,
      "id": 43766200,
      "kids": [
        43766885,
        43768511,
        43767309,
        43767660,
        43766510,
        43766723,
        43766674,
        43766479,
        43766690,
        43774994,
        43767176,
        43766584,
        43766574,
        43769541,
        43768657,
        43768631,
        43773549,
        43766953,
        43767557,
        43772723,
        43769782,
        43766652,
        43774084,
        43769670,
        43774261,
        43774163,
        43768011,
        43767353,
        43768043,
        43766468,
        43768101
      ],
      "score": 541,
      "time": 1745355292,
      "title": "Atuin Desktop: Runbooks That Run",
      "type": "story",
      "url": "https://blog.atuin.sh/atuin-desktop-runbooks-that-run/"
    },
    {
      "by": "marsh_mellow",
      "descendants": 0,
      "id": 43774316,
      "score": 9,
      "time": 1745428326,
      "title": "Improving Deep Learning with a Little Help from Physics",
      "type": "story",
      "url": "https://www.quantamagazine.org/improving-deep-learning-with-a-little-help-from-physics-20250423/"
    },
    {
      "by": "Adityav369",
      "descendants": 42,
      "id": 43763814,
      "kids": [
        43766518,
        43766537,
        43770279,
        43766558,
        43764374,
        43764925,
        43765742,
        43766599,
        43766937,
        43769252,
        43766079,
        43767432,
        43767942,
        43765104
      ],
      "score": 186,
      "text": "Hey HN, we’re Adi and Arnav. A few months ago, we hit a wall trying to get LLMs to answer questions over research papers and instruction manuals. Everything worked fine, until the answer lived inside an image or diagram embedded in the PDF. Even GPT‑4o flubbed it (we recently tried O3 with the same, and surprisingly it flubbed it too). Naive RAG pipelines just pulled in some text chunks and ignored the rest.<p>We took an invention disclosure PDF (<a href=\"https:&#x2F;&#x2F;drive.google.com&#x2F;file&#x2F;d&#x2F;1ySzQgbNZkC5dPLtE3pnnVL2rW_9aTeuG&#x2F;view?usp=sharing\" rel=\"nofollow\">https:&#x2F;&#x2F;drive.google.com&#x2F;file&#x2F;d&#x2F;1ySzQgbNZkC5dPLtE3pnnVL2rW_9...</a>) containing an IRR‑vs‑frequency graph and asked GPT “From the graph, at what frequency is the IRR maximized?”. We originally tried this on gpt-4o, but while writing this used the new natively multimodal model o4‑mini‑high. After a 30‑second thinking pause, it asked for clarifications, then churned out buggy code, pulled data from the wrong page, and still couldn’t answer the question. We wrote up the full story with screenshots here: <a href=\"https:&#x2F;&#x2F;docs.morphik.ai&#x2F;blogs&#x2F;gpt-vs-morphik-multimodal\">https:&#x2F;&#x2F;docs.morphik.ai&#x2F;blogs&#x2F;gpt-vs-morphik-multimodal</a>.<p>We got frustrated enough to try fixing it ourselves.<p>We built Morphik to do multimodal retrieval over documents like PDFs, where images and diagrams matter as much as the text.<p>To do this, we use Colpali-style embeddings, which treat each document page as an image and generate multi-vector representations. These embeddings capture layout, typography, and visual context, allowing retrieval to get a whole table or schematic, not just nearby tokens. Along with vector search, this could now retrieve exact pages with relevant diagrams and pass them as images to the LLM to get relevant answers. It’s able to answer the question with an 8B llama 3.1 vision running locally!<p>Early pharma testers hit our system with queries like &quot;Which EGFR inhibitors at 50 mg showed ≥ 30% tumor reduction?&quot; We correctly returned the right tables and plots, but still hit a bottleneck, we weren’t able to join the dots across multiple reports. So we built a knowledge graph: we tag entities in both text and images, normalize synonyms (Erlotinib → EGFR inhibitor), infer relations (e.g. administered_at, yields_reduction), and stitch everything into a graph. Now a single query could traverse that graph across documents and surface a coherent, cross‑document answer along with the correct pages as images.<p>To illustrate that, and just for fun, we built a graph of 100 Paul Graham’s essays here: <a href=\"https:&#x2F;&#x2F;pggraph.streamlit.app&#x2F;\" rel=\"nofollow\">https:&#x2F;&#x2F;pggraph.streamlit.app&#x2F;</a> You can search for various nodes, (eg. startup, sam altman, paul graham and see corresponding connections). In our system, we create graphs and store the relevant text chunks along with the entities, so on querying, we can extract the relevant entity, do a search on the graph and pull in the text chunks of all connected nodes, improving cross document queries.<p>For longer or multi-turn queries, we added persistent KV caching, which stores intermediate key-value states from transformer attention layers. Instead of recomputing attention from scratch every time, we reuse prior layers, speeding up repeated queries and letting us handle much longer context windows.<p>We’re open‑source under the MIT Expat license: <a href=\"https:&#x2F;&#x2F;github.com&#x2F;morphik-org&#x2F;morphik-core\">https:&#x2F;&#x2F;github.com&#x2F;morphik-org&#x2F;morphik-core</a><p>Would love to hear your RAG horror stories, what worked, what didn’t and any feedback on Morphik. We’re here for it.",
      "time": 1745338721,
      "title": "Show HN: Morphik – Open-source RAG that understands PDF images, runs locally",
      "type": "story",
      "url": "https://github.com/morphik-org/morphik-core"
    },
    {
      "by": "Geekette",
      "descendants": 79,
      "id": 43764915,
      "kids": [
        43766963,
        43765193,
        43767371,
        43773805,
        43768460,
        43766422,
        43766550,
        43765510,
        43766416,
        43768499,
        43767357,
        43764927,
        43766687,
        43774123,
        43765585
      ],
      "score": 171,
      "time": 1745346500,
      "title": "Ping, You've Got Whale: AI detection system alerts ships of whales in their path",
      "type": "story",
      "url": "https://www.biographic.com/ping-youve-got-whale/"
    },
    {
      "by": "rietta",
      "descendants": 32,
      "id": 43747283,
      "kids": [
        43772453,
        43771522,
        43773052,
        43773301,
        43747284,
        43771120,
        43773783,
        43771927,
        43774981,
        43774360,
        43747324,
        43773315,
        43771591,
        43774771,
        43774190
      ],
      "score": 76,
      "time": 1745191423,
      "title": "Restoring Old Software for Child Learning Safety",
      "type": "story",
      "url": "https://rietta.com/blog/child-learning-with-old-software/"
    },
    {
      "by": "bookofjoe",
      "descendants": 1,
      "id": 43777604,
      "kids": [
        43777606
      ],
      "score": 6,
      "time": 1745449332,
      "title": "Scientists Sent Quantum Messages a Record Distance over a Traditional Network",
      "type": "story",
      "url": "https://www.wsj.com/science/in-a-first-scientists-sent-quantum-messages-a-record-distance-over-a-traditional-network-9124412f"
    },
    {
      "by": "teleforce",
      "descendants": 79,
      "id": 43770228,
      "kids": [
        43771132,
        43771982,
        43771538,
        43773359,
        43773034,
        43771804,
        43771655,
        43771225,
        43771016,
        43771213,
        43774519,
        43772042,
        43774053
      ],
      "score": 97,
      "time": 1745401211,
      "title": "Sixty Years On, We Still Dream of the Arrow",
      "type": "story",
      "url": "https://watershedmagazine.com/features/sixty-years-on-we-still-dream-of-the-arrow/"
    },
    {
      "by": "nehal96",
      "descendants": 185,
      "id": 43764076,
      "kids": [
        43764315,
        43764411,
        43764775,
        43764972,
        43766514,
        43765579,
        43764479,
        43764489,
        43765285,
        43765249,
        43764648,
        43764795,
        43764945,
        43765808,
        43770412,
        43765228,
        43765450,
        43771254,
        43770826,
        43765059,
        43767402,
        43764404,
        43764993,
        43770793,
        43764662,
        43767350,
        43764746,
        43764737,
        43764873,
        43765159,
        43766451,
        43769779,
        43769356,
        43765432,
        43764617,
        43764516,
        43765008,
        43764338,
        43764483
      ],
      "score": 251,
      "time": 1745340379,
      "title": "I should have loved biology too",
      "type": "story",
      "url": "https://nehalslearnings.substack.com/p/i-should-have-loved-biology-too"
    },
    {
      "by": "thund",
      "descendants": 24,
      "id": 43740803,
      "kids": [
        43769462,
        43769423,
        43770078,
        43740809,
        43777136
      ],
      "score": 52,
      "time": 1745111621,
      "title": "Subnanosecond Flash Memory",
      "type": "story",
      "url": "https://www.nature.com/articles/s41586-025-08839-w"
    },
    {
      "by": "toss1",
      "descendants": 109,
      "id": 43733495,
      "kids": [
        43760909,
        43762246,
        43761130,
        43763335,
        43768127,
        43763197,
        43770764,
        43763303,
        43760839,
        43763329,
        43768174
      ],
      "score": 72,
      "time": 1745026835,
      "title": "Can rotation solve the Hubble Puzzle?",
      "type": "story",
      "url": "https://academic.oup.com/mnras/article/538/4/3038/8090496?login=false"
    },
    {
      "by": "jdspiral",
      "descendants": 24,
      "id": 43767058,
      "kids": [
        43769590,
        43767059,
        43768465,
        43769097,
        43767392,
        43772257,
        43768810,
        43768484,
        43768536,
        43767714,
        43771175,
        43768442,
        43767794,
        43767244,
        43767372
      ],
      "score": 107,
      "time": 1745362509,
      "title": "Meaning Machine – Visualize how LLMs break down and simulate meaning",
      "type": "story",
      "url": "https://meaning-machine.streamlit.app"
    },
    {
      "by": "rbanffy",
      "descendants": 35,
      "id": 43746532,
      "kids": [
        43749855,
        43773982,
        43771832,
        43774174,
        43773731,
        43772337,
        43748870,
        43747811,
        43773625,
        43772705,
        43756838
      ],
      "score": 52,
      "time": 1745183223,
      "title": "Demystifying decorators: They don't need to be cryptic",
      "type": "story",
      "url": "https://www.thepythoncodingstack.com/p/demystifying-python-decorators"
    },
    {
      "by": "coloneltcb",
      "descendants": 38,
      "id": 43761633,
      "kids": [
        43764477,
        43764577,
        43764285,
        43769877,
        43765393,
        43764729,
        43769069,
        43769436,
        43764054,
        43763900,
        43763919,
        43764694,
        43766258,
        43764635
      ],
      "score": 168,
      "time": 1745327190,
      "title": "The raccoons who made computer magazine ads great",
      "type": "story",
      "url": "https://technologizer.com/home/2025/04/22/pc-connection-ads-raccoons/"
    },
    {
      "by": "tanelpoder",
      "descendants": 32,
      "id": 43761998,
      "kids": [
        43763603,
        43762438,
        43762452,
        43762840,
        43762449,
        43763519,
        43763816,
        43762304,
        43763639,
        43762278,
        43768145,
        43763595,
        43762645,
        43763005,
        43762628,
        43767026,
        43765286,
        43762274
      ],
      "score": 188,
      "time": 1745328947,
      "title": "Abusing DuckDB-WASM by making SQL draw 3D graphics (Sort Of)",
      "type": "story",
      "url": "https://www.hey.earth/posts/duckdb-doom"
    },
    {
      "by": "Areibman",
      "descendants": 75,
      "id": 43764101,
      "kids": [
        43765202,
        43764230,
        43764520,
        43765347,
        43768574,
        43765092,
        43765712,
        43766007,
        43766739,
        43764395,
        43765638,
        43772852,
        43764894,
        43765004,
        43765977,
        43764725,
        43764475,
        43764130
      ],
      "score": 179,
      "time": 1745340595,
      "title": "Are polynomial features the root of all evil? (2024)",
      "type": "story",
      "url": "https://alexshtf.github.io/2024/01/21/Bernstein.html"
    },
    {
      "by": "ckanthony",
      "descendants": 0,
      "id": 43771318,
      "score": 3,
      "text": "TLDR:<p>OpenAPI-MCP is a Dockerized server that dynamically generates Model Context Protocol (MCP) tool definitions directly from your Swagger&#x2F;OpenAPI documentation. It allows your AI agent to seamlessly access any API without additional coding, streamlining development and eliminating repetitive manual setup.<p>For more details, code updates-----:<p>GitHub: ckanthony&#x2F;openapi-mcp\nDocker Hub: ckanthony&#x2F;openapi-mcp",
      "time": 1745411442,
      "title": "Show HN: I built a No Code Dockerized MCP Server for any API - AI Agent",
      "type": "story",
      "url": "https://github.com/ckanthony/openapi-mcp"
    },
    {
      "by": "lastdong",
      "descendants": 160,
      "id": 43734911,
      "kids": [
        43767559,
        43767616,
        43768051,
        43770579,
        43770535,
        43768341,
        43768058,
        43768244,
        43769665,
        43767573,
        43769359,
        43769052,
        43769749,
        43773668,
        43772028,
        43769169,
        43771910,
        43768132,
        43773676,
        43769835,
        43767993,
        43768173,
        43768118,
        43768806,
        43770127,
        43769662,
        43769632,
        43769236,
        43767847
      ],
      "score": 297,
      "time": 1745049038,
      "title": "Solidjs: Simple and performant reactivity for building user interfaces",
      "type": "story",
      "url": "https://www.solidjs.com/"
    },
    {
      "by": "nxobject",
      "descendants": 6,
      "id": 43745410,
      "kids": [
        43746536,
        43773796,
        43768994,
        43770273
      ],
      "score": 72,
      "time": 1745172735,
      "title": "Mike Wood, Whose LeapFrog Toys Taught a Generation, Dies at 72",
      "type": "story",
      "url": "https://www.nytimes.com/2025/04/19/business/michael-c-wood-dead.html"
    },
    {
      "by": "panic",
      "descendants": 11,
      "id": 43763565,
      "kids": [
        43765093,
        43770027,
        43770371,
        43775967,
        43772754,
        43767339,
        43767822
      ],
      "score": 144,
      "time": 1745337048,
      "title": "Hyperwood – Open-Source Furniture",
      "type": "story",
      "url": "https://hyperwood.org/"
    },
    {
      "by": "codingmoh",
      "descendants": 1,
      "id": 43777660,
      "kids": [
        43778354
      ],
      "score": 4,
      "time": 1745449754,
      "title": "You are the heir to something greater than Empire",
      "type": "story",
      "url": "https://www.noahpinion.blog/p/you-are-the-heir-to-something-greater"
    },
    {
      "by": "Incerto",
      "descendants": 208,
      "id": 43769936,
      "kids": [
        43771412,
        43770250,
        43770060,
        43771372,
        43770266,
        43770290,
        43770940,
        43770370,
        43770892,
        43771632,
        43773221,
        43770833,
        43774324,
        43771202,
        43774781,
        43770230,
        43770356,
        43770205,
        43770033,
        43773593,
        43770187,
        43771769,
        43770897,
        43772993,
        43770123,
        43770300
      ],
      "score": 260,
      "time": 1745398174,
      "title": "The Gruen Transfer is consuming the internet",
      "type": "story",
      "url": "https://sebs.website/blog/the%20gruen-transfer-is-consuming-the-internet"
    },
    {
      "by": "imakwana",
      "descendants": 485,
      "id": 43748486,
      "kids": [
        43748792,
        43749092,
        43749347,
        43748834,
        43748692,
        43748904,
        43748740,
        43753742,
        43748660,
        43748987,
        43748886,
        43749360,
        43751184,
        43773701,
        43754261,
        43748630,
        43749177,
        43749343,
        43753716,
        43751363,
        43749858,
        43749127,
        43749881,
        43748972,
        43750188,
        43753109,
        43748811,
        43754935,
        43749180,
        43760215,
        43749267,
        43750215,
        43749860,
        43750212,
        43753167,
        43752533,
        43749786,
        43753166,
        43749568,
        43749642,
        43753140,
        43749331,
        43750849,
        43748759,
        43751551,
        43750719,
        43754265,
        43750908,
        43748798,
        43753344,
        43748715,
        43748709,
        43749458,
        43748691,
        43750180,
        43748606,
        43748726
      ],
      "score": 480,
      "time": 1745209455,
      "title": "The effect of deactivating Facebook and Instagram on users' emotional state",
      "type": "story",
      "url": "https://www.nber.org/papers/w33697"
    },
    {
      "by": "indigodaddy",
      "descendants": 106,
      "id": 43746202,
      "kids": [
        43767447,
        43768366,
        43766847,
        43767485,
        43768687,
        43771489,
        43775165,
        43768829,
        43767193,
        43767463,
        43768187,
        43768220,
        43767163,
        43773360,
        43768139,
        43768138,
        43768905,
        43767448
      ],
      "score": 71,
      "time": 1745179752,
      "title": "The Rise and Fall of Toys 'R' Us (2018)",
      "type": "story",
      "url": "https://www.history.com/articles/toys-r-us-closing-legacy"
    },
    {
      "by": "noselasd",
      "descendants": 16,
      "id": 43732632,
      "kids": [
        43762074,
        43764911,
        43734127,
        43763283,
        43764772,
        43760680,
        43760554
      ],
      "score": 183,
      "time": 1745017183,
      "title": "We Diagnosed and Fixed the 2023 Voyager 1 Anomaly from 15B Miles Away [video]",
      "type": "story",
      "url": "https://www.youtube.com/watch?v=YcUycQoz0zg"
    },
    {
      "by": "alexdanilowicz",
      "descendants": 109,
      "id": 43752176,
      "kids": [
        43757543,
        43759515,
        43756680,
        43753215,
        43754523,
        43760926,
        43759589,
        43760703,
        43752574,
        43755895,
        43755795,
        43752637,
        43752593,
        43758671,
        43753615,
        43756663,
        43757466,
        43752860,
        43756451,
        43755276,
        43757565,
        43753616,
        43760745,
        43752916,
        43754344,
        43755483,
        43760141,
        43752900,
        43757695,
        43759806,
        43763610,
        43762430,
        43763550,
        43758909,
        43755754,
        43760297
      ],
      "score": 182,
      "text": "Alex and Teddy here. We’re launching Magic Patterns (<a href=\"https:&#x2F;&#x2F;www.magicpatterns.com\">https:&#x2F;&#x2F;www.magicpatterns.com</a>), an AI prototyping tool that helps PMs and designers create functional, interactive designs and websites. There’s a demo video at <a href=\"https:&#x2F;&#x2F;www.youtube.com&#x2F;watch?v=SK8C_tQBwIU\" rel=\"nofollow\">https:&#x2F;&#x2F;www.youtube.com&#x2F;watch?v=SK8C_tQBwIU</a>, as well as video walkthroughs of specific examples at <a href=\"https:&#x2F;&#x2F;www.magicpatterns.com&#x2F;docs&#x2F;documentation&#x2F;tutorials&#x2F;video-tutorials\">https:&#x2F;&#x2F;www.magicpatterns.com&#x2F;docs&#x2F;documentation&#x2F;tutorials&#x2F;v...</a><p>While other tools help with “AI-assisted coding,” we have been quietly focused on “AI-assisted designing.” With Magic Patterns you can visually communicate your idea, get hands on feedback from customers, and test new features.<p>Teddy and I are best friends and former frontend engineers turned founders. We arrived at Magic Patterns after several pivots—always in the design tooling space, but different products that all struggled to get usage. We started working on Magic Patterns after an internal hackathon. Teddy built a UI library catalog and I messed around with GPT 3.5. We thought it’d be fun to combine the two: an AI component generator. Describe whatever you want, and get back a React component!<p>That started to take off and we gained users, but it wasn’t developers using the tool. Instead, it was PMs, designers, and leadership who could finally communicate their ideas. They use it to test new ideas quickly, get feedback from customers, and improve communication with internal teams. Also, hobbyists (and programmers who aren’t designers) use us to create designs and UIs that they wouldn’t be able to otherwise.<p>We use Sonnet 3.5 and 3.7, and leverage a fine-tuned model for fast-applying edits. The most challenging part is determining the most relevant context to feed to the LLM. We attempt to solve this with our click to update feature and by letting users define a brand preset, or default prompt.<p>Unlike other tools in this space, we’re specifically focused on (1) product teams—we&#x27;re realtime and collaborative; and (2) frontend only—we don&#x27;t spin up a database or backend because we aren&#x27;t solving &quot;idea to fullstack app.&quot;<p>A common workflow is a product manager building an interactive prototype and then passing it off to a designer for more polish or directly to engineers. Many teams are even skipping Figma entirely now, telling us that it feels like an unnecessary middleman. Teams are instead generating clickable prototypes, collaborating directly with stakeholders, and using that as the mockup.<p>With Magic Patterns, you can: - Collaborate with your team on our infinite canvas; - Match your existing designs by creating reusable components directly; - Brainstorm features and flows. (The latter is what we use it for internally.)<p>We started as a way to build small, custom components, but now people are one-shotting entire\nwebsites and hosting them with us, or building dashboards that they share internally or in customer demos. People have sold $10k&#x2F;mo contracts with Magic Patterns designs!<p>Small business owners—everyone from fishermen to driving instructors to hotel managers—are using us to build their websites and then hosting them with us. Example sites built by Magic Patterns include <a href=\"https:&#x2F;&#x2F;getdealflow.ai&#x2F;\" rel=\"nofollow\">https:&#x2F;&#x2F;getdealflow.ai&#x2F;</a> and <a href=\"https:&#x2F;&#x2F;joinringo.com&#x2F;\" rel=\"nofollow\">https:&#x2F;&#x2F;joinringo.com&#x2F;</a>. It’s amazing how people who couldn’t have done that before are now able to, and super gratifying to us to be empowering people in this way.<p>You can get started with our docs here: <a href=\"https:&#x2F;&#x2F;www.magicpatterns.com&#x2F;docs&#x2F;documentation&#x2F;get-started&#x2F;introduction\">https:&#x2F;&#x2F;www.magicpatterns.com&#x2F;docs&#x2F;documentation&#x2F;get-started...</a>, and you can try the actual product. Simply go to <a href=\"https:&#x2F;&#x2F;www.magicpatterns.com\">https:&#x2F;&#x2F;www.magicpatterns.com</a> and prompt for any UI you want.<p>Today no login is required, just click “Coming from Hackernews?” and you’ll get 5 messages free to try. Once you hit the limit, you’ll then be prompted to login. Plans start at $19&#x2F;mo for another 100 messages a month (<a href=\"https:&#x2F;&#x2F;www.magicpatterns.com&#x2F;pricing\">https:&#x2F;&#x2F;www.magicpatterns.com&#x2F;pricing</a>).<p>We’re stoked to be sharing with HN today and are open to all feedback!",
      "time": 1745244423,
      "title": "Launch HN: Magic Patterns (YC W23) – AI Design and Prototyping for Product Teams",
      "type": "story"
    },
    {
      "by": "8s2ngy",
      "descendants": 1,
      "id": 43774601,
      "kids": [
        43774739
      ],
      "score": 6,
      "time": 1745429795,
      "title": "Elements of Clojure",
      "type": "story",
      "url": "https://elementsofclojure.com/"
    },
    {
      "by": "baristaGeek",
      "descendants": 324,
      "id": 43763225,
      "kids": [
        43763445,
        43763293,
        43763664,
        43763607,
        43763357,
        43766302,
        43764759,
        43763735,
        43766454,
        43763433,
        43763302,
        43767480,
        43766756,
        43765142,
        43763372,
        43765112,
        43764995,
        43763475,
        43764106,
        43766099,
        43763566,
        43763559,
        43763587,
        43765762,
        43766421,
        43773392,
        43763402,
        43766355,
        43764252,
        43768925,
        43763570,
        43764132,
        43763561,
        43763716,
        43763480,
        43764533,
        43763913,
        43764368,
        43763729,
        43763649,
        43763943,
        43764500,
        43764638,
        43768469,
        43763397,
        43763415,
        43763411,
        43763558
      ],
      "score": 334,
      "time": 1745335043,
      "title": "Supabase raises $200M Series D at $2B valuation",
      "type": "story",
      "url": "https://finance.yahoo.com/news/exclusive-supabase-raises-200-million-112154867.html"
    },
    {
      "by": "uycyp",
      "descendants": 87,
      "id": 43766728,
      "kids": [
        43767422,
        43767171,
        43768807,
        43777231,
        43772077,
        43767655,
        43767841,
        43767048,
        43772713,
        43772423,
        43767535,
        43767846,
        43769667,
        43767781,
        43770490,
        43766729
      ],
      "score": 146,
      "time": 1745359236,
      "title": "How to quickly charge your smartphone: fast charging technologies in detail",
      "type": "story",
      "url": "https://eb43.github.io/articles/fast-charging-technologies-in-detail.html"
    },
    {
      "by": "dbelson",
      "descendants": 27,
      "id": 43765832,
      "kids": [
        43767247,
        43766290,
        43767677,
        43768753,
        43767101,
        43769900,
        43767897,
        43767454,
        43769939,
        43767201
      ],
      "score": 74,
      "time": 1745352964,
      "title": "Classic Computer Replicas",
      "type": "story",
      "url": "https://obsolescence.dev/index.html"
    },
    {
      "by": "alonfnt",
      "descendants": 15,
      "id": 43763223,
      "kids": [
        43763959,
        43763682,
        43764121,
        43765030,
        43764044,
        43764777,
        43764552
      ],
      "score": 106,
      "time": 1745335041,
      "title": "David Tong Lectures on Theoretical Physics",
      "type": "story",
      "url": "https://www.damtp.cam.ac.uk/user/tong/books.html"
    },
    {
      "by": "mmcloughlin",
      "descendants": 42,
      "id": 43745987,
      "kids": [
        43759691,
        43762726,
        43759511,
        43759790,
        43760567
      ],
      "score": 152,
      "time": 1745177909,
      "title": "Verus: Verified Rust for low-level systems code",
      "type": "story",
      "url": "https://github.com/secure-foundations/verus"
    },
    {
      "by": "akadeb",
      "descendants": 87,
      "id": 43762409,
      "kids": [
        43763204,
        43763477,
        43763898,
        43763640,
        43763765,
        43769886,
        43763552,
        43762410,
        43763331,
        43764043,
        43764414,
        43763970,
        43763312,
        43764815,
        43773572,
        43765334,
        43763202,
        43764136,
        43763140,
        43763500,
        43763345
      ],
      "score": 163,
      "text": "Hi HN! Last year the project I launched here got a lot of good feedback on creating speech to speech AI on the ESP32. Recently I revamped the whole stack, iterated on that feedback and made our project fully open-source—all of the client, hardware, firmware code.<p>This Github repo turns an ESP32-S3 into a realtime AI speech companion using the OpenAI Realtime API, Arduino WebSockets, Deno Edge Functions, and a full-stack web interface. You can talk to your own custom AI character, and it responds instantly.<p>I couldn&#x27;t find a resource that helped set up a reliable, secure websocket (WSS) AI speech to speech service. While there are several useful Text-To-Speech (TTS) and Speech-To-Text (STT) repos out there, I believe none gets Speech-To-Speech right. OpenAI launched an embedded-repo late last year which sets up WebRTC with ESP-IDF. However, it&#x27;s not beginner friendly and doesn&#x27;t have a server side component for business logic.<p>This repo is an attempt at solving the above pains and creating a great speech to speech experience on Arduino with Secure Websockets using Edge Servers (with Deno&#x2F;Supabase Edge Functions) for fast global connectivity and low latency.",
      "time": 1745331059,
      "title": "Show HN: I open-sourced my AI toy company that runs on ESP32 and OpenAI realtime",
      "type": "story",
      "url": "https://github.com/akdeb/ElatoAI"
    }
  ]
}