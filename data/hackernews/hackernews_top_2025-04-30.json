{
  "fetch_time": "2025-04-30 01:14:25",
  "stories": [
    {
      "by": "ra7",
      "descendants": 216,
      "id": 43839123,
      "kids": [
        43839496,
        43840111,
        43839238,
        43839298,
        43839901,
        43839223,
        43839310,
        43839305,
        43839217,
        43839397,
        43839596,
        43839651,
        43840070,
        43839968,
        43839807,
        43839824,
        43839266,
        43839199,
        43839522,
        43839212,
        43839315,
        43839363,
        43839624,
        43839231,
        43839224,
        43839273,
        43839289,
        43839204
      ],
      "score": 287,
      "time": 1745967962,
      "title": "Waymo partners with Toyota to bring autonomous driving to personal vehicles",
      "type": "story",
      "url": "https://waymo.com/blog/2025/04/waymo-and-toyota-outline-strategic-partnership"
    },
    {
      "by": "aphyr",
      "descendants": 74,
      "id": 43833195,
      "kids": [
        43839935,
        43838197,
        43838361,
        43840017,
        43838022,
        43838436,
        43839881,
        43839188,
        43838806,
        43838930,
        43838056,
        43837961,
        43838621,
        43838691
      ],
      "score": 236,
      "time": 1745937011,
      "title": "Jepsen: Amazon RDS for PostgreSQL 17.4",
      "type": "story",
      "url": "https://jepsen.io/analyses/amazon-rds-for-postgresql-17.4"
    },
    {
      "by": "miles",
      "descendants": 172,
      "id": 43835445,
      "kids": [
        43837538,
        43836610,
        43835959,
        43836187,
        43835732,
        43838160,
        43835890,
        43836450,
        43840040,
        43836378,
        43837965,
        43836279,
        43837159,
        43839739,
        43836588,
        43838898,
        43837876,
        43837861,
        43838422,
        43836828,
        43838028,
        43837800,
        43836205,
        43839575,
        43839018,
        43837872,
        43839647,
        43839005,
        43837051,
        43838383,
        43839414,
        43838015,
        43836832,
        43836200,
        43836843,
        43836892,
        43836928,
        43837195,
        43837906,
        43838362,
        43836147,
        43836383,
        43839366,
        43838273,
        43839443,
        43836696,
        43838911,
        43837829,
        43836573,
        43838094,
        43838613,
        43836153,
        43839430,
        43837885,
        43836404,
        43836377,
        43836245,
        43837367,
        43836130,
        43838116,
        43835996,
        43836438,
        43837946,
        43836698,
        43838631
      ],
      "score": 342,
      "time": 1745947144,
      "title": "Chain of Recursive Thoughts: Make AI think harder by making it argue with itself",
      "type": "story",
      "url": "https://github.com/PhialsBasement/Chain-of-Recursive-Thoughts"
    },
    {
      "by": "max__dev",
      "descendants": 14,
      "id": 43838856,
      "kids": [
        43839328,
        43839472,
        43839385,
        43839166,
        43839579,
        43839925,
        43839129,
        43839843,
        43840030
      ],
      "score": 36,
      "time": 1745966135,
      "title": "Path Isn't Real on Linux",
      "type": "story",
      "url": "https://blog.danielh.cc/blog/path"
    },
    {
      "by": "shallow-mind",
      "descendants": 38,
      "id": 43835495,
      "kids": [
        43837561,
        43835610,
        43838024,
        43836521,
        43839362,
        43836475,
        43837096,
        43836259,
        43838433,
        43837163,
        43835829,
        43835643
      ],
      "score": 126,
      "time": 1745947469,
      "title": "Bamba: An open-source LLM that crosses a transformer with an SSM",
      "type": "story",
      "url": "https://research.ibm.com/blog/bamba-ssm-transformer-model"
    },
    {
      "by": "vslira",
      "descendants": 34,
      "id": 43839539,
      "kids": [
        43839731,
        43840038,
        43840050,
        43839695,
        43839810,
        43839681,
        43839652,
        43839868,
        43839659,
        43840034,
        43839861,
        43839692,
        43839800,
        43839753,
        43839645,
        43839761,
        43839773,
        43839908
      ],
      "score": 38,
      "time": 1745971176,
      "title": "Help ChatGPT discover your products",
      "type": "story",
      "url": "https://openai.com/chatgpt/search-product-discovery/"
    },
    {
      "by": "foxfired",
      "descendants": 171,
      "id": 43826798,
      "kids": [
        43837752,
        43838659,
        43837846,
        43837414,
        43838239,
        43837552,
        43837894,
        43837351,
        43838629,
        43838684,
        43837855,
        43837762,
        43838618,
        43837522,
        43838751,
        43838298,
        43827262,
        43837827,
        43837592,
        43839723,
        43827733,
        43837523,
        43837716,
        43826882,
        43837974,
        43826818,
        43837723,
        43826845
      ],
      "score": 317,
      "time": 1745879336,
      "title": "I use zip bombs to protect my server",
      "type": "story",
      "url": "https://idiallo.com/blog/zipbomb-protection"
    },
    {
      "by": "meetpateltech",
      "descendants": 70,
      "id": 43835424,
      "kids": [
        43838226,
        43835646,
        43835680,
        43836682,
        43837394,
        43837918,
        43838084,
        43838476,
        43835648,
        43836590,
        43836025,
        43835755,
        43836340,
        43836526,
        43836043
      ],
      "score": 134,
      "time": 1745947043,
      "title": "Everything we announced at our first LlamaCon",
      "type": "story",
      "url": "https://ai.meta.com/blog/llamacon-llama-news/?_fb_noscript=1"
    },
    {
      "by": "abduhl",
      "descendants": 204,
      "id": 43837993,
      "kids": [
        43839103,
        43838622,
        43838750,
        43838894,
        43839131,
        43838761,
        43839226,
        43839981,
        43838714,
        43838908,
        43839387,
        43838733,
        43838775,
        43839081,
        43839006,
        43838637,
        43839146,
        43838909,
        43838749,
        43838678,
        43838924,
        43838673,
        43838695,
        43838672,
        43839218,
        43838670,
        43839074,
        43838943,
        43838628,
        43839832,
        43839913,
        43838619,
        43838578,
        43838572,
        43838649,
        43839099
      ],
      "score": 206,
      "time": 1745960391,
      "title": "Only Teslas exempt from new auto tariffs thanks to 85% domestic content rule",
      "type": "story",
      "url": "https://fuelarc.com/cars/only-tesla-exempt-from-new-auto-tariffs-thanks-to-85-domestic-content-rule/"
    },
    {
      "by": "FlyingSnake",
      "descendants": 14,
      "id": 43822251,
      "kids": [
        43839267,
        43839769,
        43838891,
        43838223,
        43837663,
        43837402,
        43822375
      ],
      "score": 73,
      "time": 1745852524,
      "title": "It's School time: Adventures in hacking an old Kindle",
      "type": "story",
      "url": "https://samkhawase.com/blog/hacking-kindle/"
    },
    {
      "by": "surprisetalk",
      "descendants": 56,
      "id": 43822396,
      "kids": [
        43837650,
        43838676,
        43824931,
        43838724,
        43838075,
        43837986,
        43838543,
        43839525
      ],
      "score": 108,
      "time": 1745853219,
      "title": "China's Clinical Trial Boom",
      "type": "story",
      "url": "https://www.asimov.press/p/china-trials"
    },
    {
      "by": "freemanjiang",
      "descendants": 50,
      "id": 43835584,
      "kids": [
        43836969,
        43838020,
        43836877,
        43836874,
        43839797,
        43838479,
        43836717,
        43837994,
        43839097,
        43838414,
        43837691,
        43836955,
        43836762,
        43837511,
        43839009,
        43837817,
        43838489,
        43837884,
        43839613,
        43836680,
        43837821,
        43836868,
        43838540,
        43838175,
        43836513,
        43836931
      ],
      "score": 190,
      "text": "Hi HN! I made Beatsync, an open-source browser-based audio player that syncs audio with millisecond-level accuracy across many devices.<p>Try it live right now: <a href=\"https:&#x2F;&#x2F;www.beatsync.gg&#x2F;\" rel=\"nofollow\">https:&#x2F;&#x2F;www.beatsync.gg&#x2F;</a><p>The idea is that with no additional hardware, you can turn any group of devices into a full surround sound system. MacBook speakers are particularly good.<p>Inspired by Network Time Protocol (NTP), I do clock synchronization over websockets and use the Web Audio API to keep audio latency under a few ms.<p>You can also drag devices around a virtual grid to simulate spatial audio — it changes the volume of each device depending on its distance to a virtual listening source!<p>I&#x27;ve been working on this project for the past couple of weeks. Would love to hear your thoughts and ideas!",
      "time": 1745947945,
      "title": "Show HN: Beatsync – perfect audio sync across multiple devices",
      "type": "story",
      "url": "https://github.com/freeman-jiang/beatsync"
    },
    {
      "by": "todsacerdoti",
      "descendants": 96,
      "id": 43831705,
      "kids": [
        43835456,
        43834831,
        43834666,
        43834318,
        43833886,
        43835043,
        43835578,
        43835721,
        43838068,
        43836133,
        43833791,
        43834261,
        43834834,
        43834291,
        43834044,
        43835359,
        43837009,
        43836078,
        43835295,
        43835444,
        43835139,
        43836333,
        43837396,
        43834985,
        43835661,
        43835716
      ],
      "score": 212,
      "time": 1745929784,
      "title": "Performance optimization is hard because it's fundamentally a brute-force task",
      "type": "story",
      "url": "https://purplesyringa.moe/blog/why-performance-optimization-is-hard-work/"
    },
    {
      "by": "greenfish6",
      "id": 43837996,
      "score": 1,
      "time": 1745960405,
      "title": "Modern Realty (YC S24) Is Hiring",
      "type": "job",
      "url": "https://www.workatastartup.com/jobs/66546"
    },
    {
      "by": "klaussilveira",
      "descendants": 28,
      "id": 43833310,
      "kids": [
        43834933,
        43834087,
        43834043,
        43834229,
        43834033,
        43838839,
        43835016,
        43835987,
        43835607,
        43834330
      ],
      "score": 132,
      "time": 1745937523,
      "title": "ArkFlow: High-performance Rust stream processing engine",
      "type": "story",
      "url": "https://github.com/arkflow-rs/arkflow"
    },
    {
      "by": "azhenley",
      "descendants": 139,
      "id": 43831628,
      "kids": [
        43832471,
        43833052,
        43836146,
        43839802,
        43832534,
        43839576,
        43833407,
        43832414,
        43834499,
        43833049,
        43832643,
        43835674,
        43832379,
        43832991,
        43836982,
        43835599,
        43831950,
        43836605,
        43839394,
        43834200,
        43837416,
        43833454,
        43834466,
        43836480,
        43838535,
        43833414,
        43832740,
        43839671,
        43832649,
        43832408,
        43831810,
        43834952,
        43832757,
        43833323,
        43834025,
        43833862,
        43836102,
        43835799,
        43833174,
        43832570,
        43832373,
        43833041,
        43831734,
        43836548,
        43832947,
        43835391,
        43837031,
        43834195,
        43838235,
        43838342,
        43838221,
        43837298,
        43835291,
        43835269,
        43833846,
        43834585,
        43836410,
        43839812,
        43833234,
        43835800
      ],
      "score": 180,
      "time": 1745929399,
      "title": "Programming languages should have a tree traversal primitive",
      "type": "story",
      "url": "https://blog.tylerglaiel.com/p/programming-languages-should-have"
    },
    {
      "by": "mitch292",
      "descendants": 124,
      "id": 43831298,
      "kids": [
        43833130,
        43835084,
        43832081,
        43833643,
        43832101,
        43831762,
        43832380,
        43831751,
        43832365,
        43835409,
        43835670,
        43832719,
        43831768,
        43837729,
        43835621,
        43831960,
        43833809,
        43833283,
        43832900,
        43836441,
        43833389,
        43832369,
        43832773,
        43832567
      ],
      "score": 201,
      "text": "A FOSS chrome extension that attempts to remove the annoyance of cookie pop ups and banners.<p>There are some extensions out there that auto-accept cookies, but I didn&#x27;t find one that auto rejected cookies without either chaining some extensions together or setting up custom rules in tools like uBlock origin. So with this extension, you just need to add it for non-essential cookies to be rejected.<p>Github: <a href=\"https:&#x2F;&#x2F;github.com&#x2F;mitch292&#x2F;reject-cookies\">https:&#x2F;&#x2F;github.com&#x2F;mitch292&#x2F;reject-cookies</a>\nExtension Link: <a href=\"https:&#x2F;&#x2F;chromewebstore.google.com&#x2F;detail&#x2F;bnbodofigkfjljnopfggfoecokhmhamc?utm_source=item-share-cb\" rel=\"nofollow\">https:&#x2F;&#x2F;chromewebstore.google.com&#x2F;detail&#x2F;bnbodofigkfjljnopfg...</a><p>It&#x27;s still very early days for the extension. I want it to keep improving and working on more and more sites. Feedback welcome. Thanks!",
      "time": 1745927395,
      "title": "Show HN: A Chrome extension that will auto-reject non-essential cookies",
      "type": "story",
      "url": "https://blog.bymitch.com/posts/reject-cookies/"
    },
    {
      "by": "TangerineDream",
      "descendants": 301,
      "id": 43834101,
      "kids": [
        43837417,
        43834414,
        43840060,
        43835762,
        43836017,
        43834526,
        43836667,
        43834853,
        43839891,
        43834459,
        43836869,
        43839036,
        43834871,
        43834474,
        43835712,
        43835320,
        43834986,
        43834807,
        43838402,
        43835325,
        43839518,
        43835576,
        43838047,
        43835209,
        43834681,
        43835205,
        43834875,
        43839088,
        43835954,
        43839017,
        43834578,
        43834565,
        43836093,
        43836197,
        43838853,
        43837656,
        43839152,
        43837510,
        43834531,
        43834920,
        43837860,
        43835788,
        43837007,
        43834548,
        43837373,
        43836363,
        43835439,
        43835545,
        43836699,
        43835813,
        43835972,
        43837362,
        43834701,
        43834848,
        43836044,
        43836301,
        43837824,
        43835165,
        43834835,
        43834919,
        43836026,
        43834541,
        43834440,
        43836484,
        43836422,
        43834624,
        43835156,
        43835014,
        43834672,
        43834621,
        43836047,
        43834900,
        43836086,
        43836082,
        43836020,
        43835438,
        43835086,
        43835026,
        43836054,
        43834344,
        43835718
      ],
      "score": 505,
      "time": 1745941030,
      "title": "Firefox tab groups are here",
      "type": "story",
      "url": "https://blog.mozilla.org/en/firefox/tab-groups-community/"
    },
    {
      "by": "StratusBen",
      "descendants": 3,
      "id": 43794120,
      "kids": [
        43794569,
        43794280
      ],
      "score": 27,
      "text": "Hey all - I work at Vantage, a FinOps platform.<p>I know AI is peak hype right now. But it has definitely changed some of our dev workflows already. So we wanted to find a way to let our customers experiment with how they can use AI to make their cloud cost management work more productive.<p>The MCP Server acts as a connector between LLMs (right now only Claude, Cursor support it but ChatGPT and Google Gemini coming soon) and your cost and usage data on Vantage which supports 20+ cloud infra providers including AWS, Datadog, Mongo, etc. (You have to have a Vantage account to use it since it&#x27;s using the Vantage API)<p>Video demo: <a href=\"https:&#x2F;&#x2F;www.youtube.com&#x2F;watch?v=n0VP2NlUvRU\" rel=\"nofollow\">https:&#x2F;&#x2F;www.youtube.com&#x2F;watch?v=n0VP2NlUvRU</a><p>Repo: <a href=\"https:&#x2F;&#x2F;github.com&#x2F;vantage-sh&#x2F;vantage-mcp-server\">https:&#x2F;&#x2F;github.com&#x2F;vantage-sh&#x2F;vantage-mcp-server</a><p>It&#x27;s really impressive how capable the latest-gen models are with an MCP server and an API. So far we have found it useful for:<p>Ad-Hoc questions: &quot;What&#x27;s our non-prod cloud spend per engineer if we have 25 engineers&quot;<p>Action plans: &quot;Find unallocated spend and look for clues how it should be tagged&quot;<p>Multi-tool workflows: &quot;Find recent cost spikes that look like they could have come from eng changes and look for GitHub PR&#x27;s merged around the same time&quot; (using it in combination with the GitHub MCP)<p>Thought I&#x27;d share, let me know if you have questions.",
      "time": 1745592237,
      "title": "Show HN: An MCP server for understanding AWS costs",
      "type": "story"
    },
    {
      "by": "bko",
      "descendants": 259,
      "id": 43835044,
      "kids": [
        43835377,
        43837832,
        43835821,
        43835374,
        43835714,
        43837410,
        43837033,
        43835231,
        43835353,
        43839837,
        43835358,
        43839296,
        43837222,
        43835483,
        43835504,
        43835283,
        43836791,
        43835585,
        43836402,
        43836366,
        43836720,
        43836971,
        43836945,
        43835462,
        43836417,
        43835265,
        43835279,
        43835321,
        43838596,
        43835678,
        43835633
      ],
      "score": 368,
      "time": 1745945322,
      "title": "O3 beats a master-level GeoGuessr player, even with fake EXIF data",
      "type": "story",
      "url": "https://sampatt.com/blog/2025-04-28-can-o3-beat-a-geoguessr-master"
    },
    {
      "by": "siavosh",
      "descendants": 1,
      "id": 43815406,
      "kids": [
        43837881
      ],
      "score": 14,
      "time": 1745790570,
      "title": "Princeton Engineering Anomalies Research (2010)",
      "type": "story",
      "url": "https://pearlab.icrl.org/theory.html"
    },
    {
      "by": "mariuz",
      "descendants": 1,
      "id": 43828423,
      "kids": [
        43832427
      ],
      "score": 11,
      "time": 1745896732,
      "title": "An illustrated guide to automatic sparse differentiation",
      "type": "story",
      "url": "https://iclr-blogposts.github.io/2025/blog/sparse-autodiff/"
    },
    {
      "by": "E-Reverance",
      "descendants": 3,
      "id": 43801371,
      "kids": [
        43802396,
        43811831,
        43839355
      ],
      "score": 32,
      "time": 1745648672,
      "title": "Finding paths of least action with gradient descent (2023)",
      "type": "story",
      "url": "https://greydanus.github.io/2023/03/05/ncf-tutorial/"
    },
    {
      "by": "Xiione",
      "descendants": 6,
      "id": 43792774,
      "kids": [
        43839089,
        43838167,
        43798744
      ],
      "score": 56,
      "text": "Hi HN!\nThis is a hobby project of mine that recently landed me my first interview and helped me get my first internship offers.<p>Draw on a QR code, and the health bars will accurately display how close the QR code is to being unscannable. How few errors does it take to break a QR code? How many errors can a QR code handle? Counters at the bottom track your record minimum and maximum damage. (Can you figure out how to break a QR code with 0.0% damage to the actual data region?)<p>Also, click on the magnifying glass button to toggle between &quot;draw mode&quot; and &quot;inspect mode&quot;.\nI encourage you to use your phone&#x27;s camera to scan the code as you draw and undo&#x2F;redo to verify that the code really does break when the app says it does.<p>I wrote the underlying decoder in C++, and it&#x27;s compiled to WebAssembly for the website.<p>I hope you find it interesting.",
      "time": 1745583324,
      "title": "Show HN: An interactive demo of QR codes' error correction",
      "type": "story",
      "url": "https://qris.cool"
    },
    {
      "by": "impish9208",
      "descendants": 127,
      "id": 43834942,
      "kids": [
        43836295,
        43836502,
        43836788,
        43839039,
        43835901,
        43839869,
        43836690,
        43835553,
        43839625,
        43836946,
        43836122,
        43836261,
        43835523,
        43837052,
        43835951,
        43837619,
        43835478,
        43836136
      ],
      "score": 290,
      "time": 1745944887,
      "title": "Indian court orders blocking of Proton Mail",
      "type": "story",
      "url": "https://techcrunch.com/2025/04/29/indian-court-orders-blocking-of-proton-mail/"
    },
    {
      "by": "Fosowl",
      "descendants": 12,
      "id": 43805457,
      "kids": [
        43840004,
        43839160,
        43838080,
        43838927,
        43830357,
        43809563,
        43807507
      ],
      "score": 64,
      "text": "I’ve spent the last two months building AgenticSeek, a privacy-focused alternative to cloud-based AI tools like ManusAI. It runs entirely on your machine—no API calls, no data leaks.<p>Why AgenticSeek?<p>Optimized for local LLMs (developed mostly on an RTX 3060 running deepseek r1 14b).<p>Truly private: All components (TTS, STT, planner) run locally.<p>More responsive than alternatives (we respond fast to issues + active Discord).<p>Designed to be fun—think JARVIS-like voice control, multi-agent workflows, and a slick web UI.<p>Current Features:<p>Web browsing (research + form filling), code write&#x2F;fix, file management&#x2F;search. Planning capabilites to use multiple agents for complex task.<p>Is it stable?\nPrototype-stage—great for tinkerers.<p>Hoping to get feedback!",
      "time": 1745688229,
      "title": "Show HN: AgenticSeek – Self-hosted alternative to cloud-based AI tools",
      "type": "story",
      "url": "https://github.com/Fosowl/agenticSeek"
    },
    {
      "by": "gabigrin",
      "descendants": 67,
      "id": 43830193,
      "kids": [
        43830699,
        43834555,
        43833570,
        43834478,
        43833733,
        43838405,
        43831246,
        43831420,
        43834059,
        43830836,
        43832116,
        43832046,
        43834644,
        43833477,
        43831110,
        43830964,
        43830971,
        43834962,
        43831376,
        43831838,
        43837941,
        43830977,
        43831672,
        43832444,
        43834709,
        43830608,
        43831539,
        43831201,
        43833973,
        43831787,
        43833599,
        43833235,
        43832115,
        43832082,
        43830543,
        43830819,
        43833175
      ],
      "score": 158,
      "text": "Hey HN! I’m Gabriel, and I’m excited to share a project I’ve been working on for the last few years. Flowcode is a visual programming platform that tries to combine the best of both worlds (code and visual). Over the years I found myself repeatedly drawing architectures and logic. It was always my dream to just press “run” instead of having to write them in code afterwards. But none of the visual tools I found were flexible and transparent enough for building real products.<p>I think that visual programming fits perfectly with modern backend dev tasks that revolve around connecting different services with basic logic. Flowcode is meant to speed up and simplify those tasks, leaving more time to think about design and solve design problems. Visual programming also works really well for developing workflows involving LLM calls that are non-deterministic and require a lot of debugging and prompt tweaking.<p>There are many other visual&#x2F;low code tools, but they all offer limited control and flexibility (no concurrency, loops, transparency) and most suffer from the same problems (vendor lock-in, hard to integrate with existing code etc.).<p>Flowcode is built on an open source visual programming language (Flyde <a href=\"https:&#x2F;&#x2F;github.com&#x2F;flydelabs&#x2F;flyde\">https:&#x2F;&#x2F;github.com&#x2F;flydelabs&#x2F;flyde</a>, which I launched last year here on HN - <a href=\"https:&#x2F;&#x2F;news.ycombinator.com&#x2F;item?id=39628285\">https:&#x2F;&#x2F;news.ycombinator.com&#x2F;item?id=39628285</a>). This means Flowcode has true concurrency, no vendor lock-in (you can export flows as .flyde files), is Turing-complete (loops, recursion, control flows, multiple IOs etc.), lets you fork any node, integrates with code via an SDK and more.<p>I’d love to hear your thoughts and feedback.",
      "time": 1745917475,
      "title": "Show HN: Flowcode – Turing-complete visual programming platform",
      "type": "story",
      "url": "https://app.getflowcode.io/playground/example1"
    },
    {
      "by": "hyperific",
      "descendants": 308,
      "id": 43829035,
      "kids": [
        43834588,
        43832356,
        43833977,
        43833313,
        43829188,
        43832477,
        43833384,
        43834722,
        43832333,
        43829281,
        43829418,
        43829412,
        43835154,
        43830795,
        43837186,
        43830704,
        43834148,
        43837344,
        43833832,
        43829280,
        43829585,
        43833132,
        43829487,
        43833758,
        43832677,
        43833378,
        43838581,
        43830269,
        43833642,
        43829730,
        43829484,
        43833664,
        43833142,
        43834445,
        43835204,
        43833341,
        43836913,
        43834603,
        43832934,
        43830164,
        43833537,
        43831895,
        43831336,
        43835003,
        43833393,
        43830460,
        43831153
      ],
      "score": 678,
      "time": 1745905553,
      "title": "LibreLingo – FOSS Alternative to Duolingo",
      "type": "story",
      "url": "https://librelingo.app"
    },
    {
      "by": "PaulHoule",
      "descendants": 14,
      "id": 43833762,
      "kids": [
        43836586,
        43837987,
        43839377,
        43836186,
        43838104,
        43838017
      ],
      "score": 41,
      "time": 1745939488,
      "title": "The last masters of Afro-Colombian machete fencing",
      "type": "story",
      "url": "https://globalvoices.org/2025/04/19/the-last-masters-of-afro-colombian-machete-fencing-fight-to-save-their-tradition/"
    },
    {
      "by": "throw0101a",
      "descendants": 7,
      "id": 43832084,
      "kids": [
        43839830,
        43832132,
        43839161,
        43834605,
        43836073,
        43837432
      ],
      "score": 61,
      "time": 1745932144,
      "title": "AirBorne: Wormable zero-click remote code execution (RCE) in AirPlay protocol",
      "type": "story",
      "url": "https://www.oligo.security/blog/airborne"
    },
    {
      "by": "Ch00k",
      "descendants": 402,
      "id": 43829490,
      "kids": [
        43832291,
        43839585,
        43829748,
        43829733,
        43832543,
        43834530,
        43833813,
        43835064,
        43834206,
        43829833,
        43836703,
        43829897,
        43829779,
        43831985,
        43834911,
        43829568,
        43829629,
        43830101,
        43836781,
        43829704,
        43838785,
        43829881,
        43830537,
        43836830,
        43830816,
        43833774,
        43832148,
        43834436,
        43829676,
        43832913,
        43829580,
        43829743,
        43830319,
        43834868,
        43832053,
        43829795,
        43829883,
        43838183,
        43835840,
        43832405,
        43834676,
        43835645,
        43829715,
        43833778,
        43834286,
        43836727,
        43832498,
        43831939,
        43834867,
        43834281,
        43834241,
        43839719,
        43832718,
        43833816,
        43834591,
        43829825,
        43830313,
        43832583,
        43834314,
        43830064,
        43830496,
        43838218,
        43834289,
        43832487,
        43833253,
        43834086,
        43838912,
        43833138,
        43836565,
        43834358,
        43835339,
        43829651,
        43829831,
        43838073,
        43834250,
        43834215,
        43830316,
        43832102,
        43835198,
        43829739,
        43829769,
        43829655,
        43834382,
        43832699
      ],
      "score": 591,
      "time": 1745910530,
      "title": "Try Switching to Kagi",
      "type": "story",
      "url": "https://daringfireball.net/2025/04/try_switching_to_kagi"
    },
    {
      "by": "shadygm",
      "descendants": 13,
      "id": 43831363,
      "kids": [
        43832892,
        43839312,
        43833534,
        43834188
      ],
      "score": 51,
      "time": 1745927837,
      "title": "Gaussian Splatting Meets ROS2",
      "type": "story",
      "url": "https://github.com/shadygm/ROSplat"
    },
    {
      "by": "donohoe",
      "descendants": 67,
      "id": 43827978,
      "kids": [
        43828316,
        43838744,
        43828434,
        43831497,
        43837347,
        43838777,
        43828395,
        43829633,
        43838765,
        43829562,
        43839261,
        43837859,
        43828561,
        43828063,
        43828071,
        43838976
      ],
      "score": 113,
      "time": 1745891189,
      "title": "Duolingo will replace contract workers with AI",
      "type": "story",
      "url": "https://www.theverge.com/news/657594/duolingo-ai-first-replace-contract-workers"
    },
    {
      "by": "austinallegro",
      "descendants": 17,
      "id": 43786987,
      "kids": [
        43837914,
        43788954,
        43788115,
        43787934,
        43788329,
        43787428
      ],
      "score": 60,
      "time": 1745525479,
      "title": "What happens at the end of 'Trading Places'? (2013)",
      "type": "story",
      "url": "https://www.npr.org/sections/money/2013/07/19/201430727/what-actually-happens-at-the-end-of-trading-places"
    },
    {
      "by": "buzzmerchant",
      "descendants": 30,
      "id": 43830544,
      "kids": [
        43834545,
        43830545,
        43834391,
        43836997,
        43834858,
        43837094,
        43837392,
        43835181,
        43836066,
        43838565,
        43838465,
        43835986,
        43834192,
        43835594,
        43838969,
        43833409,
        43834739
      ],
      "score": 134,
      "time": 1745920744,
      "title": "How to build Intrinsic Motivation: a review of the science",
      "type": "story",
      "url": "https://erringtowardsanswers.substack.com/p/intrinsic-motivation"
    },
    {
      "by": "droptext",
      "descendants": 1,
      "id": 43837171,
      "kids": [
        43839535
      ],
      "score": 7,
      "time": 1745955948,
      "title": "Researchers are studying how to minimize human impact on public lands",
      "type": "story",
      "url": "https://undark.org/2025/04/28/keep-wild-places-wild/"
    },
    {
      "by": "hoffmannesque",
      "descendants": 0,
      "id": 43837152,
      "score": 5,
      "time": 1745955863,
      "title": "Non-Linear Ethnic Niches",
      "type": "story",
      "url": "https://www.aporiamagazine.com/p/non-linear-ethnic-niches"
    },
    {
      "by": "samaysharma",
      "descendants": 3,
      "id": 43835623,
      "kids": [
        43838860,
        43837549,
        43838288
      ],
      "score": 15,
      "time": 1745948148,
      "title": "Beyond Performance: Measuring the environmental impact of analytical databases",
      "type": "story",
      "url": "https://arxiv.org/abs/2504.18980"
    },
    {
      "by": "synthwave",
      "descendants": 375,
      "id": 43825900,
      "kids": [
        43827253,
        43826062,
        43828732,
        43826519,
        43826532,
        43834427,
        43827718,
        43827538,
        43826352,
        43826988,
        43826282,
        43826223,
        43826247,
        43828663,
        43830013,
        43826309,
        43827317,
        43829247,
        43827067,
        43828026,
        43826331,
        43828282,
        43836288,
        43829764,
        43832182,
        43827359,
        43826563,
        43831520,
        43826590,
        43829136,
        43831453,
        43828187,
        43827703,
        43827864,
        43826216,
        43826539,
        43826547,
        43833351,
        43826124,
        43826851,
        43829617,
        43828148,
        43830262,
        43828352,
        43826655,
        43828774,
        43828156,
        43827499,
        43826343,
        43826679,
        43826404,
        43826333,
        43829033,
        43828450,
        43826654,
        43826438,
        43829855,
        43826800,
        43828062
      ],
      "score": 821,
      "time": 1745873065,
      "title": "Qwen3: Think deeper, act faster",
      "type": "story",
      "url": "https://qwenlm.github.io/blog/qwen3/"
    },
    {
      "by": "david927",
      "descendants": 1125,
      "id": 43815523,
      "kids": [
        43840110,
        43840056,
        43819676,
        43822853,
        43821480,
        43833585,
        43815778,
        43821341,
        43829784,
        43819357,
        43818076,
        43831695,
        43817944,
        43822671,
        43840101,
        43836304,
        43817668,
        43818717,
        43838429,
        43818532,
        43818286,
        43833568,
        43819142,
        43832418,
        43822955,
        43820276,
        43821301,
        43821457,
        43821274,
        43822369,
        43817798,
        43829481,
        43826865,
        43834525,
        43820553,
        43826720,
        43821967,
        43827754,
        43836166,
        43825759,
        43826371,
        43836556,
        43818440,
        43836848,
        43819542,
        43819848,
        43822449,
        43816356,
        43823305,
        43819783,
        43819171,
        43818126,
        43835020,
        43822643,
        43818159,
        43821616,
        43821240,
        43820516,
        43833786,
        43819407,
        43820088,
        43823603,
        43836388,
        43825333,
        43820392,
        43834601,
        43819099,
        43817600,
        43836555,
        43827516,
        43826623,
        43825619,
        43827252,
        43823032,
        43829791,
        43836372,
        43837934,
        43819958,
        43823348,
        43824553,
        43819510,
        43838554,
        43830441,
        43818754,
        43818961,
        43830268,
        43822705,
        43822452,
        43826507,
        43817691,
        43838246,
        43823189,
        43815958,
        43821336,
        43819331,
        43817880,
        43820470,
        43821191,
        43821327,
        43827256,
        43819819,
        43818137,
        43825482,
        43830626,
        43816875,
        43832923,
        43828920,
        43818393,
        43830495,
        43822156,
        43826502,
        43832359,
        43821199,
        43837540,
        43836001,
        43821838,
        43824189,
        43819526,
        43833776,
        43828804,
        43822551,
        43822993,
        43821294,
        43823703,
        43816048,
        43838485,
        43831903,
        43825275,
        43818339,
        43824708,
        43832813,
        43835137,
        43830191,
        43820419,
        43821424,
        43823472,
        43819458,
        43818760,
        43827404,
        43824206,
        43818342,
        43828768,
        43815813,
        43826208,
        43819449,
        43829364,
        43831139,
        43833452,
        43815553,
        43821357,
        43817046,
        43822865,
        43815934,
        43817858,
        43826466,
        43819978,
        43829890,
        43817905,
        43824827,
        43822695,
        43838379,
        43818652,
        43828090,
        43831802,
        43828826,
        43819852,
        43815856,
        43822062,
        43833804,
        43833387,
        43817998,
        43832705,
        43826902,
        43818798,
        43831183,
        43827484,
        43828851,
        43828439,
        43816064,
        43815584,
        43818612,
        43821870,
        43822266,
        43815847,
        43826445,
        43817851,
        43830217,
        43822887,
        43836011,
        43823083,
        43826141,
        43833426,
        43819779,
        43832535,
        43818570,
        43817917,
        43827201,
        43828525,
        43830686,
        43818971,
        43822584,
        43825405,
        43823588,
        43820479,
        43830418,
        43831138,
        43818523,
        43819744,
        43823793,
        43824092,
        43825983,
        43824537,
        43822664,
        43825028,
        43822721,
        43816959,
        43819107,
        43819037,
        43826738,
        43817659,
        43826296,
        43822197,
        43826154,
        43828896,
        43822694,
        43829289,
        43818254,
        43828853,
        43828449,
        43823090,
        43818600,
        43822787,
        43826633,
        43818976,
        43818575,
        43820265,
        43818968,
        43822882,
        43821636,
        43822981,
        43824776,
        43827803,
        43820310,
        43823835,
        43819636,
        43821476,
        43819827,
        43822224,
        43826909,
        43823338,
        43826594,
        43821724,
        43820911,
        43818547,
        43827158,
        43830805,
        43828720,
        43826332,
        43821047,
        43821908,
        43817956,
        43821593,
        43819428,
        43820999,
        43829044,
        43820969,
        43818445,
        43826842,
        43828749,
        43821510,
        43827267,
        43819440,
        43820292,
        43831593,
        43822362,
        43815966,
        43822805,
        43818998,
        43815569,
        43820501,
        43835103,
        43822908,
        43823657,
        43818439,
        43837588,
        43822195,
        43819939,
        43826432,
        43826479,
        43827492,
        43823601,
        43826538,
        43823016,
        43821723,
        43829115,
        43821558,
        43820998,
        43823306,
        43823007,
        43818184,
        43823520,
        43818990,
        43822426,
        43820348,
        43816072,
        43825933,
        43827508,
        43817713,
        43817962,
        43820482,
        43818390,
        43826287,
        43821816,
        43818809,
        43815882,
        43828368,
        43819034,
        43818166,
        43828167,
        43824051,
        43828891,
        43829507,
        43821750,
        43820451,
        43826710,
        43830548,
        43827103,
        43821860,
        43818344,
        43822904,
        43821555,
        43816262,
        43818747,
        43823108,
        43828989,
        43817654,
        43826829,
        43827332,
        43817695,
        43824817,
        43817625,
        43828936,
        43821580,
        43819638,
        43823269,
        43822728,
        43820132,
        43833845,
        43822131,
        43818188,
        43821225,
        43818727,
        43817738,
        43822056,
        43818351,
        43818597,
        43816017,
        43827203,
        43818587,
        43816304,
        43816296,
        43819584,
        43819677,
        43821062,
        43830047,
        43819727,
        43816334,
        43826311,
        43820519,
        43822583,
        43825926,
        43818537,
        43830131,
        43818936,
        43815862,
        43824060,
        43817721,
        43824653,
        43821583,
        43822773,
        43829823,
        43823814,
        43824260,
        43816065,
        43820940,
        43826337,
        43815838,
        43824528,
        43816226,
        43824511,
        43819422,
        43820045,
        43816316,
        43818298,
        43820014,
        43818873,
        43832167,
        43819778,
        43816440,
        43821037,
        43822021,
        43818592,
        43827548,
        43817771,
        43817941,
        43819276,
        43822540,
        43823075,
        43816223,
        43823743,
        43819286,
        43820157,
        43823884,
        43835001,
        43818686,
        43819379,
        43819711,
        43819356,
        43826959,
        43823117,
        43821813,
        43819890,
        43822403,
        43819932,
        43828724,
        43816256,
        43819176,
        43826475,
        43825911,
        43818898,
        43816280,
        43824764,
        43819160,
        43819196,
        43819272,
        43818134,
        43818368,
        43826221,
        43816278,
        43823208,
        43823071,
        43821968,
        43817813,
        43821542,
        43827210,
        43821934,
        43819621,
        43823099,
        43819738,
        43817981,
        43817397,
        43821314,
        43818161,
        43818663,
        43824624,
        43824725,
        43819630,
        43821938,
        43818045,
        43819238,
        43824052,
        43822052,
        43818420,
        43823038,
        43820172,
        43823214,
        43819005,
        43816215,
        43823384,
        43832354,
        43819946,
        43818741,
        43816115,
        43822890,
        43817618,
        43825625,
        43819754,
        43816113,
        43819572,
        43817741,
        43818737,
        43820656,
        43826546,
        43818467,
        43820197,
        43827965,
        43818708,
        43819773,
        43815807,
        43819594,
        43824357,
        43836899,
        43817612,
        43822637,
        43821949,
        43818516,
        43819150,
        43819970,
        43818198,
        43818903,
        43816332,
        43827534,
        43817804,
        43826835,
        43821184,
        43821181,
        43818377,
        43821581,
        43821861,
        43824979,
        43818452,
        43820358,
        43828191,
        43817993,
        43819315,
        43817969,
        43818833,
        43820537,
        43818909,
        43829055,
        43823132,
        43836075,
        43818638,
        43818396,
        43823490,
        43835982,
        43818062,
        43818092,
        43817628,
        43819359,
        43823355,
        43815607,
        43818451,
        43819837,
        43824328,
        43815752,
        43817582,
        43824040,
        43818734,
        43816233,
        43819479,
        43815795,
        43819192,
        43823278,
        43829328,
        43826847,
        43820391,
        43816076,
        43822294,
        43816679,
        43818944,
        43818219,
        43817733,
        43817791,
        43821649,
        43817948,
        43836007,
        43830696,
        43821966,
        43828652,
        43817891,
        43823592,
        43819586,
        43817743,
        43829355,
        43818349,
        43818405,
        43818732,
        43817988,
        43817723,
        43819736,
        43825031,
        43818030,
        43825508,
        43818099,
        43822364,
        43830513,
        43824261,
        43823547,
        43818507,
        43822736,
        43836185,
        43822039,
        43821465,
        43821362,
        43819944,
        43819602,
        43817924,
        43815776,
        43816306,
        43818790,
        43818528,
        43824360,
        43821754,
        43821897,
        43819486,
        43826118,
        43831818,
        43820446,
        43826130,
        43825186,
        43821255,
        43827419,
        43823655,
        43821737,
        43818490,
        43816267,
        43816343
      ],
      "score": 375,
      "text": "What are you working on? Any new ideas that you&#x27;re thinking about?",
      "time": 1745791701,
      "title": "Ask HN: What are you working on? (April 2025)",
      "type": "story"
    },
    {
      "by": "pseudolus",
      "descendants": 458,
      "id": 43830613,
      "kids": [
        43831659,
        43830956,
        43833964,
        43833261,
        43834372,
        43832618,
        43831046,
        43830883,
        43831567,
        43836716,
        43832462,
        43830872,
        43830920,
        43830896,
        43830970,
        43830859,
        43830814,
        43836983,
        43835745,
        43836218,
        43832171,
        43835302,
        43833851,
        43831209,
        43831980,
        43834635,
        43834451,
        43831484,
        43832494,
        43836819,
        43831807,
        43830997,
        43830871,
        43832688,
        43835345,
        43834124,
        43833219,
        43834552,
        43831755,
        43832028,
        43835923,
        43831797,
        43833760,
        43834223,
        43832867,
        43832963,
        43836679,
        43832701,
        43835196,
        43834708,
        43835790,
        43833692,
        43836271,
        43839072,
        43835331,
        43832175,
        43833736,
        43833824,
        43832364,
        43832891,
        43831000,
        43831913,
        43835538,
        43835512,
        43834638,
        43831892,
        43833151,
        43836750,
        43830866,
        43835333,
        43834503,
        43834174,
        43833936,
        43833898,
        43833788,
        43831935,
        43831784,
        43831716,
        43832106,
        43834117,
        43835916,
        43831301,
        43831194,
        43831974,
        43833866,
        43832327,
        43836999,
        43830862,
        43831529
      ],
      "score": 312,
      "time": 1745921289,
      "title": "Generative AI is not replacing jobs or hurting wages at all, say economists",
      "type": "story",
      "url": "https://www.theregister.com/2025/04/29/generative_ai_no_effect_jobs_wages/"
    },
    {
      "by": "todsacerdoti",
      "descendants": 0,
      "id": 43838031,
      "score": 3,
      "time": 1745960696,
      "title": "Comparison with Traditional Mathematics",
      "type": "story",
      "url": "https://aplwiki.com/wiki/Comparison_with_traditional_mathematics"
    },
    {
      "by": "lleims",
      "descendants": 1133,
      "id": 43819791,
      "kids": [
        43820964,
        43820721,
        43820748,
        43823722,
        43820092,
        43824775,
        43820491,
        43824369,
        43826769,
        43820442,
        43820080,
        43820561,
        43819910,
        43820127,
        43822740,
        43819921,
        43819989,
        43827285,
        43820281,
        43820750,
        43821406,
        43822649,
        43821506,
        43820329,
        43820052,
        43819949,
        43820250,
        43820083,
        43824720,
        43822542,
        43819988,
        43833730,
        43820254,
        43830525,
        43819968,
        43830764,
        43821197,
        43820697,
        43821514,
        43829215,
        43830382,
        43820938,
        43820955,
        43826038,
        43824637,
        43820231,
        43821900,
        43823260,
        43820576,
        43821130,
        43820858,
        43820383,
        43819934,
        43827879,
        43820274,
        43820191,
        43833934,
        43827132,
        43825961,
        43829520,
        43820139,
        43820198,
        43820033,
        43820019,
        43820343,
        43830790,
        43820071,
        43821867,
        43819959,
        43820443,
        43820252,
        43819906,
        43821415,
        43823302,
        43829315,
        43826340,
        43820171,
        43820424,
        43819844,
        43821161,
        43820701,
        43820436,
        43820215,
        43820002,
        43820235,
        43826120,
        43827558,
        43819859,
        43827456,
        43830592,
        43819892,
        43819996,
        43820084,
        43829127,
        43823419,
        43819814,
        43821377,
        43820251,
        43823542,
        43822229,
        43820694,
        43820583,
        43820454,
        43834779,
        43828189,
        43820230,
        43820136,
        43819904,
        43823894,
        43820093,
        43827165,
        43819960,
        43820357,
        43827170,
        43820064,
        43821563,
        43819806,
        43828385,
        43820649,
        43820100,
        43820321,
        43820988,
        43826303,
        43826162
      ],
      "score": 1510,
      "text": "All of Spain is without energy. All systems have shut down immediately and are not coming back. Apparently the same has happened in Portugal.",
      "time": 1745837458,
      "title": "Widespread power outage in Spain and Portugal",
      "type": "story",
      "url": "https://www.bbc.com/news/live/c9wpq8xrvd9t"
    },
    {
      "by": "amichail",
      "descendants": 129,
      "id": 43831142,
      "kids": [
        43834259,
        43833122,
        43835027,
        43831689,
        43833316,
        43834274,
        43831788,
        43831660,
        43833903,
        43832660,
        43836257,
        43833723,
        43834397,
        43831718,
        43832310
      ],
      "score": 222,
      "time": 1745926503,
      "title": "Heart disease deaths worldwide linked to chemical widely used in plastics",
      "type": "story",
      "url": "https://medicalxpress.com/news/2025-04-heart-disease-deaths-worldwide-linked.html"
    },
    {
      "by": "felineflock",
      "descendants": 0,
      "id": 43839380,
      "score": 6,
      "time": 1745969964,
      "title": "The Death of Affordable Computing: Tariffs Impact and Investigation [video]",
      "type": "story",
      "url": "https://www.youtube.com/watch?v=1W_mSOS1Qts"
    },
    {
      "by": "leeab",
      "descendants": 17,
      "id": 43835948,
      "kids": [
        43835949,
        43839268,
        43837826,
        43837026,
        43836824,
        43837654,
        43836236,
        43837798
      ],
      "score": 22,
      "time": 1745949723,
      "title": "Show HN: Neurox – GPU Observability for AI Infra",
      "type": "story",
      "url": "https://github.com/neuroxhq/helm-chart-neurox-control"
    },
    {
      "by": "simonebrunozzi",
      "descendants": 2,
      "id": 43838048,
      "kids": [
        43838652
      ],
      "score": 22,
      "time": 1745960833,
      "title": "Wikipedia's LTA (Long Term Abuse) List",
      "type": "story",
      "url": "https://en.wikipedia.org/wiki/Wikipedia:Long-term_abuse"
    },
    {
      "by": "benwhittle",
      "descendants": 1,
      "id": 43839030,
      "kids": [
        43839095
      ],
      "score": 6,
      "time": 1745967319,
      "title": "The worst volume control UI in the world (2017)",
      "type": "story",
      "url": "https://uxdesign.cc/the-worst-volume-control-ui-in-the-world-60713dc86950"
    },
    {
      "by": "craig552uk",
      "descendants": 103,
      "id": 43814724,
      "kids": [
        43817213,
        43838723,
        43839399,
        43839019,
        43838823,
        43838958,
        43838575,
        43839055,
        43838664,
        43819611,
        43839720,
        43838653,
        43839168,
        43838642,
        43814757,
        43839096,
        43838991,
        43839004,
        43838709,
        43838722,
        43839527,
        43838620,
        43839528,
        43839032,
        43839068,
        43817019,
        43838514,
        43838893
      ],
      "score": 80,
      "time": 1745784676,
      "title": "We need more optimistic science fiction",
      "type": "story",
      "url": "https://craig-russell.co.uk/blog/2024-10-24-optimistic-sci-fi/"
    },
    {
      "by": "lordfuckleroy",
      "descendants": 368,
      "id": 43829006,
      "kids": [
        43832992,
        43829339,
        43832343,
        43829191,
        43832290,
        43834011,
        43829204,
        43829183,
        43832399,
        43832927,
        43829209,
        43833404,
        43829185,
        43833691,
        43831977,
        43829332,
        43830598,
        43829213,
        43834347,
        43837141,
        43829244,
        43832128,
        43834238,
        43834617,
        43829148,
        43830393,
        43835122,
        43834065,
        43829951,
        43829199,
        43833822,
        43837995,
        43829243,
        43830365,
        43829248,
        43833271,
        43834632,
        43835457,
        43837677,
        43833695,
        43832924,
        43833645,
        43832176,
        43834203,
        43836195,
        43834989,
        43834659,
        43829309,
        43829326,
        43829538,
        43836055,
        43832902,
        43832255,
        43834202,
        43834432,
        43834298,
        43829181,
        43832685,
        43829290,
        43829264,
        43838375,
        43835385,
        43834305,
        43835201,
        43832882,
        43829686,
        43829325,
        43834002,
        43829190,
        43829272,
        43838804,
        43832315,
        43829189,
        43836021,
        43829574,
        43829330,
        43829140,
        43838654,
        43834710,
        43835679,
        43829164,
        43832575
      ],
      "score": 290,
      "time": 1745905235,
      "title": "A single line of code cost $8000",
      "type": "story",
      "url": "https://pietrasiak.com/one-line-of-code-that-did-cost-dollar8000"
    },
    {
      "by": "waleedlatif1",
      "descendants": 53,
      "id": 43823096,
      "kids": [
        43839678,
        43824195,
        43824536,
        43824178,
        43823787,
        43828303,
        43825525,
        43825193,
        43823619,
        43826112,
        43826279,
        43829584,
        43825456,
        43825503,
        43828574,
        43826981,
        43825566,
        43823799,
        43823372,
        43823504,
        43824546
      ],
      "score": 178,
      "text": "Hi HN! We&#x27;re Emir and Waleed, and we&#x27;re building Sim Studio (<a href=\"https:&#x2F;&#x2F;simstudio.ai\" rel=\"nofollow\">https:&#x2F;&#x2F;simstudio.ai</a>), an open-source drag and drop UI for building and managing multi-agent workflows as a directed graph. You can define how agents interact with each other, use tools, and handle complex logic like branching, loops, transformations, and conditional execution.<p>Our repo is <a href=\"https:&#x2F;&#x2F;github.com&#x2F;simstudioai&#x2F;sim\">https:&#x2F;&#x2F;github.com&#x2F;simstudioai&#x2F;sim</a>, docs are at <a href=\"https:&#x2F;&#x2F;docs.simstudio.ai&#x2F;introduction\" rel=\"nofollow\">https:&#x2F;&#x2F;docs.simstudio.ai&#x2F;introduction</a>, and we have a demo here: <a href=\"https:&#x2F;&#x2F;youtu.be&#x2F;JlCktXTY8sE?si=uBAf0x-EKxZmT9w4\" rel=\"nofollow\">https:&#x2F;&#x2F;youtu.be&#x2F;JlCktXTY8sE?si=uBAf0x-EKxZmT9w4</a><p>Building reliable, multi-step agent systems with current frameworks often gets complicated fast. In OpenAI&#x27;s &#x27;practical guide to building agents&#x27;, they claim that the non-declarative approach and single multi-step agents are the best path forward, but from experience and experimentation, we disagree. Debugging these implicit flows across multiple agent calls and tool uses is painful, and iterating on the logic or prompts becomes slow.<p>We built Sim Studio because we believe defining the workflow explicitly and visually is the key to building more reliable and maintainable agentic applications. In Sim Studio, you design the entire architecture, comprising of agent blocks that have system prompts, a variety of models (hosted and local via ollama), tools with granular tool use control, and structured output.<p>We have plenty of pre-built integrations that you can use as standalone blocks or as tools for your agents. The nodes are all connected with if&#x2F;else conditional blocks, llm-based routing, loops, and branching logic for specialized agents.<p>Also, the visual graph isn&#x27;t just for prototyping and <i>is</i> actually executable. You can run simulations of the workflows 1, 10, 100 times to see how modifying any small system prompt change, underlying model, or tool call change change impacts the overall performance of the workflow.<p>You can trigger the workflows manually, deploy as an API and interact via HTTP, or schedule the workflows to run periodically. They can also be set up to trigger on incoming webhooks and deployed as standalone chat instances that can be password or domain-protected.<p>We have granular trace spans, logs, and observability built-in so you can easily compare and contrast performance across different model providers and tools. All of these things enable a tighter feedback loop and significantly faster iteration.<p>So far, users have built deep research agents to detect application fraud, chatbots to interface with their internal HR documentation, and agents to automate communication between manufacturing facilities.<p>Sim Studio is Apache 2.0 licensed, and fully open source.<p>We&#x27;re excited about bringing a visual, workflow-centric approach to agent development. We think it makes building robust, complex agentic workflows far more accessible and reliable. We&#x27;d love to hear the HN community&#x27;s thoughts!",
      "time": 1745856871,
      "title": "Show HN: Sim Studio – Open-Source Agent Workflow GUI",
      "type": "story",
      "url": "https://github.com/simstudioai/sim"
    },
    {
      "by": "muglug",
      "descendants": 66,
      "id": 43831524,
      "kids": [
        43836164,
        43833836,
        43833950,
        43838937,
        43834134,
        43834362,
        43833720,
        43831525,
        43833578
      ],
      "score": 118,
      "time": 1745928811,
      "title": "Pyrefly - A faster Python type checker written in Rust",
      "type": "story",
      "url": "https://pyrefly.org/"
    },
    {
      "by": "hwpythonner",
      "descendants": 256,
      "id": 43820228,
      "kids": [
        43827618,
        43821125,
        43820229,
        43827650,
        43822160,
        43820932,
        43826815,
        43820794,
        43823128,
        43820816,
        43821572,
        43820966,
        43824257,
        43822848,
        43821523,
        43821238,
        43820973,
        43829701,
        43824434,
        43820956,
        43830746,
        43823304,
        43822060,
        43820802,
        43821655,
        43822883,
        43823939,
        43821770,
        43820812,
        43823646,
        43825519,
        43823538,
        43821339,
        43827686,
        43823407,
        43821022,
        43822330,
        43823346,
        43823925,
        43824593,
        43822685,
        43820817,
        43820621,
        43823682,
        43836554,
        43827280,
        43831739,
        43820933,
        43823471,
        43825080,
        43828533,
        43823093,
        43822991,
        43824936,
        43822447,
        43821179,
        43820928,
        43824465,
        43821155,
        43822434,
        43825894,
        43824743,
        43822355,
        43823539,
        43823135,
        43823078,
        43822845,
        43821247,
        43821174,
        43820245,
        43834761,
        43821166
      ],
      "score": 955,
      "text": "Hi everyone,\nI built PyXL — a hardware processor that executes a custom assembly generated from Python programs, without using a traditional interpreter or virtual machine. It compiles Python -&gt; CPython Bytecode -&gt; Instruction set designed for direct hardware execution.<p>I’m sharing an early benchmark: a GPIO test where PyXL achieves a 480ns round-trip toggle — compared to 14-25 micro seconds on a MicroPython Pyboard - even though PyXL runs at a lower clock (100MHz vs. 168MHz).<p>The design is stack-based, fully pipelined, and preserves Python&#x27;s dynamic typing without static type restrictions.\nI independently developed the full stack — toolchain (compiler, linker, codegen), and hardware — to validate the core idea. Full technical details will be presented at PyCon 2025.<p>Demo and explanation here: <a href=\"https:&#x2F;&#x2F;runpyxl.com&#x2F;gpio\" rel=\"nofollow\">https:&#x2F;&#x2F;runpyxl.com&#x2F;gpio</a>\nHappy to answer any questions",
      "time": 1745840694,
      "title": "Show HN: I built a hardware processor that runs Python",
      "type": "story",
      "url": "https://www.runpyxl.com/gpio"
    },
    {
      "by": "zdw",
      "descendants": 272,
      "id": 43827214,
      "kids": [
        43829160,
        43828657,
        43828396,
        43828193,
        43833860,
        43829531,
        43828470,
        43832455,
        43828459,
        43829719,
        43828108,
        43832664,
        43828384,
        43836826,
        43831226,
        43828740,
        43830144,
        43829540,
        43829022,
        43830399,
        43829575,
        43835547,
        43833628,
        43829852,
        43828502,
        43834856,
        43830266,
        43830803,
        43828324,
        43828467
      ],
      "score": 480,
      "time": 1745882831,
      "title": "Why did Windows 7 log on slower for months if you had a solid color background?",
      "type": "story",
      "url": "https://devblogs.microsoft.com/oldnewthing/20250428-00/?p=111121"
    },
    {
      "by": "friggeri",
      "descendants": 100,
      "id": 43833783,
      "kids": [
        43834482,
        43834050,
        43834172,
        43834185,
        43838791,
        43834292,
        43835595,
        43836005,
        43833927,
        43833923,
        43834490,
        43836453,
        43833974,
        43834423,
        43835577,
        43836804,
        43834079,
        43834004,
        43833994,
        43834092,
        43834166
      ],
      "score": 90,
      "time": 1745939607,
      "title": "Meta AI App built with Llama 4",
      "type": "story",
      "url": "https://about.fb.com/news/2025/04/introducing-meta-ai-app-new-way-access-ai-assistant/"
    },
    {
      "by": "YoctoYARN",
      "descendants": 33,
      "id": 43828131,
      "kids": [
        43830317,
        43832811,
        43831171,
        43832931,
        43837715
      ],
      "score": 91,
      "time": 1745892987,
      "title": "Manuscript of Ismail al-Jazarī's Ingenious Mechanical Devices (ca. 17th century)",
      "type": "story",
      "url": "https://publicdomainreview.org/collection/arabic-machine-manuscript/"
    },
    {
      "by": "WalterGR",
      "descendants": 44,
      "id": 43831602,
      "kids": [
        43833201,
        43832294,
        43833203,
        43836544,
        43836948,
        43832737,
        43833063,
        43834058,
        43835524,
        43834441,
        43833812,
        43835061
      ],
      "score": 121,
      "time": 1745929210,
      "title": "After 53 years, a failed Soviet Venus spacecraft is crashing back to Earth",
      "type": "story",
      "url": "https://gizmodo.com/after-53-years-a-failed-soviet-venus-spacecraft-is-crashing-back-to-earth-2000595234"
    },
    {
      "by": "PaulHoule",
      "descendants": 46,
      "id": 43832765,
      "kids": [
        43834536,
        43833745,
        43833693,
        43833288,
        43834383,
        43834827
      ],
      "score": 79,
      "time": 1745935258,
      "title": "One-sixth of the planet's cropland has toxic levels of one or more metals",
      "type": "story",
      "url": "https://english.elpais.com/science-tech/2025-04-17/one-sixth-of-the-planets-cropland-has-toxic-levels-of-one-or-more-metals.html"
    },
    {
      "by": "rntn",
      "descendants": 4,
      "id": 43833289,
      "kids": [
        43837354,
        43837840,
        43839838,
        43837125
      ],
      "score": 69,
      "time": 1745937431,
      "title": "Chris Krebs Support Letter",
      "type": "story",
      "url": "https://www.eff.org/document/chris-krebs-support-letter-april-28-2025"
    },
    {
      "by": "frans",
      "descendants": 150,
      "id": 43826584,
      "kids": [
        43829857,
        43829982,
        43828483,
        43828616,
        43829056,
        43837732,
        43833686,
        43828042,
        43836305,
        43829664,
        43832095,
        43827326,
        43829108,
        43828823,
        43830000,
        43830588,
        43832019,
        43830584,
        43829003,
        43827977,
        43827717,
        43831327,
        43828345,
        43828007,
        43829048
      ],
      "score": 369,
      "time": 1745877532,
      "title": "The One-Person Framework in Practice",
      "type": "story",
      "url": "https://link.mail.beehiiv.com/ss/c/u001.5SRwDQ9qxPQW8vmD5Do73b3R4eTCi2vXqPyztEk6wMFC9_fqEAcDVx6xEJ96T4BSMXrPS7z5exEBSTF4pF48z8SqJkJnkAwMUW9LtYdd8lWmvkDinT92nsk5HmXOHdWgLsysm9FMGrqmu7dnG57cXpga8ZOe8X0IV8pyeC3AswdRMaitfT307y7naP-_6W5CiolKhXCKrEndMGCW2PftFUu9ieYOxpVJ_fhu82gAh-4/4g1/wA_MG-I5SVCyR3KY66oEaQ/h30/h001.kLDFZMgisudi21zmTPbd_O8U7X98d4UxYqZjQTb_D7o"
    },
    {
      "by": "veqq",
      "descendants": 34,
      "id": 43828096,
      "kids": [
        43829443,
        43838193,
        43833584,
        43828858,
        43832425,
        43829251,
        43829200,
        43829780,
        43829455,
        43829422,
        43829236,
        43828110
      ],
      "score": 59,
      "time": 1745892568,
      "title": "Greek Particles (1990)",
      "type": "story",
      "url": "https://specgram.com/Babel.I.2/07.sriyatha.greek.html"
    },
    {
      "by": "tobias5",
      "descendants": 80,
      "id": 43824583,
      "kids": [
        43839740,
        43829749,
        43827482,
        43829658,
        43824730,
        43826000,
        43826372,
        43833147,
        43831148,
        43831279,
        43828666,
        43826866,
        43830290,
        43830293,
        43827390,
        43827637,
        43826107,
        43827712,
        43826238,
        43825618,
        43826070,
        43824769,
        43826217,
        43826990,
        43830829,
        43829450,
        43824584,
        43825805
      ],
      "score": 93,
      "text": "I built this iOS app because I wanted to get an overview of my time in zones per week without checking zones after every workout manually - Now I&#x27;m looking for feedback.<p>Description: Track time in heart rate zones. Track per day, week, month, 7 days and 30 days time period and how much time you spend in each zone. Set goals &amp; visualize progress. Get details about heart rates zones of your workouts.<p>Features: Custom time periods, Workout to zone attribution to get a feeling which sport attributed most to each zone, Multiple zone calculation methods, Set personal time goals for any zone, Workout breakdown<p>Pricing: Free<p>Privacy: Nothing is tracked or send somewhere. Data is just on your device.<p>Any feedback and features request is appreciated.<p>Download: <a href=\"https:&#x2F;&#x2F;apps.apple.com&#x2F;us&#x2F;app&#x2F;heart-rate-zones-plus&#x2F;id6744743232\">https:&#x2F;&#x2F;apps.apple.com&#x2F;us&#x2F;app&#x2F;heart-rate-zones-plus&#x2F;id674474...</a><p>Video of the app in action: <a href=\"https:&#x2F;&#x2F;www.youtube.com&#x2F;shorts&#x2F;-qtHxEdMEv0\" rel=\"nofollow\">https:&#x2F;&#x2F;www.youtube.com&#x2F;shorts&#x2F;-qtHxEdMEv0</a>",
      "time": 1745865738,
      "title": "Show HN: Heart Rate Zones Plus – The first iOS app I developed",
      "type": "story",
      "url": "https://apps.apple.com/us/app/heart-rate-zones-plus/id6744743232"
    },
    {
      "by": "kugurerdem",
      "descendants": 116,
      "id": 43836619,
      "kids": [
        43837076,
        43837253,
        43837191,
        43837203,
        43837205,
        43837147,
        43837328,
        43837440,
        43837694,
        43837303,
        43838266,
        43837531,
        43837301,
        43837104,
        43837564,
        43837324,
        43837424,
        43837454,
        43837449,
        43837612,
        43837201,
        43837321,
        43837098,
        43838605,
        43837430,
        43837442,
        43837183,
        43837137,
        43837208,
        43837379,
        43837319,
        43837412,
        43837129
      ],
      "score": 142,
      "time": 1745953074,
      "title": "I can't pay rent because devs just don't care",
      "type": "story",
      "url": "https://happyfellow.bearblog.dev/i-cant-pay-rent-because-devs-just-dont-care/"
    },
    {
      "by": "latchkey",
      "descendants": 2,
      "id": 43829046,
      "kids": [
        43832181
      ],
      "score": 31,
      "time": 1745905624,
      "title": "Implement Flash Attention Back End in SGLang – Basics and KV Cache",
      "type": "story",
      "url": "https://hebiao064.github.io/fa3-attn-backend-basic"
    },
    {
      "by": "carrotsalad",
      "descendants": 9,
      "id": 43836829,
      "kids": [
        43838147,
        43839203,
        43839485,
        43839587,
        43838606,
        43839641
      ],
      "score": 37,
      "time": 1745954226,
      "title": "Is Chrome Even a Sellable Asset?",
      "type": "story",
      "url": "https://daringfireball.net/2025/04/is_chrome_even_a_sellable_asset"
    },
    {
      "by": "belter",
      "descendants": 54,
      "id": 43831708,
      "kids": [
        43832213,
        43833470,
        43832920,
        43833410,
        43832747,
        43838997,
        43835113,
        43832410,
        43831925,
        43836370,
        43833509,
        43834327
      ],
      "score": 99,
      "time": 1745929800,
      "title": "What Is \"Induced Atmospheric Vibration\"?",
      "type": "story",
      "url": "https://physics.stackexchange.com/questions/848666/what-is-induced-atmospheric-vibration"
    },
    {
      "by": "SCUSKU",
      "descendants": 102,
      "id": 43814716,
      "kids": [
        43837760,
        43827062,
        43826315,
        43827234,
        43826749,
        43827085,
        43826641,
        43814775
      ],
      "score": 105,
      "time": 1745784548,
      "title": "My takeaways from DjangoCon EU 2025",
      "type": "story",
      "url": "https://www.zachbellay.com/posts/djangocon-eu-2025/"
    },
    {
      "by": "vector_spaces",
      "descendants": 26,
      "id": 43817726,
      "kids": [
        43827911,
        43825864,
        43831499,
        43831642,
        43825681,
        43828387,
        43828589
      ],
      "score": 100,
      "time": 1745816470,
      "title": "Why Momentum Works (2017)",
      "type": "story",
      "url": "https://distill.pub/2017/momentum/"
    },
    {
      "by": "pseudolus",
      "descendants": 8,
      "id": 43838666,
      "kids": [
        43839232,
        43839106,
        43839093
      ],
      "score": 7,
      "time": 1745965048,
      "title": "Is China Pulling Ahead in the Quest for Fusion Energy?",
      "type": "story",
      "url": "https://spectrum.ieee.org/china-nuclear-fusion-reactor"
    },
    {
      "by": "keepamovin",
      "descendants": 41,
      "id": 43817000,
      "kids": [
        43817001,
        43838143,
        43818337,
        43817803
      ],
      "score": 56,
      "time": 1745807633,
      "title": "The missteps that led to a fatal plane crash at Reagan National Airport",
      "type": "story",
      "url": "https://www.nytimes.com/2025/04/27/business/dc-plane-crash-reagan-airport.html"
    },
    {
      "by": "neversettles",
      "descendants": 12,
      "id": 43822659,
      "kids": [
        43824256,
        43828361,
        43829889,
        43823160,
        43823280,
        43823137
      ],
      "score": 77,
      "text": "Hey HN! We’ve been building an MCP server to help AI-assisted web app developers by using browser agents to test whether changes made by an AI inside an editor actually work. We&#x27;ve been testing it on scenarios like verifying new flows in a UI, or checking that sending a chat request triggers a response. The idea is to let your coding agent both code and evaluate if what it did was correct. Here’s a short demo with Cursor: <a href=\"https:&#x2F;&#x2F;www.youtube.com&#x2F;watch?v=_AoQK-bwR0w\" rel=\"nofollow\">https:&#x2F;&#x2F;www.youtube.com&#x2F;watch?v=_AoQK-bwR0w</a><p>When building apps, we found the hardest part of AI-assisted coding isn’t the coding—it’s tedious point-and-click testing to see if things work. We got tired of this loop: open the app, click through flows, stare at the network tab, copy console errors to the editor, repeat. It felt obvious this should be AI-assisted too. If you can vibe-code, you should be able to vibe-test!<p>Some agents like Cline and Windsurf have browser integrations, but Cline’s (via Anthropic Computer Use) felt slow and only reported console logs, and Windsurf’s didn’t work reliably yet. We got so tired of manually testing that we decided to fix it.<p>Our MCP server sits between your IDE agent (Cursor&#x2F;Windsurf&#x2F;Cline&#x2F;Continue) and a Playwright-powered browser-use agent. It spins up the browser, navigates your app per instructions from the IDE agent, and sends back steps, console events, and network events so the IDE agent can assess the app’s state.<p>We proxy Browser-use’s original Claude calls and swap in Gemini Flash 2.0, cutting latency from ~8s → ~3s per step. We also cap console&#x2F;network logs at 10,000 characters to stay within context limits, and filter out irrelevant logs (e.g., noisy XHR requests).<p>At the end, the browser agent outputs a summary like:<p><pre><code>  Web Evaluation Report for http:&#x2F;&#x2F;localhost:5173 \n  Task: delete an API key and evaluate UX\n  Steps: Home → Login → API Keys → Create Key → Delete Key\n  Flow tested successfully; UX had problems X, Y, Z...\n  Console (8)...   Network (13)...   Timeline of events (57) …\n</code></pre>\nThis gives the coding agent the ability to recognize the console and network errors, or any issues with clicking around, and have the coding agent fix them before returning back to the user.  (There’s a longer example in the README at <a href=\"https:&#x2F;&#x2F;github.com&#x2F;Operative-Sh&#x2F;web-eval-agent\">https:&#x2F;&#x2F;github.com&#x2F;Operative-Sh&#x2F;web-eval-agent</a>.)<p>Try it in Cursor &#x2F; Cline &#x2F; Windsurf &#x2F; Claude Desktop: (macOS&#x2F;Linux):<p><pre><code>  curl -LSf https:&#x2F;&#x2F;operative.sh&#x2F;install.sh -o install.sh\n  less -N install.sh   # inspect if you’d like\n  bash install.sh      # installs uv + jq + Playwright + server\n  # then in Cursor&#x2F;Cline&#x2F;Windsurf&#x2F;Continue: craft a prompt using the web_eval_agent tool\n</code></pre>\n(For Windows, there’s a 4-line manual install in the README.)<p>What we want to do next: pause&#x2F;go for OAuth screens; save&#x2F;load browser auth states; Playwright step recording for automated test creation and regression test creation; supporting Loveable &#x2F; v0 &#x2F; Bolt.new sites by offering a web version.<p>We’d love to hear your feedback, especially if you’ve experienced the pain of having to manually test changes happening in your web apps after making changes from inside your IDE, or if you’ve tried any alternative MCP tools for this that have worked well.<p>Try it out if you feel it’d be helpful for your workflow: <a href=\"https:&#x2F;&#x2F;github.com&#x2F;Operative-Sh&#x2F;web-eval-agent\">https:&#x2F;&#x2F;github.com&#x2F;Operative-Sh&#x2F;web-eval-agent</a>. (note: the server hits our operative.sh proxy to cover Gemini tokens. The MCP server itself is OSS; Anthropic base-URL support is coming soon. Free tier included; heavy users can grab the $10 plan to offset our model bill.)<p>Let us know what you think! Thanks for reading!",
      "time": 1745854585,
      "title": "Show HN: Web-eval-agent – Let the coding agent debug itself",
      "type": "story",
      "url": "https://github.com/Operative-Sh/web-eval-agent"
    },
    {
      "by": "LorenDB",
      "descendants": 1,
      "id": 43838230,
      "kids": [
        43839674
      ],
      "score": 7,
      "time": 1745962089,
      "title": "Protecting Windows Users from Janet Jackson's Rhythm Nation",
      "type": "story",
      "url": "https://devblogs.microsoft.com/oldnewthing/20250429-42"
    },
    {
      "by": "hn_acker",
      "descendants": 6,
      "id": 43836943,
      "kids": [
        43837868
      ],
      "score": 41,
      "time": 1745954874,
      "title": "FTC's 'Tech Censorship' Investigation Is Censoring Comments About 'Censorship'",
      "type": "story",
      "url": "https://www.techdirt.com/2025/04/29/ftcs-tech-censorship-investigation-is-censoring-comments-about-censorship/"
    },
    {
      "by": "davidvgilmore",
      "descendants": 80,
      "id": 43831993,
      "kids": [
        43833502,
        43836930,
        43837083,
        43833073,
        43833105,
        43836871,
        43833513,
        43833765,
        43832832,
        43832604,
        43834813,
        43833402,
        43832611,
        43833438,
        43835880,
        43833905,
        43832666,
        43835510,
        43833246,
        43832932,
        43832321,
        43833334,
        43832334,
        43833104,
        43835703,
        43833028,
        43832329,
        43832585
      ],
      "score": 85,
      "text": "Hi HN,<p>TL;DR Memex is a cross-platform desktop app for vibe coding. Think ChatGPT + Claude Code rolled into one.<p>Why we built it: We love chat tools like Perplexity and ChatGPT. We also love coding agents, like in Cursor and Windsurf. We don’t like that web-based app builders are opinionated about tech stack and we can’t run them locally. So, we built Memex to be a chat tool + coding agent that supports any tech stack.<p>What it can do today: Claude Code-like coding. Agentic web search &#x2F; research. Pre-built templates (e.g. fullstack, iOS, python + modal, etc). Inline data analysis + viz. Checkpointing (shadow git repo). Privacy mode.<p>How it works: Written in TS+Rust+Python, using Tauri for the cross-platform build (macOS, Windows, Linux). It has a bundled python environment for data analysis. Agent uses a mix of Sonnet 3.7 + Haiku.<p>Status &amp; roadmap: Free download with free tier and paid plan: <a href=\"https:&#x2F;&#x2F;memex.tech\" rel=\"nofollow\">https:&#x2F;&#x2F;memex.tech</a>. Up next: [1] Additional model support (e.g. Gemini 2.5). [2] MCP support. [3] Computer use.<p>Ask: Kick the tires. Give us feedback on product + roadmap. If you love it – spread the word!<p>Thanks! David",
      "time": 1745931648,
      "title": "Show HN: Memex is a Claude Code alternative built on Rust+Tauri for vibe coding",
      "type": "story",
      "url": "https://memex.tech"
    },
    {
      "by": "needtoquitmyjob",
      "descendants": 6,
      "id": 43836353,
      "kids": [
        43840055,
        43836643,
        43838021,
        43838240,
        43839295
      ],
      "score": 15,
      "text": "I live in NYC and I have about 6 years of experience. Out of the 4 jobs I&#x27;ve had, I loved one of them, but I just couldn&#x27;t bear the rest. I love building software, and I&#x27;ve worked with a lot of great people, but the overall culture just isn&#x27;t for me. I have been abused too many times.\nI don&#x27;t know what to do now. And, I am worried that if I do enter another industry, it won&#x27;t actually be different than where I am now. I don&#x27;t have a degree, so I&#x27;m assuming I have to start from scratch. Some options I&#x27;ve been considering:<p>1. New career. Maybe a trade? Aviation maintenance? Nothing specific sticks out to me.\n2. Move to another country. This was prev recommended to me after I mentioned my job didn&#x27;t treat me like I was human - apparently European countries (Denmark, Sweden) are much better?\n3. Find a new job. But, I don&#x27;t know how to find one that I would like, if it is even possible.\n4. Learn how to deal with a bad job. I don&#x27;t know how to do this, or if it is even possible, or if it&#x27;s a good idea.\n5. Start my own company. I would love to do this. But, I don&#x27;t have a lot in savings. Maybe I could try finding a part time job just to stay afloat?<p>What do you recommend?",
      "time": 1745951760,
      "title": "Ask HN: I don't want to work in software anymore. Where do I go?",
      "type": "story"
    },
    {
      "by": "matt_d",
      "descendants": 11,
      "id": 43826021,
      "kids": [
        43826960,
        43829700,
        43831827,
        43833364,
        43830256
      ],
      "score": 72,
      "time": 1745873869,
      "title": "Packed Data Support in Haskell",
      "type": "story",
      "url": "https://arthi-chaud.github.io/posts/packed/"
    },
    {
      "by": "rguiscard",
      "descendants": 77,
      "id": 43827108,
      "kids": [
        43827396,
        43828590,
        43834005,
        43827299,
        43831340,
        43827959,
        43828248,
        43827599,
        43827265,
        43827822,
        43830500,
        43827362,
        43827415,
        43827324,
        43827146,
        43827901,
        43832119,
        43827405,
        43827316,
        43827843,
        43827188,
        43828376,
        43827917
      ],
      "score": 315,
      "time": 1745881948,
      "title": "The 12-bit rainbow palette",
      "type": "story",
      "url": "https://iamkate.com/data/12-bit-rainbow/"
    },
    {
      "by": "petethomas",
      "descendants": 1,
      "id": 43839455,
      "kids": [
        43839486,
        43839697
      ],
      "score": 12,
      "time": 1745970551,
      "title": "Made-in-USA Wheelbarrows Are Now Made in China",
      "type": "story",
      "url": "https://www.bloomberg.com/news/articles/2025-04-29/made-in-usa-wheelbarrows-promoted-by-trump-are-now-made-in-china"
    },
    {
      "by": "chunkles",
      "descendants": 62,
      "id": 43825336,
      "kids": [
        43826812,
        43827346,
        43836016,
        43827881,
        43825643,
        43835802,
        43837061,
        43835466,
        43828494,
        43827260,
        43829708,
        43827755,
        43832436,
        43833447,
        43831641,
        43826650,
        43828057,
        43827783,
        43827024,
        43830204,
        43827964,
        43827802,
        43828086
      ],
      "score": 330,
      "text": "<a href=\"https:&#x2F;&#x2F;eieio.games&#x2F;blog&#x2F;one-million-chessboards&#x2F;\" rel=\"nofollow\">https:&#x2F;&#x2F;eieio.games&#x2F;blog&#x2F;one-million-chessboards&#x2F;</a>",
      "time": 1745869922,
      "title": "One Million Chessboards",
      "type": "story",
      "url": "https://onemillionchessboards.com/#199,276"
    },
    {
      "by": "surprisetalk",
      "descendants": 426,
      "id": 43824544,
      "kids": [
        43826114,
        43827561,
        43824993,
        43825016,
        43826191,
        43824910,
        43829381,
        43827148,
        43826850,
        43827999,
        43826577,
        43831861,
        43825155,
        43829742,
        43825110,
        43825010,
        43828027,
        43835167,
        43825248,
        43825039,
        43830475,
        43825582,
        43829192,
        43833226,
        43831048,
        43828476,
        43824924,
        43825554,
        43831211,
        43825058,
        43824939,
        43824930,
        43825148,
        43827038,
        43825164,
        43826626,
        43828654,
        43824968,
        43824867,
        43826110,
        43825204,
        43825107,
        43825242
      ],
      "score": 213,
      "time": 1745865526,
      "title": "Reports of the death of California High-Speed Rail have been greatly exaggerated",
      "type": "story",
      "url": "https://asteriskmag.com/issues/10/reports-of-the-death-of-california-high-speed-rail-have-been-greatly-exaggerated"
    },
    {
      "by": "pmags",
      "descendants": 12,
      "id": 43835960,
      "kids": [
        43836858,
        43839028,
        43836812,
        43835961,
        43838828,
        43836909,
        43836775
      ],
      "score": 48,
      "time": 1745949780,
      "title": "Oklahoma City family traumatized after ICE mistakenly raids their home",
      "type": "story",
      "url": "https://kfor.com/news/local/were-citizens-oklahoma-city-family-traumatized-after-ice-raids-home-but-they-werent-suspects/"
    },
    {
      "by": "mdhb",
      "descendants": 11,
      "id": 43832602,
      "kids": [
        43839465,
        43835132,
        43835332,
        43839281,
        43835356,
        43837296,
        43837010,
        43835903
      ],
      "score": 59,
      "time": 1745934599,
      "title": "Palantir's Justification for Building ICE's Master Database",
      "type": "story",
      "url": "https://www.404media.co/this-is-palantirs-justification-for-building-ices-master-database/"
    },
    {
      "by": "rimeice",
      "descendants": 0,
      "id": 43837865,
      "score": 10,
      "time": 1745959659,
      "title": "Use Xenon gas to climb Everest in a week?",
      "type": "story",
      "url": "https://www.bbc.com/future/article/20250428-can-mount-everest-really-be-climbed-in-a-week"
    },
    {
      "by": "azhenley",
      "descendants": 22,
      "id": 43825958,
      "kids": [
        43827623,
        43834767,
        43828365
      ],
      "score": 67,
      "time": 1745873364,
      "title": "Requirements change until they don't",
      "type": "story",
      "url": "https://buttondown.com/hillelwayne/archive/requirements-change-until-they-dont/"
    },
    {
      "by": "JumpCrisscross",
      "descendants": 1,
      "id": 43837704,
      "kids": [
        43838865
      ],
      "score": 20,
      "time": 1745958716,
      "title": "White House lashes out at 'hostile and political act by Amazon'",
      "type": "story",
      "url": "https://www.ft.com/content/a06e80e7-97d0-4f29-9153-1e4219a88713"
    },
    {
      "by": "roman01la",
      "descendants": 38,
      "id": 43810211,
      "kids": [
        43831353,
        43827133,
        43826570,
        43831994,
        43827480,
        43827496,
        43826304,
        43832190,
        43826059,
        43827049
      ],
      "score": 197,
      "time": 1745740207,
      "title": "Running Clojure in WASM with GraalVM",
      "type": "story",
      "url": "https://romanliutikov.com/blog/running-clojure-in-wasm"
    },
    {
      "by": "alpark3",
      "descendants": 11,
      "id": 43815590,
      "kids": [
        43827622,
        43827377,
        43826945,
        43826424,
        43829034,
        43827758,
        43826780
      ],
      "score": 54,
      "time": 1745792366,
      "title": "Beating the Crowd",
      "type": "story",
      "url": "https://www.withentropy.com/blog/2025-04-21-beating_the_crowd/"
    },
    {
      "by": "axiomdata316",
      "descendants": 15,
      "id": 43835810,
      "kids": [
        43836220,
        43837709,
        43837572,
        43836851
      ],
      "score": 22,
      "time": 1745948973,
      "title": "Ted Kaczynski's brother wrote him for decades to explain why he turned him in",
      "type": "story",
      "url": "https://www.nytimes.com/2025/04/29/us/unabomber-ted-kaczynski-letters.html"
    },
    {
      "by": "badlogic",
      "descendants": 91,
      "id": 43814934,
      "kids": [
        43817131,
        43820810,
        43818639,
        43822212,
        43822546,
        43816707,
        43817776,
        43819787,
        43836978,
        43817679,
        43830985,
        43828295,
        43819721,
        43820875,
        43830739,
        43824917,
        43817008,
        43822927,
        43822702,
        43819836,
        43816683,
        43823808,
        43824231,
        43821597,
        43820108,
        43818950,
        43828157,
        43822606,
        43818657,
        43819203,
        43823010,
        43822903,
        43823162,
        43826288,
        43819200,
        43819648,
        43823997,
        43820248
      ],
      "score": 278,
      "time": 1745786433,
      "title": "Boxie – an always offline audio player for my 3 year old",
      "type": "story",
      "url": "https://mariozechner.at/posts/2025-04-20-boxie/"
    },
    {
      "by": "toomuchtodo",
      "descendants": 1,
      "id": 43837524,
      "kids": [
        43837525
      ],
      "score": 11,
      "time": 1745957691,
      "title": "23andMe Agrees to Back a Privacy Advocate [Ombudsman] for Customer DNA Data",
      "type": "story",
      "url": "https://www.bloomberg.com/news/articles/2025-04-29/23andme-agrees-to-back-a-privacy-advocate-for-customer-dna-data"
    },
    {
      "by": "axelMI",
      "descendants": 80,
      "id": 43823044,
      "kids": [
        43826542,
        43830053,
        43823774,
        43828200,
        43826310,
        43827645,
        43832135,
        43827361,
        43831690,
        43823822,
        43826964,
        43824420,
        43827987,
        43827235,
        43827400,
        43827349,
        43828067,
        43823635,
        43823917,
        43823387,
        43824555,
        43824742,
        43824822,
        43823342,
        43823764,
        43824894
      ],
      "score": 238,
      "text": "I&#x27;m working on a pure js webgl image editor with effects, filters, crop &amp; perspective correction, etc.\nMy goal is to give the community an opensource solution as unfortunately most comparable apps are closed sources.<p><a href=\"https:&#x2F;&#x2F;mini2-photo-editor.netlify.app\" rel=\"nofollow\">https:&#x2F;&#x2F;mini2-photo-editor.netlify.app</a> to try it out (<a href=\"https:&#x2F;&#x2F;github.com&#x2F;xdadda&#x2F;mini-photo-editor\">https:&#x2F;&#x2F;github.com&#x2F;xdadda&#x2F;mini-photo-editor</a>)",
      "time": 1745856621,
      "title": "Show HN: A pure WebGL image editor with filters, crop and perspective correction",
      "type": "story",
      "url": "https://github.com/xdadda/mini-photo-editor"
    },
    {
      "by": "rbanffy",
      "descendants": 130,
      "id": 43829356,
      "kids": [
        43829671,
        43829514,
        43830370,
        43830063,
        43829735,
        43829711,
        43829680,
        43832782,
        43829594,
        43830154,
        43829555,
        43836126,
        43831002,
        43829539,
        43829501
      ],
      "score": 117,
      "time": 1745909196,
      "title": "Spain is about to face the challenge of a \"black start\"",
      "type": "story",
      "url": "https://arstechnica.com/science/2025/04/why-restarting-a-power-grid-is-so-hard/"
    },
    {
      "by": "sarkory",
      "descendants": 34,
      "id": 43820022,
      "kids": [
        43822763,
        43822815,
        43822916,
        43822127,
        43823536,
        43827173
      ],
      "score": 281,
      "time": 1745839481,
      "title": "Tiny-LLM – a course of serving LLM on Apple Silicon for systems engineers",
      "type": "story",
      "url": "https://github.com/skyzh/tiny-llm"
    },
    {
      "by": "Improvement",
      "descendants": 2,
      "id": 43836767,
      "kids": [
        43838850,
        43836833
      ],
      "score": 9,
      "time": 1745953882,
      "title": "Meta's new moderators face worst conditions yet",
      "type": "story",
      "url": "https://www.thebureauinvestigates.com/stories/2025-04-27/suicide-attempts-sackings-and-a-vow-of-silence-metas-new-moderators-face-worst-conditions-yet"
    },
    {
      "by": "Tomte",
      "descendants": 0,
      "id": 43829935,
      "score": 18,
      "time": 1745914804,
      "title": "My sourdough starter has twins",
      "type": "story",
      "url": "https://brainbaking.com/post/2025/04/my-sourdough-starter-has-twins/"
    },
    {
      "by": "theneedful",
      "descendants": 35,
      "id": 43826065,
      "kids": [
        43827460,
        43828504,
        43830663,
        43827089,
        43827176,
        43827602
      ],
      "score": 67,
      "time": 1745874119,
      "title": "Legal art forgery, for the sake of movies (2014)",
      "type": "story",
      "url": "https://www.vanityfair.com/hollywood/2014/04/art-in-movies"
    },
    {
      "by": "onat1",
      "descendants": 164,
      "id": 43809484,
      "kids": [
        43810850,
        43809954,
        43810232,
        43810207,
        43809734,
        43810720,
        43810020,
        43810684,
        43809677,
        43809689,
        43810234,
        43815353,
        43810323,
        43810314,
        43810744,
        43817289,
        43809885,
        43809812,
        43810155,
        43810483,
        43809894,
        43810157,
        43810640,
        43810142,
        43810315,
        43816271,
        43811633,
        43810398
      ],
      "score": 317,
      "time": 1745729083,
      "title": "CSS Zen Garden",
      "type": "story",
      "url": "https://csszengarden.com/"
    },
    {
      "by": "felineflock",
      "descendants": 9,
      "id": 43823485,
      "kids": [
        43827814,
        43823550,
        43823982,
        43823916
      ],
      "score": 92,
      "time": 1745859188,
      "title": "Vision Transformers Need Registers",
      "type": "story",
      "url": "https://arxiv.org/abs/2309.16588"
    },
    {
      "by": "CrankyBear",
      "descendants": 0,
      "id": 43837775,
      "score": 7,
      "time": 1745959138,
      "title": "Synadia Attempts to Reclaim NATS Back from CNCF",
      "type": "story",
      "url": "https://thenewstack.io/synadia-attempts-to-reclaim-nats-back-from-cncf/"
    },
    {
      "by": "whoami_nr",
      "descendants": 113,
      "id": 43823851,
      "kids": [
        43824497,
        43824529,
        43824535,
        43824969,
        43824388,
        43825398,
        43824482,
        43824601,
        43834370,
        43825891,
        43825052,
        43827313,
        43836256,
        43827178,
        43824644,
        43828866,
        43825144,
        43827072,
        43824455,
        43831449,
        43824916,
        43825015,
        43830454,
        43829593,
        43824457
      ],
      "score": 127,
      "time": 1745861289,
      "title": "Is outbound going to die?",
      "type": "story",
      "url": "https://rnikhil.com/2025/04/25/sales-outbound-ai-dead"
    }
  ]
}