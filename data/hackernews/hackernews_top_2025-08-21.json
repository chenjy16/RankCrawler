{
  "fetch_time": "2025-08-21 01:12:26",
  "stories": [
    {
      "by": "AntwaneB",
      "descendants": 56,
      "id": 44966856,
      "kids": [
        44967547,
        44967377,
        44967933,
        44968027,
        44967818,
        44967743,
        44967682,
        44968073,
        44967447,
        44967980,
        44967936,
        44967435,
        44967975,
        44967696,
        44967438,
        44967617,
        44967906,
        44967741,
        44967651,
        44967626,
        44967437,
        44967768,
        44967436,
        44967434,
        44967595,
        44967410
      ],
      "score": 125,
      "time": 1755726425,
      "title": "\"AI first\" and the Bus Factor of 0",
      "type": "story",
      "url": "https://www.mindflash.org/coding/ai/ai-and-the-bus-factor-of-0-1608"
    },
    {
      "by": "sealeck",
      "descendants": 9,
      "id": 44967469,
      "kids": [
        44967911,
        44968015,
        44967718
      ],
      "score": 50,
      "time": 1755731437,
      "title": "Code Review Can Be Better",
      "type": "story",
      "url": "https://tigerbeetle.com/blog/2025-08-04-code-review-can-be-better/"
    },
    {
      "by": "ksec",
      "descendants": 1,
      "id": 44933290,
      "kids": [
        44967991
      ],
      "score": 31,
      "time": 1755451893,
      "title": "SK hynix dethrones Samsung as top DRAM maker for first time in 30 years",
      "type": "story",
      "url": "https://koreajoongangdaily.joins.com/news/2025-08-15/business/tech/Thanks-Nvidia-SK-hynix-dethrones-Samsung-as-worlds-top-DRAM-maker-for-first-time-in-over-30-years/2376834"
    },
    {
      "by": "damarberlari",
      "descendants": 109,
      "id": 44962066,
      "kids": [
        44962236,
        44962721,
        44965806,
        44962949,
        44962220,
        44962458,
        44963689,
        44964993,
        44967299,
        44962603,
        44965640,
        44962573,
        44962286,
        44962643,
        44962449,
        44963109,
        44965062,
        44962397,
        44962369,
        44965820,
        44964928,
        44964696,
        44964222,
        44964072,
        44962728,
        44967822,
        44966100,
        44966937,
        44964707,
        44962368,
        44963314,
        44962761,
        44962329,
        44963131,
        44963558,
        44963566,
        44962310,
        44963913,
        44963174,
        44962465,
        44963146,
        44964434,
        44963782,
        44963896,
        44965504,
        44962945,
        44962612,
        44963243,
        44963571,
        44963162,
        44965580,
        44963471,
        44963079,
        44962542,
        44962589,
        44962517,
        44962475,
        44963738,
        44963932,
        44967173,
        44966007,
        44962574
      ],
      "score": 605,
      "text": "I was wondering how I can arrange objects along a spherical helix path, and read some articles on it.<p>I ended up learning about parametric equations again, and make this visualization to document what I learned:<p><a href=\"https:&#x2F;&#x2F;visualrambling.space&#x2F;moving-objects-in-3d&#x2F;\" rel=\"nofollow\">https:&#x2F;&#x2F;visualrambling.space&#x2F;moving-objects-in-3d&#x2F;</a><p>feel free to visit and let me know what you think!",
      "time": 1755698567,
      "title": "Show HN: I was curious about spherical helix, ended up making this visualization",
      "type": "story",
      "url": "https://visualrambling.space/moving-objects-in-3d/"
    },
    {
      "by": "ModelForge",
      "descendants": 46,
      "id": 44962059,
      "kids": [
        44962853,
        44967964,
        44963744,
        44964712,
        44963809,
        44963262,
        44963883,
        44962879,
        44965428,
        44964751,
        44962809
      ],
      "score": 293,
      "time": 1755698486,
      "title": "Gemma 3 270M re-implemented in pure PyTorch for local tinkering",
      "type": "story",
      "url": "https://github.com/rasbt/LLMs-from-scratch/tree/main/ch05/12_gemma3"
    },
    {
      "by": "sammycage",
      "descendants": 16,
      "id": 44966170,
      "kids": [
        44967184,
        44966472,
        44967260,
        44967830,
        44966925,
        44967545,
        44967507,
        44967318,
        44966715
      ],
      "score": 77,
      "text": "Hi everyone, I built PlutoPrint because I needed a simple way to generate beautiful PDFs and images directly from HTML with Python. Most of the tools I tried felt heavy, tricky to set up, or produced results that didn’t look great, so I wanted something lightweight, modern, and fast. PlutoPrint is built on top of PlutoBook’s rendering engine, which is designed for paged media, and then wrapped with a Python API that makes it easy to turn HTML or XML into crisp PDFs and PNGs. I’ve used it for things like invoices, reports, tickets, and even snapshots, and it can also integrate with Matplotlib to render charts directly into documents.<p>I’d be glad to hear what you think. If you’ve ever had to wrestle with generating PDFs or images from HTML, I hope this feels like a smoother option. Feedback, ideas, or even just impressions are all very welcome, and I’d love to learn how PlutoPrint could be more useful for you.",
      "time": 1755722278,
      "title": "Show HN: PlutoPrint – Generate PDFs and PNGs from HTML with Python",
      "type": "story",
      "url": "https://github.com/plutoprint/plutoprint"
    },
    {
      "by": "taviso",
      "descendants": 287,
      "id": 44962529,
      "kids": [
        44967573,
        44965488,
        44967583,
        44965665,
        44962750,
        44967588,
        44966184,
        44967912,
        44968002,
        44965973,
        44967306,
        44965609,
        44966115,
        44967904,
        44967733,
        44968019,
        44962734,
        44966948,
        44966385,
        44966424,
        44962975,
        44967473,
        44967097,
        44962651,
        44962852,
        44965570,
        44962965,
        44966640,
        44967357,
        44967740,
        44966585,
        44967834,
        44962641,
        44965581,
        44966695,
        44962669,
        44966287,
        44964379,
        44966957,
        44962756,
        44965585,
        44962685,
        44967998,
        44963612,
        44967687,
        44962554,
        44966466,
        44966051,
        44962592,
        44966602,
        44962613,
        44965518,
        44962752,
        44962744
      ],
      "score": 239,
      "time": 1755701685,
      "title": "Why are anime catgirls blocking my access to the Linux kernel?",
      "type": "story",
      "url": "https://lock.cmpxchg8b.com/anubis.html"
    },
    {
      "by": "psionides",
      "descendants": 62,
      "id": 44965233,
      "kids": [
        44966931,
        44968017,
        44966367,
        44967565,
        44966345,
        44966878,
        44966259,
        44966238,
        44965998,
        44966611,
        44965832,
        44966399,
        44966461,
        44965990
      ],
      "score": 121,
      "time": 1755717189,
      "title": "Introduction to AT Protocol",
      "type": "story",
      "url": "https://mackuba.eu/2025/08/20/introduction-to-atproto/"
    },
    {
      "by": "glawrence13",
      "descendants": 55,
      "id": 44962881,
      "kids": [
        44964027,
        44966225,
        44966567,
        44966326,
        44965816,
        44965422,
        44967731,
        44964068,
        44964069,
        44966512,
        44966121,
        44964559,
        44963964,
        44964136,
        44965957,
        44964848,
        44965013,
        44967281,
        44964583,
        44964345
      ],
      "score": 82,
      "text": "Hi HN — we’re George and Alex, building Channel3 (<a href=\"https:&#x2F;&#x2F;trychannel3.com&#x2F;\">https:&#x2F;&#x2F;trychannel3.com&#x2F;</a>), a database of every product on the internet, searchable via text&#x2F;image, and with built-in affiliate monetization. Here’s a demo: <a href=\"https:&#x2F;&#x2F;www.youtube.com&#x2F;watch?v=Mx8FyP7KvJg\" rel=\"nofollow\">https:&#x2F;&#x2F;www.youtube.com&#x2F;watch?v=Mx8FyP7KvJg</a>.<p>It’s surprisingly hard to find good product data. If you want your software to recommend products and deep-link to merchants, you’ll quickly discover that the data you need—clean titles, normalized attributes, deduped listings, current prices and inventory, variant options, images, and brand info—is not just messy; it’s also spread across a long, long tail of retailers, and often lives behind advanced bot-detection systems.<p>We ran into this problem while building an AI teacher that could recommend relevant supplies. We asked Exa for products, but got back articles, not structured data. Same for Tavily and Bing (deprecated as of 8&#x2F;13&#x2F;25). And we got rejected from affiliate programs, who suggested we come back with 1000s of TikTok followers. Channel3 is the API we wished we had.<p>Product detail pages (PDPs) usually present the main item alongside recommendations. We use computer vision to isolate the main product and find its attributes, like title and price. We apply the same logic to the rest of the PDPs on the domain.<p>Products are often sold across multiple retailers, with no guarantee they’ll be labeled consistently. We collapse products across the web into a canonicalized set by using LLMs and multimodal embeddings to actually understand each product.<p>To normalize everything into a schema that tries to be both minimal and extensible, we have to be opinionated. Are a $50 10” and $60 12” skillet the same product? Probably not, but the S&#x2F;M&#x2F;L variants of a T-shirt are. Our goal is that any product you’d search for specifically is treated as its own product.<p>We process a massive amount of data. We quickly ran out of room on our Cloudflare Vectorize indices and moved to the brand-new AWS S3 Vectors platform, syncing to OpenSearch for faster response times and more dynamic filtering. We hit rate limits constantly, so we spread our work over multiple cloud providers and AI models.<p>You can search things like “outdoor grill, less than $1000”, or “sweat-resistant, wireless running earbuds”, or\n&quot;women&#x27;s jeans from Paige that look like [<a href=\"https:&#x2F;&#x2F;www.gap.com&#x2F;webcontent&#x2F;0020&#x2F;666&#x2F;799&#x2F;cn20666799.jpg\" rel=\"nofollow\">https:&#x2F;&#x2F;www.gap.com&#x2F;webcontent&#x2F;0020&#x2F;666&#x2F;799&#x2F;cn20666799.jpg</a>]”. Products come back as JSON with title, brand, images, price, specs, etc.<p>Developers earn commission on sales they drive (averaging 5%). Channel3 takes a cut. We want you to earn way more money from Channel3 than you spend on it. We win when you win.<p>We provide an API, SDK (Typescript and Python), and MCP. We offer 1000 free searches, and charge $7&#x2F;1000 searches after that. You can view expected commissions per-brand on our dashboard.<p>So far, products are US-only (sorry! we will expand). We’re live with millions of products and hundreds of developers.<p>To get started, make a free account at <a href=\"https:&#x2F;&#x2F;trychannel3.com\">https:&#x2F;&#x2F;trychannel3.com</a>, then select which brands you’d like to sell (choose from 50k+ or request your own), generate an API key, and start selling and earning.<p>We’d really appreciate feedback from this community. If you’ve built product search before, what did we miss in the schema? If you’ve tried to add commerce to an app, what blocked you? If you tried to build this yourself, what did you learn? Are there endpoints you wish existed (e.g. price alerts, back-in-stock webhooks, product feed)? For any suggestions, we’re all ears.<p>We’ll be in the thread all day to answer questions, share more technical detail, and hear whatever would make this most useful to you. Comment away!",
      "time": 1755704047,
      "title": "Launch HN: Channel3 (YC S25) – A database of every product on the internet",
      "type": "story"
    },
    {
      "by": "homebrewer",
      "descendants": 215,
      "id": 44964916,
      "kids": [
        44965393,
        44966899,
        44965216,
        44966135,
        44965205,
        44966394,
        44965364,
        44966618,
        44965447,
        44967351,
        44967728,
        44966418,
        44966537,
        44967348,
        44965330,
        44965287,
        44965819,
        44966555,
        44965294,
        44966099,
        44965153,
        44965341,
        44965536,
        44966003,
        44966784,
        44965885,
        44965529
      ],
      "score": 365,
      "time": 1755715623,
      "title": "Zedless: Zed fork focused on privacy and being local-first",
      "type": "story",
      "url": "https://github.com/zedless-editor/zed"
    },
    {
      "by": "mxmlnkn",
      "descendants": 48,
      "id": 44963724,
      "kids": [
        44965262,
        44963892,
        44965347,
        44965081,
        44964647,
        44964371,
        44966471,
        44965487,
        44964441,
        44965916,
        44964674,
        44964413,
        44963866
      ],
      "score": 142,
      "time": 1755709491,
      "title": "An Update on Pytype",
      "type": "story",
      "url": "https://github.com/google/pytype"
    },
    {
      "by": "jafioti",
      "descendants": 44,
      "id": 44963135,
      "kids": [
        44963735,
        44963683,
        44967752,
        44963921,
        44966443,
        44964811,
        44963627,
        44967364,
        44967293,
        44966587,
        44964643,
        44966968,
        44964139,
        44964549,
        44963315,
        44963392,
        44966735,
        44963176,
        44963317,
        44963491,
        44967877,
        44967872,
        44967860,
        44967886
      ],
      "score": 83,
      "text": "Hi HN, I’m Joe. My friends Matthew, Jake and I are building Luminal (<a href=\"https:&#x2F;&#x2F;luminalai.com&#x2F;\">https:&#x2F;&#x2F;luminalai.com&#x2F;</a>), a GPU compiler for automatically generating fast GPU kernels for AI models. It uses search-based compilation to achieve high performance.<p>We take high level model code, like you&#x27;d have in PyTorch, and generate very fast GPU code. We do that without using LLMs or AI - rather, we pose it as a search problem. Our compiler builds a search space, generates millions of possible kernels, and then searches through it to minimize runtime.<p>You can try out a demo in `demos&#x2F;matmul` on mac to see how Luminal takes a naive operation, represented in our IR of 12 simple operations, and compiles it to an optimized, tensor-core enabled Metal kernel. Here’s a video showing how: <a href=\"https:&#x2F;&#x2F;youtu.be&#x2F;P2oNR8zxSAA\" rel=\"nofollow\">https:&#x2F;&#x2F;youtu.be&#x2F;P2oNR8zxSAA</a><p>Our approach differs significantly from traditional ML libraries in that we ahead-of-time compile everything, generate a large search space of logically-equivalent kernels, and search through it to find the fastest kernels. This allows us to leverage the Bitter Lesson to discover complex optimizations like Flash Attention entirely automatically without needing manual heuristics. The best rule is no rule, the best heuristic is no heuristic, just search everything.<p>We’re working on bringing CUDA support up to parity with Metal, adding more flexibility to the search space, adding full-model examples (like Llama), and adding very exotic hardware backends.<p>We aim to radically simplify the ML ecosystem while improving performance and hardware utilization. Please check out our repo: <a href=\"https:&#x2F;&#x2F;github.com&#x2F;luminal-ai&#x2F;luminal\" rel=\"nofollow\">https:&#x2F;&#x2F;github.com&#x2F;luminal-ai&#x2F;luminal</a> and I’d love to hear your thoughts!",
      "time": 1755705673,
      "title": "Show HN: Luminal – Open-source, search-based GPU compiler",
      "type": "story",
      "url": "https://github.com/luminal-ai/luminal"
    },
    {
      "by": "gotmedium",
      "descendants": 629,
      "id": 44963939,
      "kids": [
        44964579,
        44964106,
        44966729,
        44964028,
        44968099,
        44964814,
        44964896,
        44967264,
        44965491,
        44967981,
        44964854,
        44967046,
        44965291,
        44964365,
        44964575,
        44964650,
        44964270,
        44964798,
        44964190,
        44967269,
        44966015,
        44964691,
        44964309,
        44964424,
        44966531,
        44967665,
        44964804,
        44965186,
        44964473,
        44965727,
        44966237,
        44967864,
        44965126,
        44967727,
        44965557,
        44964410,
        44964171,
        44964285,
        44964305,
        44964195,
        44964107,
        44966415,
        44965965,
        44964761,
        44965093,
        44965163,
        44964833,
        44964557,
        44964457,
        44964753,
        44965272,
        44966217,
        44964835,
        44967136,
        44964178,
        44966605,
        44964102,
        44964634,
        44965306,
        44966974,
        44965210,
        44964516,
        44964995,
        44964104,
        44965851,
        44964159,
        44965274,
        44964229,
        44965992,
        44964780,
        44964844,
        44964615,
        44964256,
        44964552,
        44966760,
        44966211,
        44965615,
        44964197,
        44964033,
        44964200,
        44965025
      ],
      "score": 336,
      "time": 1755710650,
      "title": "Pixel 10 Phones",
      "type": "story",
      "url": "https://blog.google/products/pixel/google-pixel-10-pro-xl/"
    },
    {
      "by": "smaddali",
      "id": 44966408,
      "score": 1,
      "time": 1755723614,
      "title": "Coris (YC S22) Is Hiring",
      "type": "job",
      "url": "https://www.ycombinator.com/companies/coris/jobs/rqO40yy-ai-engineer"
    },
    {
      "by": "melonmars",
      "descendants": 20,
      "id": 44932509,
      "kids": [
        44966566,
        44966848,
        44965549,
        44965399,
        44965333,
        44965574,
        44965448,
        44966417,
        44965286
      ],
      "score": 66,
      "time": 1755446196,
      "title": "Visualizing GPT-OSS-20B embeddings",
      "type": "story",
      "url": "https://melonmars.github.io/LatentExplorer/embedding_viewer.html"
    },
    {
      "by": "crcsmnky",
      "descendants": 41,
      "id": 44962969,
      "kids": [
        44963779,
        44963757,
        44964315,
        44963583,
        44965994,
        44965169,
        44965950,
        44963247,
        44963227,
        44963490
      ],
      "score": 111,
      "time": 1755704673,
      "title": "OPA maintainers and Styra employees hired by Apple",
      "type": "story",
      "url": "https://blog.openpolicyagent.org/note-from-teemu-tim-and-torin-to-the-open-policy-agent-community-2dbbfe494371"
    },
    {
      "by": "vquemener",
      "descendants": 184,
      "id": 44961172,
      "kids": [
        44963229,
        44967943,
        44967831,
        44967300,
        44965152,
        44966150,
        44965424,
        44961883,
        44963694,
        44965063,
        44963591,
        44963438,
        44964119,
        44963410,
        44967538,
        44964497,
        44964948,
        44964885,
        44963183,
        44964029,
        44964954,
        44962820,
        44962116,
        44965845,
        44963283,
        44966141,
        44965765,
        44963597,
        44965353,
        44964331,
        44963189,
        44964094,
        44965781,
        44963623,
        44966879,
        44966151,
        44966247,
        44965558,
        44964211,
        44964377,
        44966391,
        44962907,
        44962717,
        44963723,
        44962987,
        44964965,
        44964642,
        44963084
      ],
      "score": 279,
      "time": 1755691996,
      "title": "Sequoia backs Zed",
      "type": "story",
      "url": "https://zed.dev/blog/sequoia-backs-zed"
    },
    {
      "by": "impendingchange",
      "descendants": 15,
      "id": 44967505,
      "kids": [
        44967835,
        44967714,
        44967670,
        44967506,
        44967621,
        44967630
      ],
      "score": 14,
      "time": 1755731755,
      "title": "SimpleIDE",
      "type": "story",
      "url": "https://github.com/jamesplotts/simpleide"
    },
    {
      "by": "kieloo",
      "descendants": 47,
      "id": 44960316,
      "kids": [
        44961187,
        44962318,
        44960855,
        44963046,
        44961450,
        44960803,
        44962263,
        44965744,
        44961385,
        44961398,
        44962328,
        44961069,
        44961431,
        44965645,
        44963130,
        44962702,
        44961158,
        44962472,
        44962000
      ],
      "score": 260,
      "time": 1755682984,
      "title": "Tidewave Web: in-browser coding agent for Rails and Phoenix",
      "type": "story",
      "url": "https://tidewave.ai/blog/tidewave-web-phoenix-rails"
    },
    {
      "by": "gregpr07",
      "descendants": 96,
      "id": 44962869,
      "kids": [
        44963425,
        44963142,
        44963250,
        44963765,
        44965723,
        44964883,
        44963806,
        44964127,
        44965043,
        44963756,
        44964067,
        44964123,
        44964070
      ],
      "score": 138,
      "time": 1755703964,
      "title": "Closer to the Metal: Leaving Playwright for CDP",
      "type": "story",
      "url": "https://browser-use.com/posts/playwright-to-cdp"
    },
    {
      "by": "JasperBekkers",
      "descendants": 4,
      "id": 44962361,
      "kids": [
        44966181
      ],
      "score": 42,
      "time": 1755700518,
      "title": "Learning about GPUs through measuring memory bandwidth",
      "type": "story",
      "url": "https://www.evolvebenchmark.com/blog-posts/learning-about-gpus-through-measuring-memory-bandwidth"
    },
    {
      "by": "keepamovin",
      "descendants": 82,
      "id": 44959833,
      "kids": [
        44965421,
        44961363,
        44962336,
        44964655,
        44967973,
        44963328,
        44962504,
        44967168,
        44961001,
        44963413,
        44965191,
        44961638,
        44964026,
        44962387,
        44960998,
        44963338,
        44962628,
        44961164,
        44962316,
        44965785,
        44965412
      ],
      "score": 139,
      "time": 1755677700,
      "title": "Mirrorshades: The Cyberpunk Anthology (1986)",
      "type": "story",
      "url": "https://www.rudyrucker.com/mirrorshades/HTML/"
    },
    {
      "by": "keithly",
      "descendants": 163,
      "id": 44962844,
      "kids": [
        44968092,
        44963275,
        44966504,
        44966081,
        44967999,
        44966172,
        44965279,
        44965498,
        44963561,
        44966776,
        44963241,
        44963303,
        44963626,
        44963713,
        44966035,
        44966616,
        44966683,
        44965777,
        44966825,
        44965098,
        44964591,
        44963631,
        44964484,
        44963173,
        44963789,
        44964839,
        44964653,
        44966755,
        44963358,
        44964588
      ],
      "score": 263,
      "time": 1755703807,
      "title": "AWS in 2025: Stuff you think you know that's now wrong",
      "type": "story",
      "url": "https://www.lastweekinaws.com/blog/aws-in-2025-the-stuff-you-think-you-know-thats-now-wrong/"
    },
    {
      "by": "gmays",
      "descendants": 61,
      "id": 44935850,
      "kids": [
        44968109,
        44967231,
        44966580,
        44964724,
        44964868,
        44964708,
        44937184,
        44966716,
        44965332,
        44965469,
        44967049,
        44965704,
        44966505,
        44965293,
        44966395,
        44964775,
        44965363,
        44965218
      ],
      "score": 47,
      "time": 1755473394,
      "title": "The Rise and Fall of Music Ringtones: A Statistical Analysis",
      "type": "story",
      "url": "https://www.statsignificant.com/p/the-rise-and-fall-of-music-ringtones"
    },
    {
      "by": "hexhowells",
      "descendants": 1,
      "id": 44933802,
      "kids": [
        44967534
      ],
      "score": 13,
      "time": 1755455811,
      "title": "Understanding Moravec's Paradox",
      "type": "story",
      "url": "https://hexhowells.com/posts/moravecs-paradox.html"
    },
    {
      "by": "surprisetalk",
      "descendants": 2,
      "id": 44931079,
      "kids": [
        44967290,
        44931915
      ],
      "score": 31,
      "time": 1755433057,
      "title": "Linear scan register allocation on SSA",
      "type": "story",
      "url": "https://bernsteinbear.com/blog/linear-scan/"
    },
    {
      "by": "geemus",
      "descendants": 51,
      "id": 44963226,
      "kids": [
        44963355,
        44965904,
        44964971,
        44965459,
        44963592,
        44964861,
        44963547,
        44964391,
        44964524,
        44964603,
        44966918
      ],
      "score": 58,
      "text": "From the cryptic terminal commands to the innumerable ways to shoot yourself in the foot, I always struggled to use TLS certificates. I love how much easier (and cheaper) Let&#x27;s Encrypt made it to get certificates, but there are still plenty of things to struggle with.<p>That&#x27;s why we built Relay: a free, browser-based tool that streamlines the ACME workflow, especially for tricky setups like homelabs. Relay acts as a secure intermediary between your ACME client and public certificate authorities like Let&#x27;s Encrypt.<p>Some ways Relay provides a better experience:<p><pre><code>  - really fast, streamlined certificates in minutes, with any ACME client\n  - one-time upfront DNS delegation without inbound traffic or DNS credentials sprinkled everywhere\n  - clear insights into the whole ACME process and renewal reminders\n</code></pre>\nTry Relay now: <a href=\"https:&#x2F;&#x2F;anchor.dev&#x2F;relay\" rel=\"nofollow\">https:&#x2F;&#x2F;anchor.dev&#x2F;relay</a><p>Or read our blog post: <a href=\"https:&#x2F;&#x2F;anchor.dev&#x2F;blog&#x2F;lets-get-your-homelab-https-certified\" rel=\"nofollow\">https:&#x2F;&#x2F;anchor.dev&#x2F;blog&#x2F;lets-get-your-homelab-https-certifie...</a><p>Please give it a try (it only takes a couple minutes) and let me know what you think.",
      "time": 1755706398,
      "title": "Show HN: Anchor Relay – A faster, easier way to get Let's Encrypt certificates",
      "type": "story",
      "url": "https://anchor.dev/relay"
    },
    {
      "by": "ljlolel",
      "descendants": 45,
      "id": 44964693,
      "kids": [
        44965641,
        44965682,
        44965302,
        44965454,
        44966920,
        44967021,
        44966540,
        44965503
      ],
      "score": 65,
      "time": 1755714445,
      "title": "Lean proof of Fermat's Last Theorem [pdf]",
      "type": "story",
      "url": "https://imperialcollegelondon.github.io/FLT/blueprint.pdf"
    },
    {
      "by": "nukifw",
      "descendants": 18,
      "id": 44961847,
      "kids": [
        44967970,
        44962690,
        44962088,
        44962673,
        44962997,
        44962797,
        44962213,
        44962230,
        44962801
      ],
      "score": 90,
      "time": 1755697035,
      "title": "Improvements to OCaml code editing: the basics of a refactor engine",
      "type": "story",
      "url": "https://tarides.com/blog/2025-08-20-internship-report-refactoring-tools-coming-to-merlin/"
    },
    {
      "by": "kotri",
      "descendants": 144,
      "id": 44958621,
      "kids": [
        44964648,
        44959945,
        44959685,
        44962646,
        44958642,
        44961079,
        44959226,
        44958874,
        44960498,
        44959059,
        44959231,
        44959611
      ],
      "score": 185,
      "time": 1755664049,
      "title": "Analysis of the GFW's Unconditional Port 443 Block on August 20, 2025",
      "type": "story",
      "url": "https://gfw.report/blog/gfw_unconditional_rst_20250820/en/"
    },
    {
      "by": "anorak27",
      "descendants": 17,
      "id": 44964266,
      "kids": [
        44968106,
        44967440,
        44965987,
        44967515,
        44965630,
        44965683
      ],
      "score": 33,
      "time": 1755712221,
      "title": "Show HN: Nestable.dev – local whiteboard app with nestable canvases, deep links",
      "type": "story",
      "url": "https://nestable.dev/about"
    },
    {
      "by": "mtremmel",
      "descendants": 13,
      "id": 44939456,
      "kids": [
        44961815,
        44966597,
        44962049,
        44961422,
        44962352,
        44963522,
        44962766,
        44966356
      ],
      "score": 138,
      "time": 1755516512,
      "title": "MapLibre Tile: A next generation geospatial format optimized for rendering",
      "type": "story",
      "url": "https://arxiv.org/abs/2508.10791"
    },
    {
      "by": "rbanffy",
      "descendants": 11,
      "id": 44963391,
      "kids": [
        44964994,
        44964755
      ],
      "score": 41,
      "time": 1755707367,
      "title": "Best Options for Using AI in Chip Design",
      "type": "story",
      "url": "https://semiengineering.com/best-options-for-using-ai-in-chip-design/"
    },
    {
      "by": "abdusco",
      "descendants": 52,
      "id": 44956915,
      "kids": [
        44959147,
        44959014,
        44957293,
        44960906,
        44957973,
        44960401,
        44963502,
        44963138,
        44962699,
        44964425,
        44957416,
        44959594,
        44960666,
        44957120,
        44963360,
        44961228,
        44958475,
        44959082,
        44957268,
        44959236,
        44959130,
        44957894,
        44957851,
        44960022,
        44962562,
        44959113,
        44957890,
        44957557,
        44957560
      ],
      "score": 506,
      "time": 1755643276,
      "title": "How to Draw a Space Invader",
      "type": "story",
      "url": "https://muffinman.io/blog/invaders/"
    },
    {
      "by": "djhu9",
      "descendants": 177,
      "id": 44959092,
      "kids": [
        44961911,
        44959420,
        44962972,
        44963018,
        44959395,
        44961919,
        44959361,
        44959600,
        44960345,
        44962039,
        44959835,
        44962733,
        44959532,
        44962874,
        44961071,
        44961678,
        44959535,
        44961900,
        44959652,
        44962217,
        44960661,
        44959668,
        44961449,
        44959933,
        44964298,
        44959368,
        44964245,
        44959587,
        44961896,
        44961563,
        44960716,
        44959513
      ],
      "score": 157,
      "time": 1755669975,
      "title": "Databricks is raising a Series K Investment at >$100B valuation",
      "type": "story",
      "url": "https://www.databricks.com/company/newsroom/press-releases/databricks-raising-series-k-investment-100-billion-valuation"
    },
    {
      "by": "brgross",
      "descendants": 35,
      "id": 44962767,
      "kids": [
        44965799,
        44964279,
        44966581,
        44967918,
        44964907,
        44966122,
        44964973,
        44964014,
        44967511,
        44963993,
        44964560,
        44966711,
        44965360,
        44966500,
        44964287,
        44965203
      ],
      "score": 62,
      "text": "This app was designed to answer my wife’s question “what country would we hit if we went straight” (generally posed while pointing her phone)<p>But with two additional twists:<p>1. It loads up historical maps from different years (right now 1 BC, 700 AD, 1000 AD, 1300 AD, 1800 AD, 1900 AD) so you can see what you would hit if you had a time machine AND you went in the direction your phone is pointing<p>2. Tap a country&#x2F;territory for an (AI-generated) blurb on what you are pointing at<p>How it works: Starting from your phone’s bearing, we trace the great-circle in 200 km steps, prefilter candidate countries with bounding boxes (~5–10 instead of ~200), then check ~20 km points along each segment to catch coastlines and stop when the path first enters another country.<p>Great-circles (<a href=\"https:&#x2F;&#x2F;www.movable-type.co.uk&#x2F;scripts&#x2F;latlong.html\" rel=\"nofollow\">https:&#x2F;&#x2F;www.movable-type.co.uk&#x2F;scripts&#x2F;latlong.html</a>) are why you can hit Australia from NYC, even though when you look at a flat map that can be hard to see.<p>There might be some weird stuff in the explanations, I haven’t read all 1,400 of them. If you see something weird let me know and I will update it!<p>The app is free and doesn’t have ads or tracking — your location and bearing are only used locally to figure out where you are and what you’re pointing at<p>Probably will work best if you hold your phone pretty flat :)<p>Thank you to André Ourednik and all the contributors to the Historical Basemaps project: <a href=\"https:&#x2F;&#x2F;github.com&#x2F;aourednik&#x2F;historical-basemaps\" rel=\"nofollow\">https:&#x2F;&#x2F;github.com&#x2F;aourednik&#x2F;historical-basemaps</a>)",
      "time": 1755703381,
      "title": "Show HN: What country you would hit if you went straight where you're pointing",
      "type": "story",
      "url": "https://apps.apple.com/us/app/leascope/id6608979884"
    },
    {
      "by": "lisper",
      "descendants": 32,
      "id": 44937819,
      "kids": [
        44961859,
        44961285,
        44964126,
        44964221,
        44966861,
        44961761,
        44963473,
        44963240,
        44962401,
        44963213
      ],
      "score": 119,
      "time": 1755496904,
      "title": "The Block Stacking Problem",
      "type": "story",
      "url": "https://sites.pitt.edu/~jdnorton/Goodies/block_stacking/block_stacking.html"
    },
    {
      "by": "rhodey",
      "descendants": 29,
      "id": 44964332,
      "kids": [
        44967747,
        44966305,
        44965661,
        44966374,
        44965576,
        44966649
      ],
      "score": 18,
      "text": "Bizcardz.ai is a website where you design business cards which are converted to KiCad PCB schematics which can be manufactured (using metals) by companies such as Elecrow and PCBWay<p>The site is free. Elecrow charges about $1 per pcb in quantities of 50 and $0.80 in quantities of 100.<p>I have hacked away at this on and off for about two years so just happy to get it published",
      "time": 1755712462,
      "title": "Show HN: Bizcardz.ai – Custom metal business cards",
      "type": "story",
      "url": "https://github.com/rhodey/bizcardz.ai"
    },
    {
      "by": "aroussi",
      "descendants": 99,
      "id": 44960594,
      "kids": [
        44962221,
        44962068,
        44961383,
        44961318,
        44961973,
        44960808,
        44962468,
        44962547,
        44962704,
        44961146,
        44962470,
        44961572,
        44962899,
        44961895,
        44964259,
        44961768,
        44961593,
        44961801,
        44962311,
        44962663,
        44963122,
        44961939,
        44961926,
        44962258
      ],
      "score": 152,
      "text": "I built a lightweight project management workflow to keep AI-driven development organized.<p>The problem was that context kept disappearing between tasks. With multiple Claude agents running in parallel, I’d lose track of specs, dependencies, and history. External PM tools didn’t help because syncing them with repos always created friction.<p>The solution was to treat GitHub Issues as the database. The &quot;system&quot; is ~50 bash scripts and markdown configs that:<p>- Brainstorm with you to create a markdown PRD, spins up an epic, and decomposes it into tasks and syncs them with GitHub issues\n- Track progress across parallel streams\n- Keep everything traceable back to the original spec\n- Run fast from the CLI (commands finish in seconds)<p>We’ve been using it internally for a few months and it’s cut our shipping time roughly in half. Repo: <a href=\"https:&#x2F;&#x2F;github.com&#x2F;automazeio&#x2F;ccpm\" rel=\"nofollow\">https:&#x2F;&#x2F;github.com&#x2F;automazeio&#x2F;ccpm</a><p>It’s still early and rough around the edges, but has worked well for us. I’d love feedback from others experimenting with GitHub-centric project management or AI-driven workflows.",
      "time": 1755685932,
      "title": "Show HN: Project management system for Claude Code",
      "type": "story",
      "url": "https://github.com/automazeio/ccpm"
    },
    {
      "by": "Sayrus",
      "descendants": 278,
      "id": 44957454,
      "kids": [
        44959726,
        44957692,
        44957823,
        44958490,
        44959596,
        44957629,
        44958353,
        44959228,
        44961194,
        44957546,
        44957755,
        44958712,
        44958787,
        44958028,
        44958367,
        44958407,
        44958276,
        44957699,
        44957716,
        44962054,
        44958705,
        44958734,
        44959673,
        44959251,
        44959569,
        44961811,
        44957664,
        44958540,
        44957693,
        44958134,
        44958055,
        44957724,
        44958814
      ],
      "score": 756,
      "time": 1755649080,
      "title": "Copilot broke audit logs, but Microsoft won't tell customers",
      "type": "story",
      "url": "https://pistachioapp.com/blog/copilot-broke-your-audit-log"
    },
    {
      "by": "surprisetalk",
      "descendants": 1,
      "id": 44941049,
      "kids": [
        44964842
      ],
      "score": 6,
      "time": 1755527396,
      "title": "How Does a Blind Model See the Earth?",
      "type": "story",
      "url": "https://www.lesswrong.com/posts/xwdRzJxyqFqgXTWbH/how-does-a-blind-model-see-the-earth"
    },
    {
      "by": "thundergolfer",
      "descendants": 175,
      "id": 44958400,
      "kids": [
        44960010,
        44960427,
        44961044,
        44961978,
        44960735,
        44960265,
        44959665,
        44960842,
        44960403,
        44964845,
        44959464,
        44961494,
        44960858,
        44960673,
        44959842,
        44963416,
        44963758,
        44964673,
        44962890,
        44961005,
        44960466,
        44963285,
        44960458,
        44961364,
        44959865,
        44959980,
        44962770,
        44960202,
        44960042,
        44960383,
        44960915,
        44959836,
        44960930,
        44959995,
        44960807,
        44961384,
        44961270,
        44960791,
        44963147,
        44959978,
        44960852,
        44961326,
        44960220,
        44961143,
        44959916,
        44960585,
        44960073
      ],
      "score": 190,
      "time": 1755660606,
      "title": "Modern CI is too complex and misdirected (2021)",
      "type": "story",
      "url": "https://gregoryszorc.com/blog/2021/04/07/modern-ci-is-too-complex-and-misdirected/"
    },
    {
      "by": "mbix77",
      "descendants": 224,
      "id": 44959073,
      "kids": [
        44959344,
        44960280,
        44960920,
        44960873,
        44959346,
        44961053,
        44959218,
        44959817,
        44959795,
        44959304,
        44964834,
        44964460,
        44959318,
        44959997,
        44967640,
        44959209,
        44961298,
        44959289,
        44961070,
        44959381,
        44961509,
        44962261,
        44960788,
        44959511,
        44960639,
        44960784,
        44959492
      ],
      "score": 486,
      "text": "I have recently installed this extension on FF: <a href=\"https:&#x2F;&#x2F;addons.mozilla.org&#x2F;en-US&#x2F;firefox&#x2F;addon&#x2F;port-authority&#x2F;\" rel=\"nofollow\">https:&#x2F;&#x2F;addons.mozilla.org&#x2F;en-US&#x2F;firefox&#x2F;addon&#x2F;port-authorit...</a> and yesterday I visited this website: <a href=\"https:&#x2F;&#x2F;ceac.state.gov&#x2F;genniv&#x2F;\" rel=\"nofollow\">https:&#x2F;&#x2F;ceac.state.gov&#x2F;genniv&#x2F;</a> and I got a notification that the website tried to do a port-scan of my private network.<p>Is this a common thing? I have just recently installed the extension, so I am not sure if there are a lot of other websites who do it.<p>Since looking into it, I noticed that uBlock Origin already has the default list &quot;Block Outsider Intrusion into LAN&quot; but it wasn&#x27;t enabled.",
      "time": 1755669783,
      "title": "Ask HN: Why does the US Visa application website do a port-scan of my network?",
      "type": "story"
    },
    {
      "by": "ghuntley",
      "descendants": 370,
      "id": 44957443,
      "kids": [
        44957726,
        44957594,
        44957647,
        44962085,
        44957825,
        44960638,
        44957510,
        44957565,
        44957529,
        44959544,
        44957515,
        44961632,
        44957673,
        44961024,
        44957597,
        44958244,
        44966183,
        44957976,
        44959951,
        44960874,
        44959769,
        44961247,
        44960347,
        44959893,
        44961171,
        44963504,
        44961720,
        44960191,
        44961369,
        44962872,
        44961644,
        44958197,
        44960391,
        44958972,
        44961022,
        44958147,
        44958130,
        44962037,
        44962177,
        44960568,
        44960418,
        44958368,
        44959482,
        44957828,
        44958598,
        44961365,
        44958544,
        44961119,
        44957806,
        44957776,
        44958209,
        44961651,
        44957770,
        44957860,
        44963116,
        44957625,
        44957937,
        44960764,
        44961008,
        44957882,
        44962063,
        44959960,
        44959022,
        44959424,
        44960688,
        44959503,
        44958336,
        44958114,
        44960108,
        44957653,
        44957549,
        44960965,
        44960519,
        44959388,
        44958786,
        44958328,
        44962522,
        44964140,
        44959397,
        44961607
      ],
      "score": 780,
      "time": 1755648903,
      "title": "AGENTS.md – Open format for guiding coding agents",
      "type": "story",
      "url": "https://agents.md/"
    },
    {
      "by": "zt",
      "descendants": 8,
      "id": 44958004,
      "kids": [
        44958704,
        44966800
      ],
      "score": 29,
      "time": 1755655029,
      "title": "Skill issues – Dialectical Behavior Therapy and its discontents (2024)",
      "type": "story",
      "url": "https://www.thedriftmag.com/skill-issues/"
    },
    {
      "by": "beardyw",
      "descendants": 289,
      "id": 44939165,
      "kids": [
        44961376,
        44958623,
        44960891,
        44958881,
        44945180,
        44959005,
        44961505,
        44963325,
        44959061,
        44960935,
        44961029,
        44939623,
        44961609,
        44961373,
        44958903,
        44961587,
        44963873,
        44962384,
        44941964,
        44959166,
        44958825,
        44961568,
        44961093,
        44958595,
        44962385,
        44962642,
        44961016,
        44961773,
        44959169,
        44958802,
        44961446,
        44958840,
        44962610,
        44961039,
        44958980,
        44944974,
        44964959,
        44961063,
        44960775,
        44958763,
        44959145,
        44959121,
        44961349,
        44963242,
        44962971,
        44961571,
        44961036,
        44961332,
        44960889,
        44960989,
        44959085,
        44960976
      ],
      "score": 119,
      "time": 1755513445,
      "title": "The End of Handwriting",
      "type": "story",
      "url": "https://www.wired.com/story/the-end-of-handwriting/"
    },
    {
      "by": "alphabetting",
      "descendants": 107,
      "id": 44943666,
      "kids": [
        44960677,
        44959670,
        44958549,
        44963128,
        44962644,
        44959154,
        44966219,
        44958995,
        44961633,
        44958214,
        44961226,
        44965140,
        44958466,
        44959114,
        44959624,
        44948290,
        44959227,
        44960531,
        44962565,
        44961953
      ],
      "score": 364,
      "time": 1755541116,
      "title": "How to Think About GPUs",
      "type": "story",
      "url": "https://jax-ml.github.io/scaling-book/gpus/"
    },
    {
      "by": "ethegwo",
      "descendants": 5,
      "id": 44939873,
      "kids": [
        44963717,
        44966880,
        44963533,
        44962732,
        44963378
      ],
      "score": 44,
      "text": "Hi community, we just released <a href=\"https:&#x2F;&#x2F;github.com&#x2F;tonbo-io&#x2F;typed-arrow\" rel=\"nofollow\">https:&#x2F;&#x2F;github.com&#x2F;tonbo-io&#x2F;typed-arrow</a>.<p>When working with arrow-rs, we noticed that schemas are declared at runtime. This often leads to runtime errors and makes development less safe.<p>typed-arrow takes a different approach:<p>- Schemas are declared at compile time with Rust’s type system.<p>- This eliminates runtime schema errors.<p>- And introduces no runtime overhead — everything is checked and generated by the compiler.<p>If you’ve run into Arrow runtime schema issues, and your schema is stable (not defined or switched at runtime), this project might be useful.",
      "time": 1755520476,
      "title": "Show HN: Typed-arrow – compile‑time Arrow schemas for Rust",
      "type": "story",
      "url": "https://github.com/tonbo-io/typed-arrow"
    },
    {
      "by": "moklick",
      "descendants": 6,
      "id": 44939874,
      "kids": [
        44965118,
        44965161,
        44964384,
        44963972,
        44963455,
        44964415,
        44963621
      ],
      "score": 34,
      "time": 1755520483,
      "title": "Show HN: Strudel Flow, a pattern sequencer built with Strudel and React Flow",
      "type": "story",
      "url": "https://github.com/xyflow/strudel-flow"
    },
    {
      "by": "jnord",
      "descendants": 71,
      "id": 44957157,
      "kids": [
        44961663,
        44957824,
        44957968,
        44961643,
        44961846,
        44959102,
        44958891,
        44959629
      ],
      "score": 146,
      "time": 1755645528,
      "title": "Tiny microbe challenges the definition of cellular life",
      "type": "story",
      "url": "https://nautil.us/a-rogue-new-life-form-1232095/"
    },
    {
      "by": "rbanffy",
      "descendants": 96,
      "id": 44939849,
      "kids": [
        44959633,
        44959323,
        44961912,
        44963887,
        44961729,
        44962910,
        44962557,
        44962630,
        44960157,
        44962695,
        44962722,
        44961256,
        44960177,
        44954667
      ],
      "score": 116,
      "time": 1755520278,
      "title": "Intel Foundry demonstrates first Arm-based chip on 18a node",
      "type": "story",
      "url": "https://hothardware.com/news/intel-foundry-demos-deer-creek-falls-reference-soc"
    },
    {
      "by": "jimmcslim",
      "descendants": 1,
      "id": 44967195,
      "kids": [
        44968037
      ],
      "score": 12,
      "time": 1755728872,
      "title": "What's the point of vibe coding if I still have to pay a dev to fix it?",
      "type": "story",
      "url": "https://old.reddit.com/r/vibecoding/comments/1mu6t8z/whats_the_point_of_vibe_coding_if_i_still_have_to/"
    },
    {
      "by": "captainhorst",
      "descendants": 4,
      "id": 44964701,
      "kids": [
        44965496,
        44966480
      ],
      "score": 54,
      "time": 1755714503,
      "title": "Zig 0.15.1 Release Notes",
      "type": "story",
      "url": "https://ziglang.org/download/0.15.1/release-notes.html"
    },
    {
      "by": "mooreds",
      "descendants": 99,
      "id": 44958020,
      "kids": [
        44960009,
        44960189,
        44959443,
        44958677,
        44961263,
        44960640,
        44962467,
        44958927,
        44958243,
        44958158,
        44959385,
        44960000,
        44960148,
        44959807,
        44959050,
        44959559,
        44960178,
        44961451,
        44959523,
        44959133,
        44963049,
        44960160,
        44959751,
        44959753,
        44961023,
        44959293,
        44959220,
        44965924,
        44959406,
        44960535,
        44963511,
        44960340,
        44960133,
        44959954,
        44959441,
        44965564,
        44959747
      ],
      "score": 195,
      "time": 1755655211,
      "title": "The value of hitting the HN front page",
      "type": "story",
      "url": "https://www.mooreds.com/wordpress/archives/3530"
    },
    {
      "by": "amalinovic",
      "descendants": 6,
      "id": 44938667,
      "kids": [
        44962356,
        44963409,
        44958555,
        44958818
      ],
      "score": 81,
      "time": 1755507653,
      "title": "Rails Charts Using ECharts from Apache",
      "type": "story",
      "url": "https://github.com/railsjazz/rails_charts"
    },
    {
      "by": "marcuschong",
      "descendants": 4,
      "id": 44965577,
      "kids": [
        44967562,
        44967530,
        44966960,
        44967067,
        44967579,
        44966498
      ],
      "score": 29,
      "time": 1755718965,
      "title": "Claim: GPT-5-pro can prove new interesting mathematics",
      "type": "story",
      "url": "https://twitter.com/SebastienBubeck/status/1958198661139009862"
    },
    {
      "by": "dmonroy",
      "descendants": 7,
      "id": 44963161,
      "kids": [
        44964720,
        44966209,
        44965625
      ],
      "score": 13,
      "time": 1755705873,
      "title": "We Found Zero Low-Severity Bugs in 165 AI Code Reports. Zero",
      "type": "story",
      "url": "https://shamans.dev/research/ai-code-security-analysis"
    },
    {
      "by": "aspenmayer",
      "descendants": 128,
      "id": 44956730,
      "kids": [
        44957049,
        44967983,
        44956877,
        44957016,
        44957045,
        44957008,
        44957642,
        44957296,
        44957566,
        44957053,
        44957930,
        44957042,
        44956886,
        44963182,
        44958144,
        44956993,
        44960199,
        44957403,
        44956952,
        44957040,
        44958027,
        44957218,
        44957061,
        44962581,
        44957027,
        44957321,
        44962896,
        44957396,
        44957662,
        44957228,
        44957034,
        44956750,
        44957916,
        44957423,
        44956806,
        44957090
      ],
      "score": 124,
      "time": 1755641489,
      "title": "The forgotten meaning of \"jerk\"",
      "type": "story",
      "url": "https://languagehat.com/the-forgotten-meaning-of-jerk/"
    },
    {
      "by": "dbalatero",
      "descendants": 3,
      "id": 44966994,
      "kids": [
        44968000,
        44967513,
        44967536
      ],
      "score": 15,
      "time": 1755727336,
      "title": "I Preserve the Old Ways I Guess?",
      "type": "story",
      "url": "https://learncodethehardway.com/blog/34-i-preserve-the-old-ways-i-guess/"
    },
    {
      "by": "mikasjp",
      "descendants": 25,
      "id": 44938718,
      "kids": [
        44960151,
        44963459,
        44962191,
        44960093,
        44938719,
        44965213,
        44959811
      ],
      "score": 70,
      "time": 1755508276,
      "title": "Fast and observable background job processing for .NET",
      "type": "story",
      "url": "https://github.com/mikasjp/BusyBee"
    },
    {
      "by": "indrora",
      "descendants": 34,
      "id": 44963594,
      "kids": [
        44964361,
        44963988,
        44964255,
        44963864,
        44963904,
        44963998,
        44964141
      ],
      "score": 76,
      "time": 1755708815,
      "title": "Debugging Behind the Iron Curtain (2010)",
      "type": "story",
      "url": "https://www.jakepoz.com/debugging-behind-the-iron-curtain/"
    },
    {
      "by": "ciconia",
      "descendants": 27,
      "id": 44939423,
      "kids": [
        44958926,
        44963342,
        44959983
      ],
      "score": 82,
      "time": 1755516142,
      "title": "How I Made Ruby Faster Than Ruby",
      "type": "story",
      "url": "https://noteflakes.com/articles/2025-08-18-how-to-make-ruby-faster"
    },
    {
      "by": "waerhert",
      "descendants": 112,
      "id": 44949895,
      "kids": [
        44951138,
        44960758,
        44952538,
        44950596,
        44956674,
        44950979,
        44951181,
        44950430,
        44956474,
        44950393,
        44950934,
        44951747,
        44953794,
        44950666,
        44951019,
        44951132,
        44950364,
        44951354,
        44955976
      ],
      "score": 300,
      "time": 1755596787,
      "title": "Custom telescope mount using harmonic drives and ESP32",
      "type": "story",
      "url": "https://www.svendewaerhert.com/blog/telescope-mount/"
    },
    {
      "by": "TheFreim",
      "descendants": 212,
      "id": 44954823,
      "kids": [
        44955114,
        44955220,
        44955141,
        44956596,
        44955212,
        44957671,
        44955061,
        44956577,
        44955044,
        44958828,
        44955366,
        44955283,
        44955371,
        44959886,
        44955138,
        44958651,
        44955084,
        44956897,
        44955309,
        44959686,
        44960467,
        44956415,
        44957134,
        44955339,
        44955107,
        44956955,
        44955104,
        44955241,
        44955039,
        44955306
      ],
      "score": 140,
      "time": 1755628945,
      "title": "AnduinOS",
      "type": "story",
      "url": "https://www.anduinos.com/"
    },
    {
      "by": "janjones",
      "descendants": 54,
      "id": 44964366,
      "kids": [
        44965440,
        44965373,
        44966682,
        44966146,
        44966159,
        44965458,
        44965365,
        44965746
      ],
      "score": 68,
      "time": 1755712587,
      "title": "Zed for Windows: What's Taking So Long?",
      "type": "story",
      "url": "https://zed.dev/blog/windows-progress-report"
    },
    {
      "by": "nemoniac",
      "descendants": 18,
      "id": 44939654,
      "kids": [
        44947366,
        44961736
      ],
      "score": 70,
      "time": 1755518239,
      "title": "Customizing Lisp REPLs",
      "type": "story",
      "url": "https://aartaka.me/customize-repl.html"
    },
    {
      "by": "pera",
      "descendants": 23,
      "id": 44965187,
      "kids": [
        44966017,
        44965771,
        44966252,
        44967188,
        44966311,
        44965519,
        44965776,
        44966387
      ],
      "score": 32,
      "time": 1755717000,
      "title": "Tech, chip stock sell-off continues as AI bubble fears mount",
      "type": "story",
      "url": "https://finance.yahoo.com/news/tech-chip-stock-sell-off-continues-as-ai-bubble-fears-mount-184837135.html"
    },
    {
      "by": "susam",
      "descendants": 16,
      "id": 44939902,
      "kids": [
        44944879,
        44961943,
        44961836,
        44961839,
        44959784,
        44960402
      ],
      "score": 67,
      "time": 1755520626,
      "title": "Gaussian Processes for Machine Learning (2006) [pdf]",
      "type": "story",
      "url": "https://gaussianprocess.org/gpml/chapters/RW.pdf"
    },
    {
      "by": "spiridow",
      "descendants": 220,
      "id": 44953032,
      "kids": [
        44953558,
        44955570,
        44956931,
        44955813,
        44954260,
        44956402,
        44959070,
        44954557,
        44954331,
        44955721,
        44956479,
        44953773,
        44955569,
        44953731,
        44954502,
        44956622,
        44953985,
        44954883,
        44955010,
        44962446,
        44958949,
        44954242,
        44954351,
        44954328,
        44962469,
        44955043,
        44956232,
        44960628,
        44955860,
        44955798,
        44954645,
        44953866,
        44959695,
        44956325,
        44959422,
        44958845,
        44955886,
        44954271,
        44958159,
        44957230,
        44955277,
        44961007,
        44957022,
        44957912,
        44966679,
        44954140,
        44964687,
        44954774,
        44953655,
        44954206
      ],
      "score": 664,
      "time": 1755618915,
      "title": "How we exploited CodeRabbit: From simple PR to RCE and write access on 1M repos",
      "type": "story",
      "url": "https://research.kudelskisecurity.com/2025/08/19/how-we-exploited-coderabbit-from-a-simple-pr-to-rce-and-write-access-on-1m-repositories/"
    },
    {
      "by": "akorotkov",
      "descendants": 1,
      "id": 44950972,
      "kids": [
        44951231
      ],
      "score": 16,
      "time": 1755608087,
      "title": "Ordered Insertion Optimization in OrioleDB",
      "type": "story",
      "url": "https://www.orioledb.com/blog/batch-inserts"
    },
    {
      "by": "quantummagic",
      "descendants": 104,
      "id": 44926143,
      "kids": [
        44958280,
        44926959,
        44958140,
        44958417,
        44927811,
        44958684,
        44958530,
        44958263,
        44961510,
        44927578,
        44958185,
        44963507,
        44958693,
        44961473
      ],
      "score": 71,
      "time": 1755371641,
      "title": "Tiny, removable \"mini SSD\" could eventually be a big deal for gaming handhelds",
      "type": "story",
      "url": "https://arstechnica.com/gadgets/2025/08/tiny-removable-mini-ssd-could-eventually-be-a-big-deal-for-gaming-handhelds/"
    },
    {
      "by": "secondrow",
      "descendants": 43,
      "id": 44953575,
      "kids": [
        44957461,
        44967632,
        44956631,
        44956056,
        44956832,
        44957048,
        44956761,
        44955973,
        44957466,
        44957954,
        44956521
      ],
      "score": 147,
      "time": 1755622155,
      "title": "Why Semantic Layers Matter (and how to build one with DuckDB)",
      "type": "story",
      "url": "https://motherduck.com/blog/semantic-layer-duckdb-tutorial/"
    },
    {
      "by": "CharlesW",
      "descendants": 1,
      "id": 44967218,
      "kids": [
        44967589
      ],
      "score": 21,
      "time": 1755729136,
      "title": "Steam's Content Removal Could Be a Wider Consequence of Project 2025",
      "type": "story",
      "url": "https://www.thegamer.com/steams-adult-content-ban-has-been-plotted-for-a-year/"
    },
    {
      "by": "zaidqureshi",
      "descendants": 50,
      "id": 44950661,
      "kids": [
        44957318,
        44967386,
        44953049,
        44952521,
        44951202,
        44958918,
        44952041,
        44953432,
        44951209,
        44959064,
        44953294,
        44954048,
        44951129,
        44951984,
        44952710,
        44956299,
        44951108
      ],
      "score": 106,
      "text": "Hi HN, we are Zaid, Muhammad and Hammad, the co-founders of Uplift AI (<a href=\"https:&#x2F;&#x2F;upliftai.org\">https:&#x2F;&#x2F;upliftai.org</a>). We build models that speak underserved languages — today: Urdu, Sindhi, and Balochi.<p>A billion people worldwide can&#x27;t read. In countries like Pakistan – the 5th most populous country – 42% of adults are illiterate. This holds back the entire economy: patients can&#x27;t read medical reports, parents can&#x27;t help with homework, banks can&#x27;t go fully digital, farmers can&#x27;t research best practices, and people memorize smartphone app button sequences. Voice AI interfaces can fix all of this, and we think this will perhaps be one of the great benefits of modern AI.<p>Right now, existing voice models barely work for these languages, and big tech is moving slowly.<p>Uplift AI was originally a side project to make datasets for translation and voice models. For us it was a &quot;cool side-thing&quot; to work on, not an &quot;important full-time thing&quot; to work on. With some initial data we hacked together a Urdu Voice Bot on Whatsapp and gave it to one domestic worker. In two days 800 people were using it. When we dived deeper into understanding the users, we learned that text interfaces don&#x27;t work for sooo many. So we started Uplift AI to solve this problem fulltime.<p>The most challenging part is that all the building blocks needed for great voice models are broken for these languages. For example, if you are creating a speech synthesis model, you will scrape a lot of data from youtube and auto-label it using a transcription model… all very easy to do in English. But it doesn&#x27;t work in under-served languages because the transcription modes are not accurate.<p>There are many other challenges. Like when you hire human transcribers to label the data, often they don&#x27;t have any spell correctors for their languages, and this creates lots of noise in the data… making it hard to train models with low data.  There are many more challenges in phonemes, silence detection, diacritization etc.<p>We solve these problems by making great internal tooling to help with data labeling. Also, we source our own data and don&#x27;t buy it. This is counterintuitive, but a big advantage over companies buying data and then training. By sourcing our own data we create the right data distributions and get much better models with much less data.  By doing the entire thing inhouse, (data, labeling, training, deploying) we are able to make a lot faster progress.<p>Today we publicly offer a text to speech APIs for Urdu, Sindhi, and Balochi. Here&#x27;s a video which shows this: <a href=\"https:&#x2F;&#x2F;www.loom.com&#x2F;share&#x2F;dcd5020967444c228e9c127151e7a9f5\" rel=\"nofollow\">https:&#x2F;&#x2F;www.loom.com&#x2F;share&#x2F;dcd5020967444c228e9c127151e7a9f5</a>.<p>Khan Academy is using our tech to dub videos to Urdu (<a href=\"https:&#x2F;&#x2F;ur.khanacademy.org\" rel=\"nofollow\">https:&#x2F;&#x2F;ur.khanacademy.org</a>).<p>Our models excel at informational use cases (like AI bots) but need more work in emotive use-cases like poetry.<p>We have been giving a lot of people private access in beta mode, and today are launching our models publicly. We believe this will be the fastest way for us to learn about areas that are not performing well so we can fix them quickly.<p>We&#x27;d love to hear from all of you, especially around your experiences with under-served languages (not just the Pakistani ones we&#x27;re starting with) and your comments in general.",
      "time": 1755605409,
      "title": "Launch HN: Uplift (YC S25) – Voice models for under-served languages",
      "type": "story"
    },
    {
      "by": "pabs3",
      "descendants": 43,
      "id": 44936535,
      "kids": [
        44967270,
        44967283,
        44966902,
        44966863,
        44966894,
        44967058,
        44966849,
        44966731,
        44966668,
        44966837,
        44966804,
        44966955,
        44966642
      ],
      "score": 46,
      "time": 1755480764,
      "title": "Gouach wants you to insert and pluck the cells from its Infinite e-bike battery",
      "type": "story",
      "url": "https://arstechnica.com/gadgets/2025/05/gouach-wants-you-to-insert-and-pluck-the-cells-from-its-infinite-e-bike-battery/"
    },
    {
      "by": "todsacerdoti",
      "descendants": 15,
      "id": 44956581,
      "kids": [
        44957078,
        44958044,
        44957831,
        44960124,
        44959841,
        44958793
      ],
      "score": 77,
      "time": 1755640110,
      "title": "Drunken Bishop (2023)",
      "type": "story",
      "url": "https://re.factorcode.org/2023/08/drunken-bishop.html"
    },
    {
      "by": "skadamat",
      "descendants": 11,
      "id": 44955459,
      "kids": [
        44957382,
        44957102
      ],
      "score": 149,
      "time": 1755632325,
      "title": "CRDT: Text Buffer",
      "type": "story",
      "url": "https://madebyevan.com/algos/crdt-text-buffer/"
    },
    {
      "by": "alixanderwang",
      "descendants": 71,
      "id": 44954524,
      "kids": [
        44955092,
        44961307,
        44957970,
        44958515,
        44956334,
        44958899,
        44959176,
        44961239,
        44955040,
        44956875,
        44955362,
        44957925,
        44958694,
        44955615,
        44956410,
        44957151,
        44955669,
        44956279,
        44958932,
        44959593,
        44955831,
        44957198
      ],
      "score": 426,
      "time": 1755627281,
      "title": "D2 (text to diagram tool) now supports ASCII renders",
      "type": "story",
      "url": "https://d2lang.com/blog/ascii/"
    },
    {
      "by": "voxadam",
      "descendants": 16,
      "id": 44963715,
      "kids": [
        44963777,
        44963716,
        44967418,
        44964932,
        44966348,
        44965796,
        44965660,
        44965298,
        44965185
      ],
      "score": 46,
      "time": 1755709450,
      "title": "Is the A.I. Sell-Off the Start of Something Bigger?",
      "type": "story",
      "url": "https://www.nytimes.com/2025/08/20/business/dealbook/ai-dip-blip-palantir-nvidia.html"
    },
    {
      "by": "Sean-Der",
      "descendants": 46,
      "id": 44955576,
      "kids": [
        44955726,
        44955746,
        44956361,
        44958905,
        44960112,
        44956213,
        44960931,
        44956486,
        44957374,
        44956055,
        44956081,
        44959127
      ],
      "score": 84,
      "text": "I have been working on making WebRTC + Embedded Devices easier for a few years. This is a hackathon project that pulled some of that together. I hope others build on it&#x2F;it inspires them to play with hardware. I worked on it with two other people and I had a lot of fun with some of the ideas that came out of it.<p>* Extendable&#x2F;hackable - I tried to keep the code as simple as possible so others can fork&#x2F;modify easily.<p>* Communicate with light. With function calling it changes the light bulb, so it can match your mood or feelings.<p>* Populate info from clients you control. I wanted to experiment with having it guide you through yesterday&#x2F;today.<p>* Phone as control. Setting up new devices can be frustrating. I liked that this didn&#x27;t require any WiFi setup, it just routed everything through your phone. Also cool then that they device doesn&#x27;t actually have any sensitive data on it.",
      "time": 1755632918,
      "title": "Show HN: OpenAI/reflect – Physical AI Assistant that illuminates your life",
      "type": "story",
      "url": "https://github.com/openai/openai-reflect"
    },
    {
      "by": "kushal2048",
      "descendants": 2,
      "id": 44963324,
      "kids": [
        44963513
      ],
      "score": 7,
      "text": "Hi All\nI wanted to share an early preview of Okapi an in-memory metrics engine that also integrates with existing datalakes. Modern software systems produce a mammoth amount of telemetry. While we can discuss whether or not this is necessary, we can all agree that it happens.<p>Most metrics engines today use proprietary formats to store data and don’t use disaggregated storage and compute. Okapi changes that by leveraging open data formats and integrating with existing data lakes. This makes it possible to use standard OLAP tools like Snowflake, Databricks,  DuckDB or even Jupyter &#x2F; Polars to run analysis workflows (such as anomaly detection) while avoiding vendor lock-in in two ways - you can bring your own workflows and have a swappable compute engine. Disaggregation also reduces Ops burden of maintaining your own storage and the compute engine can be scaled up and down on demand.<p>Not all data can reside in a data-lake&#x2F;object store though - this doesn’t work for recent data. To ease realtime queries Okapi first writes all metrics data to an in memory store and reads on recent data are served from this store. Metrics are rolled up as they arrive which helps ease memory pressure. Metrics are held in-memory for a configurable retention period after which it gets shipped out to object storage&#x2F;datalake (currently only Parquet export is supported). This allows fast reads on recent data while offloading query-processing for older data. On benchmarks queries on in-memory data finish in under a millisecond while having write throughput of ~280k samples per second. On a real deployment, there’d be network delays so YMMV.<p>Okapi it is still early — feedback, critiques, and contributions welcome. Cheers !",
      "time": 1755706979,
      "title": "Show HN: Okapi – a metrics engine based on open data formats",
      "type": "story",
      "url": "https://github.com/okapi-core/okapi"
    },
    {
      "by": "mikece",
      "descendants": 1,
      "id": 44965594,
      "kids": [
        44967969
      ],
      "score": 17,
      "time": 1755719056,
      "title": "Whistleblower Alleges Meta Artificially Boosted Shops Ads Performance",
      "type": "story",
      "url": "https://www.adweek.com/media/whistleblower-alleges-meta-artificially-boosted-shops-ads-performance/"
    },
    {
      "by": "westurner",
      "descendants": 1,
      "id": 44925066,
      "kids": [
        44925080,
        44962196
      ],
      "score": 13,
      "time": 1755363174,
      "title": "Graphene capacitors achieve rapid, high-depth modulation of terahertz waves",
      "type": "story",
      "url": "https://phys.org/news/2025-08-graphene-capacitors-rapid-high-depth.html"
    },
    {
      "by": "Ameo",
      "descendants": 24,
      "id": 44938622,
      "kids": [
        44953679,
        44954743,
        44960604,
        44955745,
        44957092,
        44952779,
        44953428,
        44953497,
        44954463,
        44956601,
        44954012,
        44953072,
        44952541,
        44952718
      ],
      "score": 140,
      "time": 1755507288,
      "title": "Geotoy – Shadertoy for 3D Geometry",
      "type": "story",
      "url": "https://3d.ameo.design/geotoy"
    },
    {
      "by": "todsacerdoti",
      "descendants": 11,
      "id": 44958752,
      "kids": [
        44959088,
        44959487,
        44961246,
        44960599
      ],
      "score": 34,
      "time": 1755665967,
      "title": "Type-machine",
      "type": "story",
      "url": "https://arthi-chaud.github.io/posts/type-machine/"
    },
    {
      "by": "inshinrei",
      "descendants": 9,
      "id": 44951200,
      "kids": [
        44960597,
        44962823,
        44959115,
        44958119,
        44959126,
        44962029
      ],
      "score": 16,
      "text": "hi! I&#x27;ve made a logger for JS&#x2F;TS. It&#x27;s easily extendable, easy to use and configure.<p>Would like to hear a feedback from you!",
      "time": 1755609637,
      "title": "Show HN: I've made an easy to extend and flexible JavaScript logger",
      "type": "story",
      "url": "https://github.com/inshinrei/halua"
    },
    {
      "by": "tlb",
      "descendants": 118,
      "id": 44939460,
      "kids": [
        44939661,
        44956443,
        44955316,
        44956384,
        44955944,
        44955359,
        44956444,
        44956309,
        44957231,
        44955377,
        44955174,
        44955365,
        44955702
      ],
      "score": 99,
      "time": 1755516553,
      "title": "The new geography of stolen goods",
      "type": "story",
      "url": "https://www.economist.com/interactive/britain/2025/08/17/the-new-geography-of-stolen-goods"
    },
    {
      "by": "pabs3",
      "descendants": 51,
      "id": 44950091,
      "kids": [
        44956571,
        44951609,
        44956218,
        44951235,
        44960721,
        44955791,
        44951597
      ],
      "score": 131,
      "time": 1755599561,
      "title": "PyPI Preventing Domain Resurrection Attacks",
      "type": "story",
      "url": "https://blog.pypi.org/posts/2025-08-18-preventing-domain-resurrections/"
    },
    {
      "by": "PaulHoule",
      "descendants": 0,
      "id": 44966881,
      "score": 4,
      "time": 1755726605,
      "title": "America's divisions causing workplace dysfunction",
      "type": "story",
      "url": "https://phys.org/news/2025-08-america-divisions-workplace-dysfunction.html"
    },
    {
      "by": "Tamaybes",
      "descendants": 0,
      "id": 44964008,
      "score": 4,
      "time": 1755711040,
      "title": "Economics of RL",
      "type": "story",
      "url": "https://www.mechanize.work/blog/cheap-rl-tasks-will-waste-compute/"
    },
    {
      "by": "jrsinclair",
      "descendants": 20,
      "id": 44938354,
      "kids": [
        44956998,
        44957757,
        44963245,
        44956549,
        44958849,
        44956929,
        44942395,
        44959184,
        44958878,
        44956799
      ],
      "score": 87,
      "time": 1755503850,
      "title": "The joy of recursion, immutable data, & pure functions: Making mazes with JS",
      "type": "story",
      "url": "https://jrsinclair.com/articles/2025/joy-of-immutable-data-recursion-pure-functions-javascript-mazes/"
    },
    {
      "by": "enceladus06",
      "descendants": 2,
      "id": 44966030,
      "kids": [
        44967409
      ],
      "score": 8,
      "time": 1755721484,
      "title": "Hacktoberfest 2025",
      "type": "story",
      "url": "https://hacktoberfest.com"
    },
    {
      "by": "BallsInIt",
      "descendants": 26,
      "id": 44927953,
      "kids": [
        44928795,
        44929716,
        44928519,
        44929749,
        44965842,
        44961453,
        44957257,
        44956980
      ],
      "score": 120,
      "time": 1755390327,
      "title": "Passive Microwave Repeaters",
      "type": "story",
      "url": "https://computer.rip/2025-08-16-passive-microwave-repeaters.html"
    },
    {
      "by": "kgwgk",
      "descendants": 50,
      "id": 44951862,
      "kids": [
        44955262,
        44953709,
        44953320,
        44953795,
        44953368,
        44954465,
        44955021,
        44965632,
        44953423,
        44953622,
        44953707,
        44954035,
        44958213,
        44954468,
        44954586,
        44953510,
        44954750,
        44954430,
        44953304,
        44960003
      ],
      "score": 161,
      "time": 1755613225,
      "title": "Positron, a New Data Science IDE",
      "type": "story",
      "url": "https://posit.co/blog/positron-product-announcement-aug-2025/"
    },
    {
      "by": "areoform",
      "descendants": 26,
      "id": 44952789,
      "kids": [
        44954505,
        44954056,
        44956176,
        44956561,
        44960926,
        44956446,
        44955519,
        44957517,
        44954270
      ],
      "score": 85,
      "time": 1755617695,
      "title": "A renovation project in Turkey led to the discovery of a lost city (2023)",
      "type": "story",
      "url": "https://www.atlasobscura.com/articles/derinkuyu-turkey-underground-city-strange-maps"
    },
    {
      "by": "_tk_",
      "descendants": 32,
      "id": 44963882,
      "kids": [
        44964111,
        44964408,
        44964336,
        44965230,
        44964665
      ],
      "score": 32,
      "time": 1755710314,
      "title": "NSA's Acting Director Tried to Save Top Scientist from Purge",
      "type": "story",
      "url": "https://www.nytimes.com/2025/08/20/us/politics/security-clearances-scientist-fired.html"
    },
    {
      "by": "nobet",
      "descendants": 260,
      "id": 44958145,
      "kids": [
        44958650,
        44960668,
        44961002,
        44958634,
        44959677,
        44967518,
        44962576,
        44958386,
        44958654,
        44960482,
        44959574,
        44963272,
        44962115,
        44958624,
        44960107,
        44958676,
        44960377,
        44958625,
        44958887,
        44958425,
        44958457,
        44959478,
        44958969,
        44958581,
        44958652,
        44958626,
        44960641,
        44966034,
        44958647,
        44961642,
        44961703,
        44962900,
        44958656,
        44960573
      ],
      "score": 118,
      "time": 1755656753,
      "title": "We’re Not So Special: A new book challenges human exceptionalism",
      "type": "story",
      "url": "https://democracyjournal.org/magazine/78/were-not-so-special/"
    },
    {
      "by": "speckx",
      "descendants": 61,
      "id": 44925570,
      "kids": [
        44926176,
        44926859,
        44926339,
        44926484,
        44926353,
        44926393,
        44926318,
        44926372,
        44926582,
        44926197,
        44926514,
        44926325,
        44927115,
        44941310,
        44926574,
        44926488,
        44926502,
        44926146,
        44926604,
        44926474,
        44926295,
        44926658,
        44929396,
        44926728
      ],
      "score": 218,
      "time": 1755367075,
      "title": "One person was able to claim 20M IPs",
      "type": "story",
      "url": "https://lists.nanog.org/archives/list/nanog@lists.nanog.org/thread/MMCCEQKA4UPGGWFWEBWLYKHTYCAOQIZS/#MMCCEQKA4UPGGWFWEBWLYKHTYCAOQIZS"
    },
    {
      "by": "tvdvd",
      "descendants": 68,
      "id": 44915897,
      "kids": [
        44949160,
        44949082,
        44950025,
        44951677,
        44949963,
        44915950,
        44949769,
        44949665,
        44950675,
        44948652,
        44949126,
        44950156,
        44950092,
        44952841,
        44949221,
        44949367,
        44953137,
        44955871,
        44949439,
        44949863,
        44949492,
        44950417,
        44949794,
        44953609,
        44950794,
        44950608,
        44952024,
        44953152,
        44957608,
        44955960
      ],
      "score": 582,
      "time": 1755282647,
      "title": "Lazy-brush – smooth drawing with mouse or finger",
      "type": "story",
      "url": "https://lazybrush.dulnan.net"
    },
    {
      "by": "xenodium",
      "descendants": 157,
      "id": 44953316,
      "kids": [
        44954721,
        44955917,
        44954486,
        44954323,
        44957868,
        44954973,
        44962225,
        44954203,
        44956953,
        44956735,
        44958155,
        44953935,
        44954704,
        44953982,
        44953526,
        44953699,
        44961344,
        44961525,
        44954359,
        44954621,
        44955146,
        44953541,
        44954417,
        44953643
      ],
      "score": 280,
      "time": 1755620521,
      "title": "Emacs as your video-trimming tool",
      "type": "story",
      "url": "https://xenodium.com/emacs-as-your-video-trimming-tool"
    }
  ]
}