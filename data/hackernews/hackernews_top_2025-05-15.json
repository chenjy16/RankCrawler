{
  "fetch_time": "2025-05-15 01:12:43",
  "stories": [
    {
      "by": "Fysi",
      "descendants": 182,
      "id": 43985489,
      "kids": [
        43986909,
        43986056,
        43990118,
        43987287,
        43990645,
        43986870,
        43990366,
        43986283,
        43987447,
        43987310,
        43985993,
        43985878,
        43986661,
        43989248,
        43986854,
        43989197,
        43986308,
        43988235,
        43988871,
        43986867,
        43985774,
        43988124,
        43989257,
        43987306,
        43988245,
        43987369,
        43989656,
        43989150,
        43989797,
        43987081,
        43990728,
        43988596,
        43987550,
        43987029,
        43986280,
        43989314,
        43986216,
        43985797,
        43989343,
        43988485,
        43988727,
        43988308,
        43988798,
        43987856,
        43987286,
        43990800,
        43987833,
        43988718,
        43986886,
        43985799,
        43986627,
        43985790,
        43985928
      ],
      "score": 657,
      "text": "See also <a href=\"https:&#x2F;&#x2F;www.nature.com&#x2F;articles&#x2F;d41586-025-01523-z\" rel=\"nofollow\">https:&#x2F;&#x2F;www.nature.com&#x2F;articles&#x2F;d41586-025-01523-z</a> (<a href=\"https:&#x2F;&#x2F;archive.is&#x2F;NBaXE\" rel=\"nofollow\">https:&#x2F;&#x2F;archive.is&#x2F;NBaXE</a>)",
      "time": 1747235415,
      "title": "AlphaEvolve: A Gemini-powered coding agent for designing advanced algorithms",
      "type": "story",
      "url": "https://deepmind.google/discover/blog/alphaevolve-a-gemini-powered-coding-agent-for-designing-advanced-algorithms/"
    },
    {
      "by": "shenli3514",
      "descendants": 47,
      "id": 43989497,
      "kids": [
        43990777,
        43990519,
        43990729,
        43990594,
        43990596,
        43990502,
        43990613,
        43990062,
        43990129,
        43990334,
        43990274
      ],
      "score": 91,
      "time": 1747258785,
      "title": "Migrating to Postgres",
      "type": "story",
      "url": "https://engineering.usemotion.com/migrating-to-postgres-3c93dff9c65d"
    },
    {
      "by": "edunteman",
      "descendants": 31,
      "id": 43988381,
      "kids": [
        43989752,
        43990420,
        43988789,
        43989430,
        43989033,
        43989464,
        43989382,
        43988590,
        43989862,
        43989416,
        43989296,
        43989110,
        43988980,
        43990185
      ],
      "score": 134,
      "text": "Hi HN! Erik here from Pig.dev, and today I&#x27;d like to share a new project we&#x27;ve just open sourced:<p>Muscle Mem is an SDK that records your agent&#x27;s tool-calling patterns as it solves tasks, and will deterministically replay those learned trajectories whenever the task is encountered again, falling back to agent mode if edge cases are detected. Like a JIT compiler, for behaviors.<p>At Pig, we built computer-use agents for automating legacy Windows applications (healthcare, lending, manufacturing, etc).<p>A recurring theme we ran into was that businesses <i>already</i> had RPA (pure-software scripts), and it worked for them in most cases. The pull to agents as an RPA alternative was <i>not</i> to have an infinitely flexible &quot;AI Employees&quot; as tech Twitter&#x2F;X may want you to think, but simply because their RPA breaks under occasional edge-cases and agents can gracefully handle those cases.<p>Using a pure-agent approach proved to be highly wasteful. Window&#x27;s accessibility APIs are poor, so you&#x27;re generally stuck using pure-vision agents, which can run around $40&#x2F;hr in token costs and take 5x longer than a human to perform a workflow. At this point, you&#x27;re better off hiring a human.<p>The goal of Muscle-Mem is to get LLMs out of the hot path of repetitive automations, intelligently swapping between script-based execution for repeat cases, and agent-based automations for discovery and self-healing.<p>While inspired by computer-use environments, Muscle Mem is designed to generalize to any automation performing discrete tasks in dynamic environments. It took a great deal of thought to figure out an API that generalizes, which I cover more deeply in this blog:\n<a href=\"https:&#x2F;&#x2F;erikdunteman.com&#x2F;blog&#x2F;muscle-mem&#x2F;\" rel=\"nofollow\">https:&#x2F;&#x2F;erikdunteman.com&#x2F;blog&#x2F;muscle-mem&#x2F;</a><p>Check out the repo, consider giving it a star, or dive deeper into the above blog. I look forward to your feedback!",
      "time": 1747251506,
      "title": "Show HN: Muscle-Mem, a behavior cache for AI agents",
      "type": "story",
      "url": "https://github.com/pig-dot-dev/muscle-mem"
    },
    {
      "by": "_kush",
      "descendants": 249,
      "id": 43983871,
      "kids": [
        43990206,
        43985557,
        43986653,
        43984442,
        43984462,
        43985366,
        43985947,
        43984729,
        43984458,
        43989443,
        43986598,
        43984491,
        43989281,
        43990243,
        43987563,
        43984652,
        43989793,
        43987686,
        43987108,
        43987201,
        43986839,
        43987851,
        43984959,
        43985374,
        43984626,
        43988807,
        43986063,
        43988280,
        43987974,
        43984762,
        43985182,
        43985609,
        43986177,
        43984909,
        43985320,
        43984932,
        43985332,
        43985298,
        43988239,
        43986964,
        43984633,
        43985108,
        43987911,
        43984429
      ],
      "score": 502,
      "time": 1747226799,
      "title": "What is HDR, anyway?",
      "type": "story",
      "url": "https://www.lux.camera/what-is-hdr/"
    },
    {
      "by": "pavel_lishin",
      "descendants": 15,
      "id": 43990333,
      "kids": [
        43990817,
        43990576,
        43990772,
        43990492
      ],
      "score": 75,
      "time": 1747265949,
      "title": "Copaganda: How Police and the Media Manipulate Our News",
      "type": "story",
      "url": "https://www.teenvogue.com/story/copaganda-when-the-police-and-the-media-manipulate-our-news"
    },
    {
      "by": "nxa",
      "descendants": 101,
      "id": 43988533,
      "kids": [
        43989245,
        43989512,
        43989060,
        43989603,
        43988592,
        43990625,
        43989961,
        43989014,
        43989543,
        43990084,
        43990566,
        43989378,
        43989077,
        43990517,
        43990190,
        43989509,
        43989048,
        43989967,
        43989254,
        43990304,
        43990052,
        43989486,
        43989584,
        43988904,
        43989084,
        43988786,
        43989020,
        43989205,
        43989647,
        43990384,
        43988601,
        43989897,
        43989996,
        43988948,
        43989216,
        43989070,
        43989348,
        43988842,
        43989162,
        43988999,
        43989021,
        43989510,
        43989569
      ],
      "score": 78,
      "text": "I&#x27;ve been playing with embeddings and wanted to try out what results the embedding layer will produce based on just word-by-word input and addition &#x2F; subtraction, beyond what many videos &#x2F; papers mention (like the obvious king-man+woman=queen). So I built something that doesn&#x27;t just give the first answer, but ranks the matches based on distance &#x2F; cosine symmetry. I polished it a bit so that others can try it out, too.<p>For now, I only have nouns (and some proper nouns) in the dataset, and pick the most common interpretation among the homographs. Also, it&#x27;s case sensitive.",
      "time": 1747252471,
      "title": "Show HN: Semantic Calculator (king-man+woman=?)",
      "type": "story",
      "url": "https://calc.datova.ai"
    },
    {
      "by": "jaypatelani",
      "descendants": 65,
      "id": 43985971,
      "kids": [
        43990713,
        43986731,
        43986924,
        43986421,
        43987608,
        43988262,
        43987173,
        43990453,
        43990095,
        43988057,
        43989786,
        43987109,
        43987334,
        43987364,
        43986620,
        43986390,
        43987680,
        43987971,
        43987051,
        43987514
      ],
      "score": 245,
      "time": 1747237830,
      "title": "A server that wasn't meant to exist",
      "type": "story",
      "url": "https://it-notes.dragas.net/2025/05/13/the_server_that_wasnt_meant_to_exist/"
    },
    {
      "by": "stefankuehnel",
      "descendants": 62,
      "id": 43971620,
      "kids": [
        43990347,
        43990787,
        43987879,
        43986409,
        43987754,
        43986717,
        43988552,
        43990074,
        43990123,
        43989810,
        43987043,
        43987656,
        43989310,
        43989811,
        43987623,
        43987744,
        43986822
      ],
      "score": 164,
      "time": 1747134449,
      "title": "Git Bug: Distributed, Offline-First Bug Tracker Embedded in Git, with Bridges",
      "type": "story",
      "url": "https://github.com/git-bug/git-bug"
    },
    {
      "by": "jstrieb",
      "descendants": 4,
      "id": 43951366,
      "kids": [
        43990092,
        43990068,
        43990231
      ],
      "score": 30,
      "time": 1746937561,
      "title": "Getting Started with Celtic Coins – Crude and Barbarous, or Just Different?",
      "type": "story",
      "url": "https://collectingancientcoins.co.uk/getting-started-with-celtic-coins-crude-and-barbarous-or-just-different/"
    },
    {
      "by": "Hooke",
      "descendants": 2,
      "id": 43967405,
      "kids": [
        43990838,
        43989981
      ],
      "score": 26,
      "time": 1747083550,
      "title": "Hegel 2.0: The imaginary history of ternary computing (2018)",
      "type": "story",
      "url": "https://www.cabinetmagazine.org/issues/65/weatherby.php"
    },
    {
      "by": "Vinnl",
      "descendants": 207,
      "id": 43971515,
      "kids": [
        43971663,
        43985073,
        43985407,
        43974525,
        43984193,
        43985069,
        43985435,
        43985805,
        43989869,
        43985631,
        43989379,
        43985046,
        43989791,
        43989297,
        43990719
      ],
      "score": 182,
      "time": 1747133000,
      "title": "Changes since congestion pricing started in New York",
      "type": "story",
      "url": "https://www.nytimes.com/interactive/2025/05/11/upshot/congestion-pricing.html"
    },
    {
      "by": "anarbadalov",
      "descendants": 105,
      "id": 43986424,
      "kids": [
        43988168,
        43986838,
        43987267,
        43987193,
        43990505,
        43990595,
        43987097,
        43987396,
        43986685,
        43986706,
        43989696,
        43987241,
        43987083,
        43986623,
        43988158,
        43986725,
        43987992,
        43986983,
        43986892,
        43986820,
        43989203,
        43987434,
        43986908,
        43988298,
        43987598,
        43986942,
        43989331,
        43988551,
        43986894,
        43986963,
        43987113
      ],
      "score": 122,
      "time": 1747240068,
      "title": "Our narrative prison",
      "type": "story",
      "url": "https://aeon.co/essays/why-does-every-film-and-tv-series-seem-to-have-the-same-plot"
    },
    {
      "by": "todsacerdoti",
      "descendants": 26,
      "id": 43986833,
      "kids": [
        43988472,
        43987595,
        43988355,
        43987950,
        43987736,
        43988208,
        43987599,
        43988487,
        43989231,
        43987716,
        43987711,
        43987714
      ],
      "score": 70,
      "time": 1747242330,
      "title": "Smalltalk-78 Xerox NoteTaker in-browser emulator",
      "type": "story",
      "url": "https://smalltalkzoo.thechm.org/users/bert/Smalltalk-78.html"
    },
    {
      "by": "baceituno",
      "id": 43989173,
      "score": 1,
      "time": 1747256475,
      "title": "StackAI (YC W23) Is Hiring Pydantic and FastAPI Wizard",
      "type": "job",
      "url": "https://www.ycombinator.com/companies/stackai/jobs/8nYnmlN-backend-engineer"
    },
    {
      "by": "Tsche",
      "descendants": 2,
      "id": 43977515,
      "kids": [
        43989858,
        43990544
      ],
      "score": 23,
      "time": 1747169153,
      "title": "Variadic Switch",
      "type": "story",
      "url": "https://pydong.org/posts/variadic-switch/"
    },
    {
      "by": "mindcrime",
      "descendants": 2,
      "id": 43971941,
      "kids": [
        43990675
      ],
      "score": 5,
      "time": 1747137773,
      "title": "NASA Stennis Releases First Open-Source Software",
      "type": "story",
      "url": "https://www.nasa.gov/centers-and-facilities/stennis/stennis-first-open-source-software/"
    },
    {
      "by": "tatersolid",
      "descendants": 139,
      "id": 43983159,
      "kids": [
        43985903,
        43989764,
        43987438,
        43987898,
        43988716,
        43986556,
        43988513,
        43986868,
        43987303,
        43986693,
        43985764,
        43987813,
        43986129
      ],
      "score": 157,
      "time": 1747221759,
      "title": "The cryptography behind passkeys",
      "type": "story",
      "url": "https://blog.trailofbits.com/2025/05/14/the-cryptography-behind-passkeys/"
    },
    {
      "by": "davidgomes",
      "descendants": 183,
      "id": 43982777,
      "kids": [
        43984709,
        43983725,
        43982947,
        43990716,
        43983189,
        43983019,
        43985999,
        43984902,
        43983018,
        43982918,
        43983224,
        43983253,
        43988794,
        43987547,
        43982970,
        43988713,
        43984074,
        43989230,
        43984422,
        43984198,
        43983145,
        43983695,
        43984008,
        43983089,
        43984931,
        43982973,
        43983758,
        43984908,
        43982967,
        43983473,
        43986856,
        43983692,
        43987763,
        43983977,
        43983888,
        43984512,
        43982969,
        43984848
      ],
      "score": 265,
      "time": 1747217400,
      "title": "Databricks and Neon",
      "type": "story",
      "url": "https://www.databricks.com/blog/databricks-neon"
    },
    {
      "by": "thinkingemote",
      "descendants": 50,
      "id": 43982784,
      "kids": [
        43982952,
        43983126,
        43989194,
        43982975,
        43984460,
        43982968,
        43984247,
        43983017,
        43984575
      ],
      "score": 53,
      "time": 1747217516,
      "title": "UK's Ancient Tree Inventory",
      "type": "story",
      "url": "https://ati.woodlandtrust.org.uk/"
    },
    {
      "by": "tsaifu",
      "descendants": 30,
      "id": 43984097,
      "kids": [
        43984966,
        43986425,
        43986138,
        43988834,
        43986078,
        43986214,
        43984449,
        43984712
      ],
      "score": 138,
      "time": 1747228106,
      "title": "How the economics of multitenancy work",
      "type": "story",
      "url": "https://www.blacksmith.sh/blog/the-economics-of-operating-a-ci-cloud"
    },
    {
      "by": "xena",
      "descendants": 71,
      "id": 43936992,
      "kids": [
        43987446,
        43984421,
        43938433,
        43986702,
        43986076,
        43990746,
        43988265,
        43989558,
        43989180,
        43981516,
        43989132,
        43989300,
        43990534,
        43981733,
        43989816,
        43981607,
        43981715,
        43984240,
        43986917,
        43981617,
        43984212,
        43986950,
        43986079,
        43984736,
        43981721,
        43981682,
        43937109
      ],
      "score": 50,
      "text": "<a href=\"https:&#x2F;&#x2F;github.com&#x2F;orgs&#x2F;community&#x2F;discussions&#x2F;159123\">https:&#x2F;&#x2F;github.com&#x2F;orgs&#x2F;community&#x2F;discussions&#x2F;159123</a><p><a href=\"https:&#x2F;&#x2F;github.com&#x2F;orgs&#x2F;community&#x2F;discussions&#x2F;157887\">https:&#x2F;&#x2F;github.com&#x2F;orgs&#x2F;community&#x2F;discussions&#x2F;157887</a>",
      "time": 1746799865,
      "title": "Updated rate limits for unauthenticated requests",
      "type": "story",
      "url": "https://github.blog/changelog/2025-05-08-updated-rate-limits-for-unauthenticated-requests/"
    },
    {
      "by": "MarcoDewey",
      "descendants": 17,
      "id": 43985994,
      "kids": [
        43987068,
        43989405,
        43986342,
        43986238,
        43986305,
        43986030,
        43986296
      ],
      "score": 36,
      "text": "Hey HN! We are building Jazzberry (<a href=\"https:&#x2F;&#x2F;jazzberry.ai\">https:&#x2F;&#x2F;jazzberry.ai</a>), an AI bug finder that automatically tests your code when a pull request occurs to find and flag real bugs before they are merged.<p>Here’s a demo video: <a href=\"https:&#x2F;&#x2F;www.youtube.com&#x2F;watch?v=L6ZTu86qK8U#t=7\" rel=\"nofollow\">https:&#x2F;&#x2F;www.youtube.com&#x2F;watch?v=L6ZTu86qK8U#t=7</a><p>We are building Jazzberry to help you find bugs in your code base. Here’s how it works:<p>When a PR is made, Jazzberry clones the repo into a secure sandbox. The diff from the PR is provided to the AI agent in its context window. In order to interact with the rest of the code base, the AI agent has the ability to execute bash commands within the sandbox. The output from those commands is fed back into the agent. This means that the agent can do things like read&#x2F;write files, search, install packages, run interpreters, execute code, and so on. It observes the outcomes and iteratively tests to pinpoint bugs, which are then reported back in the PR as a markdown table.<p>Jazzberry is focused on dynamically testing your code in a sandbox to confirm the presence of real bugs. We are not a general code review tool, our only aim is to provide concrete evidence of what&#x27;s broken and how.<p>Here are some real examples of bugs that we have found so far.<p>“<i>Authentication Bypass (Critical)</i>” - When `AUTH_ENABLED` is `False`, the `get_user` dependency in `home&#x2F;api&#x2F;deps.py` always returns the first superuser, bypassing authentication and potentially leading to unauthorized access. Additionally, it defaults to superuser when the authenticated auth0 user is not present in the database.<p>“<i>Insecure Header Handling (High)</i>” - The server doesn&#x27;t validate header names&#x2F;values, allowing injection of malicious headers, potentially leading to security issues.<p>“<i>API Key Leakage (High)</i>” - Different error messages in browser console logs revealed whether API keys were valid, allowing attackers to brute force valid credentials by distinguishing between format errors and authorization errors.<p>Working on this, we&#x27;ve realized just how much the rise of LLM-generated code is amplifying the need for better automated testing solutions. Traditional code coverage metrics and manual code review are already becoming less effective when dealing with thousands of lines of LLM-generated code. We think this is going to get more so over time—the complexity of AI-authored systems will ultimately require even more sophisticated AI tooling for effective validation.<p>Our backgrounds: Mateo has a PhD in reinforcement learning and formal methods with over 20 publications and 350 citations. Marco holds an MSc in software testing, specializing in LLMs for automated test generation.<p>We are actively building and would love your honest feedback!",
      "time": 1747237941,
      "title": "Launch HN: Jazzberry (YC X25) – AI agent for finding bugs",
      "type": "story"
    },
    {
      "by": "rcarmo",
      "descendants": 99,
      "id": 43981680,
      "kids": [
        43983113,
        43982710,
        43982556,
        43990572,
        43984510,
        43982396,
        43982446,
        43985153,
        43983593,
        43984980,
        43985694,
        43982808,
        43989749
      ],
      "score": 225,
      "time": 1747206174,
      "title": "How to Build a Smartwatch: Picking a Chip",
      "type": "story",
      "url": "https://ericmigi.com/blog/how-to-build-a-smartwatch-picking-a-chip/"
    },
    {
      "by": "bookofjoe",
      "descendants": 50,
      "id": 43945733,
      "kids": [
        43984342,
        43983998,
        43987112,
        43987126,
        43985533,
        43984693,
        43984835,
        43988096,
        43983906,
        43983891,
        43984972,
        43985803
      ],
      "score": 188,
      "time": 1746885914,
      "title": "Interferometer Device Sees Text from a Mile Away",
      "type": "story",
      "url": "https://physics.aps.org/articles/v18/99"
    },
    {
      "by": "GreenGames",
      "descendants": 37,
      "id": 43985624,
      "kids": [
        43986022,
        43986096,
        43986189,
        43990158,
        43986231,
        43987772,
        43986934,
        43987448,
        43985778,
        43986577,
        43986248
      ],
      "score": 113,
      "text": "Hey HN, we&#x27;re excited to share Lumier (<a href=\"https:&#x2F;&#x2F;github.com&#x2F;trycua&#x2F;cua&#x2F;tree&#x2F;main&#x2F;libs&#x2F;lumier\">https:&#x2F;&#x2F;github.com&#x2F;trycua&#x2F;cua&#x2F;tree&#x2F;main&#x2F;libs&#x2F;lumier</a>), an open-source tool for running macOS and Linux virtual machines in Docker containers on Apple Silicon Macs.<p>When building virtualized environments for AI agents, we needed a reproducible way to package and distribute macOS VMs. Inspired by projects like dockur&#x2F;windows (<a href=\"https:&#x2F;&#x2F;github.com&#x2F;dockur&#x2F;windows\">https:&#x2F;&#x2F;github.com&#x2F;dockur&#x2F;windows</a>) that pioneered running Windows in Docker, we wanted to create something similar but optimized for Apple Silicon. The existing solutions either didn&#x27;t support M-series chips or relied on KVM&#x2F;Intel emulation, which was slow and cumbersome. We realized we could leverage Apple&#x27;s Virtualization Framework to create a much better experience.<p>Lumier takes a different approach: it uses Docker as a delivery mechanism (not for isolation) and connects to a lightweight virtualization service (lume) running on your Mac. This creates true hardware-accelerated VMs using Apple&#x27;s native virtualization capabilities.<p>With Lumier, you can: \n- Launch a ready-to-use macOS VM in minutes with zero manual setup\n- Access your VM through any web browser via VNC\n- Share files between your host and VM effortlessly\n- Use persistent storage or ephemeral mode for quick tests\n- Automate VM startup with custom scripts<p>All of this works natively on Apple Silicon (M1&#x2F;M2&#x2F;M3&#x2F;M4) - no emulation required.<p>To get started:<p>1. Install Docker for Apple Silicon: <a href=\"https:&#x2F;&#x2F;desktop.docker.com&#x2F;mac&#x2F;main&#x2F;arm64&#x2F;Docker.dmg\" rel=\"nofollow\">https:&#x2F;&#x2F;desktop.docker.com&#x2F;mac&#x2F;main&#x2F;arm64&#x2F;Docker.dmg</a><p>2. Install lume background service with our one-liner:<p><pre><code>  &#x2F;bin&#x2F;bash -c &quot;$(curl -fsSL https:&#x2F;&#x2F;raw.githubusercontent.com&#x2F;trycua&#x2F;cua&#x2F;main&#x2F;libs&#x2F;lume&#x2F;scripts&#x2F;install.sh)&quot;\n</code></pre>\n3. Start a VM (ephemeral mode):<p><pre><code>  docker run -it --rm \\\n  --name lumier-vm \\\n    -p 8006:8006 \\\n    -e VM_NAME=lumier-vm \\\n    -e VERSION=ghcr.io&#x2F;trycua&#x2F;macos-sequoia-cua:latest \\\n    -e CPU_CORES=4 \\\n    -e RAM_SIZE=8192 \\\n    trycua&#x2F;lumier:latest\n</code></pre>\n4. Open <a href=\"http:&#x2F;&#x2F;localhost:8006&#x2F;vnc.html\" rel=\"nofollow\">http:&#x2F;&#x2F;localhost:8006&#x2F;vnc.html</a> in your browser. The container will generate a unique password for each VM instance - you&#x27;ll see it in the container logs.<p>For persistent storage (so your changes survive container restarts):<p>mkdir -p storage\ndocker run -it --rm \\\n  --name lumier-vm \\\n  -p 8006:8006 \\\n  -v $(pwd)&#x2F;storage:&#x2F;storage \\\n  -e VM_NAME=lumier-vm \\\n  -e HOST_STORAGE_PATH=$(pwd)&#x2F;storage \\\n  trycua&#x2F;lumier:latest<p>Want to share files with your VM? Just add another volume:<p>mkdir -p shared\ndocker run ... -v $(pwd)&#x2F;shared:&#x2F;shared -e HOST_SHARED_PATH=$(pwd)&#x2F;shared ...<p>You can even automate VM startup by placing an on-logon.sh script in shared&#x2F;lifecycle&#x2F;.<p>We&#x27;re seeing people use Lumier for:\n- Development and testing environments that need macOS\n- CI&#x2F;CD pipelines for Apple platform apps\n- Disposable macOS instances for security research\n- Automated UI testing across macOS versions\n- Running AI agents in isolated environments<p>Lumier is 100% open-source under the MIT license. We&#x27;re actively developing it as part of our work on C&#x2F;ua (<a href=\"https:&#x2F;&#x2F;github.com&#x2F;trycua&#x2F;cua\">https:&#x2F;&#x2F;github.com&#x2F;trycua&#x2F;cua</a>), and we&#x27;d love your feedback, bug reports, or feature ideas.<p>We&#x27;ll be here to answer any technical questions and look forward to your comments!",
      "time": 1747235981,
      "title": "Show HN: Lumier – Run macOS VMs in a Docker",
      "type": "story",
      "url": "https://github.com/trycua/cua/tree/main/libs/lumier"
    },
    {
      "by": "r4um",
      "descendants": 48,
      "id": 43980760,
      "kids": [
        43982439,
        43983856,
        43983602,
        43982661,
        43983829,
        43985565,
        43982907,
        43984156,
        43981507,
        43983808,
        43983392,
        43987325,
        43983989,
        43981575
      ],
      "score": 388,
      "time": 1747196340,
      "title": "Writing that changed how I think about programming languages",
      "type": "story",
      "url": "https://bernsteinbear.com/blog/pl-writing/"
    },
    {
      "by": "rpgbr",
      "descendants": 332,
      "id": 43985861,
      "kids": [
        43987078,
        43987189,
        43987840,
        43987931,
        43986028,
        43986548,
        43988447,
        43987756,
        43986309,
        43988419,
        43989418,
        43988352,
        43988038,
        43986636,
        43987978,
        43986579,
        43989544,
        43987766,
        43988271,
        43986769,
        43987982,
        43988018,
        43988294,
        43988250,
        43989610,
        43989163,
        43987933,
        43987665,
        43985901,
        43986475,
        43985916,
        43989304,
        43986502
      ],
      "score": 129,
      "time": 1747237217,
      "title": "Uber to introduce fixed-route shuttles in major US cities",
      "type": "story",
      "url": "https://techcrunch.com/2025/05/14/uber-to-introduce-fixed-route-shuttles-in-major-us-cities-other-ways-to-save/"
    },
    {
      "by": "laurex",
      "descendants": 156,
      "id": 43988315,
      "kids": [
        43989185,
        43989722,
        43989528,
        43988913,
        43989628,
        43988903,
        43988899,
        43990610,
        43990569,
        43989129,
        43990161,
        43990496,
        43988742,
        43990395,
        43990083,
        43988579,
        43988595,
        43988830,
        43988672,
        43988535,
        43988724,
        43989712,
        43989455,
        43988744,
        43989073,
        43988719,
        43989215,
        43990550,
        43989453,
        43988960,
        43988865,
        43989867,
        43989645,
        43988821,
        43989439,
        43988918
      ],
      "score": 143,
      "time": 1747250978,
      "title": "Perverse incentives of vibe coding",
      "type": "story",
      "url": "https://fredbenenson.medium.com/the-perverse-incentives-of-vibe-coding-23efbaf75aee"
    },
    {
      "by": "lawik",
      "descendants": 112,
      "id": 43945477,
      "kids": [
        43985940,
        43982581,
        43983710,
        43982680,
        43982470,
        43981942,
        43983731,
        43982370,
        43983946,
        43983683,
        43983726,
        43983148,
        43982349,
        43985532,
        43985555
      ],
      "score": 234,
      "time": 1746883920,
      "title": "Ash Framework – Model your domain, derive the rest",
      "type": "story",
      "url": "https://ash-hq.org/"
    },
    {
      "by": "Tomte",
      "descendants": 4,
      "id": 43987814,
      "kids": [
        43990224,
        43989159,
        43988559
      ],
      "score": 29,
      "time": 1747247852,
      "title": "Various Things in MetaPost (2019)",
      "type": "story",
      "url": "https://habr.com/en/articles/454376/"
    },
    {
      "by": "anigbrowl",
      "descendants": 6,
      "id": 43988116,
      "kids": [
        43988934,
        43988597,
        43988637,
        43989330,
        43988604
      ],
      "score": 31,
      "time": 1747249481,
      "title": "David Hilbert's radio address (2014)",
      "type": "story",
      "url": "https://old.maa.org/press/periodicals/convergence/david-hilberts-radio-address"
    },
    {
      "by": "todsacerdoti",
      "descendants": 15,
      "id": 43971685,
      "kids": [
        43988768,
        43988192,
        43990383,
        43988451,
        43989079,
        43989184,
        43988981,
        43987701
      ],
      "score": 56,
      "time": 1747135348,
      "title": "An accessibility update – GTK Development Blog",
      "type": "story",
      "url": "https://blog.gtk.org/2025/05/12/an-accessibility-update/"
    },
    {
      "by": "delduca",
      "descendants": 63,
      "id": 43954027,
      "kids": [
        43990523,
        43980774,
        43981307,
        43980955,
        43989805,
        43980427,
        43980360,
        43980050,
        43980220,
        43980397,
        43954028,
        43980605,
        43989058,
        43981326,
        43980820,
        43980265,
        43981283,
        43980997,
        43980908,
        43980238,
        43980291,
        43980162,
        43981012,
        43980801,
        43980276,
        43980500,
        43954050
      ],
      "score": 88,
      "time": 1746973369,
      "title": "Show HN: I’ve built an IoT device to let my family know when I’m in a meeting",
      "type": "story",
      "url": "https://nullonerror.org/2025/05/11/i-have-built-an-iot-device-to-let-my-family-know-when-i-am-in-a-meeting/"
    },
    {
      "by": "olllo",
      "descendants": 13,
      "id": 43985527,
      "kids": [
        43986449,
        43986366,
        43985734,
        43986055,
        43985714
      ],
      "score": 41,
      "text": "I built CSV GB+ by Data.olllo, a local data tool that lets you open, clean, and export gigabyte-sized CSVs (even billions of rows) without writing code.<p>Most spreadsheet apps choke on big files. Coding in pandas or Polars works—but not everyone wants to write scripts just to filter or merge CSVs. CSV GB+ gives you a fast, point-and-click interface built on dual backends (memory-optimized or disk-backed) so you can process huge datasets offline.<p>Key Features:\n Handles massive CSVs with ease — merge, split, dedup, filter, batch export<p>Smart engine switch: disk-based &quot;V Core&quot; or RAM-based &quot;P Core&quot;<p>All processing is offline – no data upload or telemetry<p>Supports CSV, XLSX, JSON, DBF, Parquet and more<p>Designed for data pros, students, and privacy-conscious users<p>Register for 7-days free to pro try, pro versions remove row limits and unlock full features. I’m a solo dev building Data.olllo as a serious alternative to heavy coding or bloated enterprise tools.<p>Download for Windows:\n<a href=\"https:&#x2F;&#x2F;apps.microsoft.com&#x2F;detail&#x2F;9PFR86LCQPGS\" rel=\"nofollow\">https:&#x2F;&#x2F;apps.microsoft.com&#x2F;detail&#x2F;9PFR86LCQPGS</a><p>User Guide:\n<a href=\"https:&#x2F;&#x2F;olllo.top&#x2F;articles&#x2F;article-0-Data.olllo-UserGuide\" rel=\"nofollow\">https:&#x2F;&#x2F;olllo.top&#x2F;articles&#x2F;article-0-Data.olllo-UserGuide</a><p>Would love feedback! I’m actively improving it based on real use cases.",
      "time": 1747235573,
      "title": "Show HN: CSV GB+ by Data.olllo – Open and Process CSVs Locally",
      "type": "story",
      "url": "https://apps.microsoft.com/detail/9pfcrwp46v22?hl=en-US&gl=US"
    },
    {
      "by": "todsacerdoti",
      "descendants": 265,
      "id": 43984297,
      "kids": [
        43984891,
        43985353,
        43986568,
        43984489,
        43984747,
        43990487,
        43987941,
        43984776,
        43984346,
        43987034,
        43984787,
        43985646,
        43985104,
        43986109,
        43986705,
        43986228,
        43987880,
        43985935,
        43985225,
        43984637,
        43985312,
        43986266,
        43985333,
        43985096,
        43989143,
        43984440,
        43985738,
        43987887,
        43988456,
        43987644,
        43986699,
        43985060,
        43984910,
        43985117,
        43985317,
        43987011,
        43984797,
        43986396,
        43988574,
        43987292,
        43986142,
        43985521,
        43985884,
        43988340,
        43985604,
        43988646,
        43987384,
        43986949,
        43986931,
        43986490,
        43985263,
        43987041,
        43985099,
        43985848,
        43984349,
        43984680,
        43984553
      ],
      "score": 347,
      "time": 1747229304,
      "title": "SMS 2FA is not just insecure, it's also hostile to mountain people",
      "type": "story",
      "url": "https://blog.stillgreenmoss.net/sms-2fa-is-not-just-insecure-its-also-hostile-to-mountain-people"
    },
    {
      "by": "skibz",
      "descendants": 71,
      "id": 43944199,
      "kids": [
        43981698,
        43982171,
        43981602,
        43980788,
        43986348,
        43980927,
        43980834,
        43982402,
        43982333,
        43982268,
        43984658,
        43981546,
        43982139,
        43982227,
        43988555,
        43984217,
        43981371,
        43987066,
        43984286,
        43984292,
        43984125,
        43981913,
        43981213,
        43982281
      ],
      "score": 291,
      "time": 1746867167,
      "title": "RPG in a Box",
      "type": "story",
      "url": "https://rpginabox.com/"
    },
    {
      "by": "jaberjaber23",
      "descendants": 7,
      "id": 43973541,
      "kids": [
        43989175,
        43989924,
        43990342,
        43989139,
        43973542
      ],
      "score": 38,
      "time": 1747147426,
      "title": "We Made CUDA Optimization Suck Less",
      "type": "story",
      "url": "https://www.rightnowai.co/"
    },
    {
      "by": "NaOH",
      "descendants": 11,
      "id": 43987742,
      "kids": [
        43988074,
        43990348,
        43989103,
        43988652,
        43988492
      ],
      "score": 18,
      "time": 1747247535,
      "title": "The pigeon whistle: A defining sound of old Beijing (2019)",
      "type": "story",
      "url": "http://www.chinatoday.com.cn/ctenglish/2018/cs/201911/t20191129_800186426.html"
    },
    {
      "by": "anigbrowl",
      "descendants": 314,
      "id": 43980845,
      "kids": [
        43981512,
        43981005,
        43982124,
        43981102,
        43981357,
        43983777,
        43981035,
        43988997,
        43982131,
        43981134,
        43981051,
        43986956,
        43981034,
        43985696,
        43981937,
        43982323,
        43988289,
        43982763,
        43982099,
        43982129,
        43982932,
        43982296,
        43981057,
        43986982,
        43981706,
        43985459,
        43981335,
        43981624,
        43981723,
        43982190,
        43982173,
        43981542,
        43982275
      ],
      "score": 446,
      "time": 1747197201,
      "title": "Bus stops here: Shanghai lets riders design their own routes",
      "type": "story",
      "url": "https://www.sixthtone.com/news/1017072"
    },
    {
      "by": "rmason",
      "descendants": 5,
      "id": 43957072,
      "kids": [
        43966287,
        43988109,
        43967882,
        43989880
      ],
      "score": 21,
      "time": 1746996803,
      "title": "The overlooked masterpiece full of coded messages about World War One",
      "type": "story",
      "url": "https://www.bbc.com/culture/article/20250423-the-masterpiece-full-of-coded-messages-about-ww1"
    },
    {
      "by": "morsch",
      "descendants": 138,
      "id": 43981170,
      "kids": [
        43983064,
        43986181,
        43983191,
        43982964,
        43985869,
        43986445,
        43982322,
        43988040,
        43987921,
        43989539,
        43982299,
        43985130,
        43983827,
        43982888,
        43982607,
        43983607,
        43983911,
        43983550,
        43985989
      ],
      "score": 368,
      "time": 1747201080,
      "title": "The recently lost file upload feature in the Nextcloud app for Android",
      "type": "story",
      "url": "https://nextcloud.com/blog/nextcloud-android-file-upload-issue-google/"
    },
    {
      "by": "jnord",
      "descendants": 4,
      "id": 43990141,
      "kids": [
        43990427,
        43990397
      ],
      "score": 7,
      "time": 1747264202,
      "title": "A Simple Spit Test Could Reveal Prostate Cancer, Outperforming a Blood Test",
      "type": "story",
      "url": "https://www.discovermagazine.com/health/a-simple-spit-test-could-reveal-prostate-cancer-outperforming-a-common-blood"
    },
    {
      "by": "bestwillcui",
      "descendants": 114,
      "id": 43972425,
      "kids": [
        43976489,
        43985879,
        43975156,
        43973731,
        43976354,
        43985024,
        43973125,
        43973912,
        43982990,
        43984281,
        43976295,
        43985460,
        43985638,
        43972902,
        43981083,
        43973808,
        43973638,
        43978488,
        43980762,
        43981538,
        43974010,
        43984133,
        43974463,
        43973171,
        43974989,
        43973153,
        43979985,
        43977527,
        43973475,
        43983085,
        43978177,
        43973091,
        43973570,
        43973859,
        43973936,
        43976901,
        43975242,
        43979808,
        43977565,
        43972951,
        43975478,
        43973908,
        43973425,
        43973004,
        43980925,
        43975354,
        43984639
      ],
      "score": 202,
      "text": "Hey HN, we’re Tyrone and Guang, founders of Miyagi Labs (<a href=\"https:&#x2F;&#x2F;miyagilabs.ai\">https:&#x2F;&#x2F;miyagilabs.ai</a>), an AI-powered education platform that transforms educational YouTube videos into interactive courses. It helps you learn better through active practice and personalized feedback.<p>We use LLMs to automatically generate quizzes, practice questions, and real-time feedback from any educational video or resource—turning passive watching into active learning. Here’s a short demo: <a href=\"https:&#x2F;&#x2F;youtu.be&#x2F;alO7FaorHOY\" rel=\"nofollow\">https:&#x2F;&#x2F;youtu.be&#x2F;alO7FaorHOY</a>.<p>Improving education has always been tricky. Bloom’s 2-sigma problem (showing that a high-quality personal tutor is far more effective than conventional methods) has persisted, even as technology has advanced.<p>We met at MIT as CS majors and have always been passionate about education. Over the years, we’ve become teachers and experts in subjects like chess, algorithms, math, languages, and ninja warrior. A common theme was that we both heavily relied on YouTube to learn.<p>YouTube has incredible content for learning pretty much anything, but it’s buried in a lot of distractions. Also, passively watching videos is far less effective than taking notes, asking questions, and doing practice problems, which is what we aim to do with Miyagi Labs.<p>Our solution is essentially a multi-step function that takes in a YouTube playlist (or list of any resources) and outputs an entire course with summaries, questions, answers, and more. The pipeline is roughly: video&#x2F;resource —&gt; transcript&#x2F;text —&gt; chunks —&gt; summary and question —&gt; answers to questions, with some other features along the way.<p>We mostly use prompting and different models at each step to make the course as useful as possible. Certain topics require more practice problems vs. comprehension, and we’d use reasoning models for highly technical subjects.<p>We launched about three months ago and currently have 400+ courses and partnerships with some businesses and awesome creators. Some of our popular courses include 3Blue1Brown’s linear algebra course, a botany course on plants and ecology, and YC’s How to Start a Startup series.<p>Our product resembles classical MOOC-style course platforms in terms of UI, but is more interactive. It’s really easy to ask a question or receive custom feedback compared to a static course on Coursera. It’s also comparable to AI tutor sites, but we try to build more of a community and require less activation energy as a learner. We’re basically betting that AI can hugely improve education, but that students still want to learn from their favorite creators and want baseline shared resources for standard topics that are then augmented with personalized features.<p>You can try it here: <a href=\"https:&#x2F;&#x2F;miyagilabs.ai\">https:&#x2F;&#x2F;miyagilabs.ai</a> (no login required for most courses—but if you sign up you can also create your own course).<p>We’d love your feedback on what kinds of videos&#x2F;resources you’d like to learn from, what’s missing from current learning tools, and if you know any creators or educators who would like to collaborate. Happy to hear any feedback and answer any questions!",
      "time": 1747141002,
      "title": "Launch HN: Miyagi (YC W25) turns YouTube videos into online, interactive courses",
      "type": "story"
    },
    {
      "by": "MajesticHobo2",
      "descendants": 1,
      "id": 43950693,
      "kids": [
        43988521
      ],
      "score": 40,
      "time": 1746929433,
      "title": "Breaking the Sound Barrier Part I: Fuzzing CoreAudio with Mach Messages",
      "type": "story",
      "url": "https://googleprojectzero.blogspot.com/2025/05/breaking-sound-barrier-part-i-fuzzing.html"
    },
    {
      "by": "rbanffy",
      "descendants": 2,
      "id": 43971184,
      "kids": [
        43989381
      ],
      "score": 9,
      "time": 1747129066,
      "title": "Finding Beauty and Truth in Mundane Occurrences",
      "type": "story",
      "url": "https://www.quantamagazine.org/finding-beauty-and-truth-in-mundane-occurrences-20250509/"
    },
    {
      "by": "GeorgeCurtis",
      "descendants": 99,
      "id": 43975423,
      "kids": [
        43977985,
        43981161,
        43979626,
        43987231,
        43976099,
        43984482,
        43978122,
        43985706,
        43976519,
        43984707,
        43978573,
        43975955,
        43987628,
        43980055,
        43985151,
        43978692,
        43980734,
        43980885,
        43976348,
        43976157,
        43977681,
        43976055,
        43976392,
        43980575,
        43982933,
        43976983,
        43978275,
        43978123,
        43977294,
        43978307,
        43980555,
        43975838,
        43978700,
        43977005
      ],
      "score": 219,
      "text": "Hey HN, we want to share HelixDB (<a href=\"https:&#x2F;&#x2F;github.com&#x2F;HelixDB&#x2F;helix-db&#x2F;\">https:&#x2F;&#x2F;github.com&#x2F;HelixDB&#x2F;helix-db&#x2F;</a>), a project a college friend and I are working on. It’s a new database that natively intertwines graph and vector types, without sacrificing performance. It’s written in Rust and our initial focus is on supporting RAG. Here’s a video runthrough: <a href=\"https:&#x2F;&#x2F;screen.studio&#x2F;share&#x2F;szgQu3yq\" rel=\"nofollow\">https:&#x2F;&#x2F;screen.studio&#x2F;share&#x2F;szgQu3yq</a>.<p>Why a hybrid? Vector databases are useful for similarity queries, while graph databases are useful for relationship queries. Each stores data in a way that’s best for its main type of query (e.g. key-value stores vs. node-and-edge tables). However, many AI-driven applications need <i>both</i> similarity and relationship queries. For example, you might use vector-based semantic search to retrieve relevant legal documents, and then use graph traversal to identify relationships between cases.<p>Developers of such apps have the quandary of needing to build on top of two different databases—a vector one and a graph one—plus you have to link them together and sync the data. Even then, your two databases aren&#x27;t designed to work together—for example, there’s no native way to perform joins or queries that span both systems. You’ll need to handle that logic at the application level.<p>Helix started when we realized that there are ways to integrate vector and graph data that are both fast and suitable for AI applications, especially RAG-based ones. See this cool research paper: <a href=\"https:&#x2F;&#x2F;arxiv.org&#x2F;html&#x2F;2408.04948v1\" rel=\"nofollow\">https:&#x2F;&#x2F;arxiv.org&#x2F;html&#x2F;2408.04948v1</a>. After reading that and some other papers on graph and hybrid RAG, we decided to build a hybrid DB. Our aim was to make something better to use from a developer standpoint, while also making it fast as hell.<p>After a few months of working on this as a side project, our benchmarking shows that we are on par with Pinecone and Qdrant for vectors, and our graph is up to three orders of magnitude faster than Neo4j.<p>Problems where a hybrid approach works particularly well include:<p>- Indexing codebases: you can vectorize code-snippets within a function (connected by edges) based on context and then create an AST (in a graph) from function calls, imports, dependencies, etc. Agents can look up code by similarity or keyword and then traverse the AST to get only the relevant code, which reduces hallucinations and prevents the LLM from guessing object shapes or variable&#x2F;function names.<p>- Molecule discovery: Model biological interactions (e.g., proteins → genes → diseases) using graph types and then embed molecule structures to find similar compounds or case studies.<p>- Enterprise knowledge management: you can represent organisational structure, projects, and people (e.g., employee → team → project) in graph form, then index internal documents, emails, or notes as vectors for semantic search and link them directly employees&#x2F;teams&#x2F;projects in the graph.<p>I naively assumed when learning about databases for the first time that queries would be compiled and executed like functions in traditional programming. Turns out I was wrong, but this creates unnecessary latency by sending extra data (the whole written query), compiling it at run time, and then executing it. With Helix, you write the queries in our query language (HelixQL), which is then transpiled into Rust code and built directly into the database server, where you can call a generated API endpoint.<p>Many people have a thing against “yet another query language” (doubtless for good reason!) but we went ahead and did it anyway, because we think it makes working with our database so much easier that it’s worth a bit of a learning curve. HelixQL takes from other query languages such as Gremlin, Cypher and SQL with some extra ideas added in. It is declarative while the traversals themselves are functional. This allows complete control over the traversal flow while also having a cleaner syntax. HelixQL returns JSON to make things easy for clients. Also, it uses a schema, so the queries are type-checked.<p>We took a crude approach to building the original graph engine as a way to get an MVP out, so we are now working on improving the graph engine by making traversals massively parallel and pipelined. This means data is only ever decoded from disk when it is needed, and parts of reads are all processed in parallel.<p>If you’d like to try it out in a simple RAG demo, you can follow this guide and run our Jupyter notebook: <a href=\"https:&#x2F;&#x2F;github.com&#x2F;HelixDB&#x2F;helix-db&#x2F;tree&#x2F;main&#x2F;examples&#x2F;rag_demo\">https:&#x2F;&#x2F;github.com&#x2F;HelixDB&#x2F;helix-db&#x2F;tree&#x2F;main&#x2F;examples&#x2F;rag_d...</a><p>Many thanks! Comments and feedback welcome!",
      "time": 1747157198,
      "title": "Show HN: HelixDB – Open-source vector-graph database for AI applications (Rust)",
      "type": "story",
      "url": "https://github.com/HelixDB/helix-db/"
    },
    {
      "by": "rfarley04",
      "descendants": 106,
      "id": 43983455,
      "kids": [
        43984956,
        43989799,
        43986711,
        43988973,
        43989746,
        43987283,
        43984302,
        43990615,
        43985952,
        43988344,
        43983916,
        43983818,
        43984799,
        43983766,
        43984837
      ],
      "score": 107,
      "time": 1747223981,
      "title": "E-COM: The $40M USPS project to send email on paper",
      "type": "story",
      "url": "https://buttondown.com/blog/the-e-com-story"
    },
    {
      "by": "poetril",
      "descendants": 28,
      "id": 43979916,
      "kids": [
        43980745,
        43981292,
        43986676,
        43988152,
        43981246,
        43981683,
        43983420,
        43982044,
        43981153,
        43982631,
        43981413,
        43983754
      ],
      "score": 123,
      "time": 1747187759,
      "title": "Replicube: A puzzle game about writing code to create shapes",
      "type": "story",
      "url": "https://store.steampowered.com/app/3401490/Replicube/"
    },
    {
      "by": "jbotz",
      "descendants": 10,
      "id": 43943928,
      "kids": [
        43982046,
        43949815,
        43981556,
        43946533
      ],
      "score": 106,
      "time": 1746863358,
      "title": "EM-LLM: Human-Inspired Episodic Memory for Infinite Context LLMs",
      "type": "story",
      "url": "https://github.com/em-llm/EM-LLM-model"
    },
    {
      "by": "speckx",
      "descendants": 0,
      "id": 43987647,
      "score": 11,
      "time": 1747247054,
      "title": "Infrastructure, Common Goods, and the Future of Open Source Software",
      "type": "story",
      "url": "https://v5.chriskrycho.com/elsewhere/infrastructure-common-goods-and-the-future-of-open-source-software/"
    },
    {
      "by": "badmonster",
      "descendants": 35,
      "id": 43976895,
      "kids": [
        43978880,
        43982526,
        43982083,
        43979788,
        43978937,
        43977761,
        43984790,
        43979264,
        43979108,
        43979102
      ],
      "score": 169,
      "time": 1747165684,
      "title": "Build real-time knowledge graph for documents with LLM",
      "type": "story",
      "url": "https://cocoindex.io/blogs/knowledge-graph-for-docs/"
    },
    {
      "by": "luu",
      "descendants": 17,
      "id": 43987525,
      "kids": [
        43990844,
        43988844,
        43988488,
        43988212,
        43988386,
        43989298,
        43988613,
        43988185,
        43988163,
        43988142
      ],
      "score": 34,
      "time": 1747246192,
      "title": "Beyond the Wrist: Debugging RSI",
      "type": "story",
      "url": "https://www.debugyourpain.org/docs/main_posts/understand/debugging_rsi/"
    },
    {
      "by": "croqaz",
      "descendants": 1,
      "id": 43955834,
      "kids": [
        43955835
      ],
      "score": 14,
      "time": 1746988126,
      "title": "TwoFold (2f), CLI text expander/template engine",
      "type": "story",
      "url": "https://github.com/ShinyTrinkets/twofold.ts"
    },
    {
      "by": "JSLegendDev",
      "descendants": 447,
      "id": 43963434,
      "kids": [
        43977897,
        43976144,
        43976838,
        43975980,
        43968507,
        43977181,
        43977268,
        43976998,
        43968700,
        43964424,
        43982476,
        43973804,
        43989207,
        43983162,
        43963767,
        43986101,
        43970651,
        43985760,
        43977365,
        43977290,
        43969916,
        43976684,
        43971099,
        43976644,
        43982634,
        43979709,
        43976362,
        43969783,
        43989155,
        43963701,
        43977413,
        43982532,
        43977587,
        43967891,
        43977091,
        43976474,
        43984186,
        43969842,
        43976676,
        43982474,
        43970045,
        43978773,
        43982271,
        43977544,
        43979098,
        43976050,
        43977395,
        43977182,
        43978272,
        43977697,
        43967428,
        43978612,
        43978977,
        43981999,
        43978006,
        43980759,
        43975822,
        43981964,
        43973654,
        43968177,
        43966963,
        43970043,
        43981896
      ],
      "score": 443,
      "time": 1747060345,
      "title": "The great displacement is already well underway?",
      "type": "story",
      "url": "https://shawnfromportland.substack.com/p/the-great-displacement-is-already"
    },
    {
      "by": "todsacerdoti",
      "descendants": 96,
      "id": 43982238,
      "kids": [
        43983083,
        43983736,
        43983225,
        43985674,
        43986130,
        43984262,
        43984916,
        43989272,
        43983101,
        43986206,
        43984007,
        43982561,
        43985337,
        43983485,
        43983460
      ],
      "score": 101,
      "time": 1747211525,
      "title": "$20K Bounty Offered for Optimizing Rust Code in Rav1d AV1 Decoder",
      "type": "story",
      "url": "https://www.memorysafety.org/blog/rav1d-perf-bounty/"
    },
    {
      "by": "fortran77",
      "descendants": 71,
      "id": 43984275,
      "kids": [
        43984323,
        43984921,
        43986859,
        43984659,
        43984631,
        43985152,
        43988089,
        43984488,
        43984413,
        43987743,
        43985122,
        43985052
      ],
      "score": 132,
      "time": 1747229224,
      "title": "U.S. nuclear base hidden under Greenland's ice for decades",
      "type": "story",
      "url": "https://www.wsj.com/world/greenland-us-camp-century-nuclear-base-91e8abea"
    },
    {
      "by": "pseudolus",
      "descendants": 168,
      "id": 43972757,
      "kids": [
        43972763,
        43985273,
        43980942,
        43980587,
        43981874,
        43981351,
        43981015,
        43981532,
        43987110,
        43986961,
        43984820,
        43981217,
        43988046,
        43981254,
        43981454,
        43985476,
        43987264,
        43980791,
        43980840
      ],
      "score": 60,
      "time": 1747143021,
      "title": "How “The Great Gatsby” took over high school",
      "type": "story",
      "url": "https://www.newyorker.com/books/page-turner/how-the-great-gatsby-took-over-high-school"
    },
    {
      "by": "MichaelNolan",
      "descendants": 0,
      "id": 43990460,
      "score": 3,
      "time": 1747267123,
      "title": "Why car companies should fear the golf cart",
      "type": "story",
      "url": "https://www.fastcompany.com/90804313/why-car-companies-should-fear-the-golf-cart"
    },
    {
      "by": "EA-3167",
      "descendants": 7,
      "id": 43989533,
      "kids": [
        43990430,
        43990547,
        43990043,
        43990060,
        43989554
      ],
      "score": 12,
      "time": 1747259116,
      "title": "AI Agents Must Follow the Law",
      "type": "story",
      "url": "https://www.lawfaremedia.org/article/ai-agents-must-follow-the-law"
    },
    {
      "by": "voxadam",
      "descendants": 183,
      "id": 43983928,
      "kids": [
        43986074,
        43986836,
        43984764,
        43987413,
        43986547,
        43983935,
        43985086,
        43985913,
        43985976,
        43986213,
        43987177,
        43985430,
        43985932,
        43986665,
        43986243,
        43985342,
        43986938,
        43985143,
        43986550,
        43985645,
        43985289,
        43986382,
        43985185,
        43984965
      ],
      "score": 105,
      "time": 1747227133,
      "title": "The A.I. Radiologist Will Not Be with You Soon",
      "type": "story",
      "url": "https://www.nytimes.com/2025/05/14/technology/ai-jobs-radiologists-mayo-clinic.html"
    },
    {
      "by": "birdculture",
      "descendants": 353,
      "id": 43978435,
      "kids": [
        43979394,
        43980509,
        43982864,
        43981625,
        43985668,
        43982539,
        43979711,
        43982072,
        43982418,
        43981145,
        43984264,
        43979523,
        43986975,
        43984646,
        43979348,
        43982398,
        43983608,
        43980869,
        43983039,
        43984878,
        43981727,
        43979116,
        43979679,
        43979472,
        43981306,
        43981423,
        43979684,
        43982301,
        43983711,
        43980170,
        43980139,
        43982196,
        43982459,
        43981664,
        43978986,
        43983322,
        43979099
      ],
      "score": 419,
      "time": 1747175129,
      "title": "Flattening Rust’s learning curve",
      "type": "story",
      "url": "https://corrode.dev/blog/flattening-rusts-learning-curve/"
    },
    {
      "by": "creer",
      "descendants": 0,
      "id": 43990340,
      "score": 3,
      "time": 1747266040,
      "title": "My hours seem to slip away. How can I manage my time better?",
      "type": "story",
      "url": "https://www.theguardian.com/wellness/2025/may/14/time-management-skills-work-lessons"
    },
    {
      "by": "tekknolagi",
      "descendants": 3,
      "id": 43983627,
      "kids": [
        43988141,
        43990017
      ],
      "score": 34,
      "time": 1747225120,
      "title": "ZJIT has been merged into Ruby",
      "type": "story",
      "url": "https://railsatscale.com/2025-05-14-merge-zjit/"
    },
    {
      "by": "jnord",
      "descendants": 0,
      "id": 43990319,
      "score": 3,
      "time": 1747265823,
      "title": "YouTube introduces an interactive product feed for shoppable TV ads",
      "type": "story",
      "url": "https://techcrunch.com/2025/05/14/youtube-introduces-an-interactive-product-feed-for-shoppable-tv-ads/"
    },
    {
      "by": "pavel_lishin",
      "descendants": 70,
      "id": 43974005,
      "kids": [
        43974984,
        43975540,
        43976759,
        43975489,
        43976681,
        43976689,
        43977511,
        43976025,
        43981163,
        43980946,
        43977430,
        43981466,
        43974950,
        43974753,
        43977836,
        43980643,
        43975989,
        43978714
      ],
      "score": 188,
      "time": 1747150067,
      "title": "It Awaits Your Experiments",
      "type": "story",
      "url": "https://www.rifters.com/crawl/?p=11511"
    },
    {
      "by": "matt_d",
      "descendants": 24,
      "id": 43977147,
      "kids": [
        43980417,
        43978526,
        43978127,
        43982147,
        43982330
      ],
      "score": 100,
      "time": 1747166994,
      "title": "Using obscure graph theory to solve programming languages problems",
      "type": "story",
      "url": "https://reasonablypolymorphic.com/blog/solving-lcsa/"
    },
    {
      "by": "luu",
      "descendants": 25,
      "id": 43951604,
      "kids": [
        43955950,
        43984975,
        43982686,
        43958851,
        43983082,
        43983541,
        43982326
      ],
      "score": 93,
      "time": 1746940634,
      "title": "Mipmap selection in too much detail",
      "type": "story",
      "url": "https://pema.dev/2025/05/09/mipmaps-too-much-detail/"
    },
    {
      "by": "smusamashah",
      "descendants": 21,
      "id": 43964896,
      "kids": [
        43967267,
        43967173,
        43966884,
        43967903,
        43967238,
        43966114,
        43982846,
        43982837
      ],
      "score": 78,
      "time": 1747067742,
      "title": "The Internet 1997–2021",
      "type": "story",
      "url": "https://www.opte.org/the-internet"
    },
    {
      "by": "logic_node",
      "descendants": 379,
      "id": 43973395,
      "kids": [
        43984058,
        43984226,
        43973693,
        43976786,
        43973748,
        43977408,
        43983258,
        43973726,
        43976514,
        43984148,
        43978302,
        43985636,
        43986605,
        43987390,
        43987490,
        43985311,
        43981950,
        43979707,
        43973667,
        43973559,
        43979686,
        43981420,
        43973658,
        43982027,
        43981436,
        43973745,
        43978947,
        43973736,
        43980171,
        43973396,
        43985048,
        43980085,
        43985014,
        43988169,
        43981850,
        43979121,
        43982674,
        43981253,
        43973637,
        43980536,
        43982387,
        43977658,
        43979139,
        43973538,
        43981483,
        43976621,
        43973935,
        43978491,
        43976232,
        43979548,
        43973961,
        43973668,
        43981567,
        43986037
      ],
      "score": 416,
      "time": 1747146635,
      "title": "Google is building its own DeX: First look at Android's Desktop Mode",
      "type": "story",
      "url": "https://www.androidauthority.com/android-desktop-mode-leak-3550321/"
    },
    {
      "by": "linearithmic",
      "descendants": 16,
      "id": 43983297,
      "kids": [
        43985660,
        43983298,
        43984192,
        43986884,
        43985893
      ],
      "score": 28,
      "time": 1747222905,
      "title": "Abundance Starts with Mobility",
      "type": "story",
      "url": "https://abstraction.substack.com/p/abundance-starts-with-mobility"
    },
    {
      "by": "thomasjudge",
      "descendants": 492,
      "id": 43976557,
      "kids": [
        43976566,
        43980613,
        43980280,
        43980786,
        43982170,
        43980357,
        43981123,
        43980503,
        43981907,
        43981958,
        43980364,
        43980482,
        43981469,
        43980066,
        43980026,
        43980080,
        43982717,
        43982186,
        43980548,
        43979880,
        43980438,
        43980534,
        43981814,
        43982132,
        43980584,
        43983884,
        43980329,
        43982482,
        43988335,
        43981871,
        43980806,
        43984605,
        43981280,
        43990155,
        43979814,
        43984407,
        43977281,
        43980615,
        43982437,
        43982434,
        43982160,
        43981671,
        43982383,
        43984065,
        43981041,
        43981985,
        43980089,
        43982576,
        43988983,
        43989289,
        43982359,
        43980929,
        43984047,
        43980721,
        43979476,
        43983174,
        43982406,
        43979847,
        43981858,
        43981086,
        43980639,
        43980603,
        43979967,
        43979983,
        43980494,
        43980028,
        43980598,
        43982584,
        43980407,
        43982053
      ],
      "score": 225,
      "time": 1747163874,
      "title": "Airbnb is in midlife crisis mode",
      "type": "story",
      "url": "https://www.wired.com/story/airbnb-is-in-midlife-crisis-mode-reinvention-app-services/"
    },
    {
      "by": "jjgreen",
      "descendants": 2,
      "id": 43944640,
      "kids": [
        43985316,
        43983433,
        43979223
      ],
      "score": 67,
      "time": 1746873681,
      "title": "A tool to verify estimates, II: a flexible proof assistant",
      "type": "story",
      "url": "https://terrytao.wordpress.com/2025/05/09/a-tool-to-verify-estimates-ii-a-flexible-proof-assistant/"
    },
    {
      "by": "vincentcheng",
      "descendants": 57,
      "id": 43990012,
      "kids": [
        43990142,
        43990241,
        43990139,
        43990181,
        43990134,
        43990223,
        43990165,
        43990212,
        43990203,
        43990284,
        43990193,
        43990170,
        43990211,
        43990189,
        43990183,
        43990261,
        43990546,
        43990176,
        43990177,
        43990350,
        43990303,
        43990226,
        43990178
      ],
      "score": 59,
      "time": 1747263154,
      "title": "LLMs are making me dumber",
      "type": "story",
      "url": "https://vvvincent.me/llms-are-making-me-dumber/"
    },
    {
      "by": "tough",
      "descendants": 118,
      "id": 43978357,
      "kids": [
        43982331,
        43979245,
        43987102,
        43979926,
        43979241,
        43980249,
        43979609,
        43987797,
        43979365,
        43985148,
        43979622,
        43981022,
        43982382,
        43979402,
        43989743,
        43982936,
        43979332,
        43979480,
        43980664,
        43985541,
        43981088,
        43979367,
        43978964,
        43981953,
        43980145,
        43982017
      ],
      "score": 250,
      "time": 1747174530,
      "title": "Type-constrained code generation with language models",
      "type": "story",
      "url": "https://arxiv.org/abs/2504.09246"
    },
    {
      "by": "nautical_dog",
      "descendants": 0,
      "id": 43985484,
      "score": 6,
      "text": "Hi, first time poster here!<p>Wanted to share a small CLI utility in Rust: doxxer!<p>It is a tool for working with Git repositories, more specifically, extracting and calculating current&#x2F;upcoming semantic versions for your repo&#x27;s tags.<p>It is heavily inspired by the output from &quot;git describe --tags&quot;.<p>Why use anything else then? The output is not fully SemVer compliant and therefore I was modifying it in all my projects separately, which I wanted to avoid. Single binary, single predictable output.<p>It does not currently have pre-built binaries, so you have to install it via cargo, but it&#x27;s in the roadmap!",
      "time": 1747235406,
      "title": "Show HN: Doxxer – CLI tool for dynamic SemVer versioning using tags",
      "type": "story",
      "url": "https://github.com/karlis-vagalis/doxxer"
    },
    {
      "by": "tanelpoder",
      "descendants": 18,
      "id": 43975782,
      "kids": [
        43978046,
        43988504,
        43976580,
        43977833,
        43976767,
        43981018,
        43977591,
        43976351
      ],
      "score": 101,
      "time": 1747159077,
      "title": "OpenTelemetry protocol with Apache Arrow",
      "type": "story",
      "url": "https://opentelemetry.io/blog/2025/otel-arrow-phase-2/"
    },
    {
      "by": "gingerBill",
      "descendants": 204,
      "id": 43970800,
      "kids": [
        43971105,
        43971534,
        43977103,
        43971144,
        43973195,
        43972369,
        43977407,
        43973696,
        43976909,
        43971711,
        43972324,
        43977769,
        43972288,
        43974378,
        43971421,
        43976308,
        43971423
      ],
      "score": 196,
      "time": 1747125311,
      "title": "Odin: A programming language made for me",
      "type": "story",
      "url": "https://zylinski.se/posts/a-programming-language-for-me/"
    },
    {
      "by": "ko_pivot",
      "descendants": 10,
      "id": 43945423,
      "kids": [
        43978331,
        43978814,
        43978010,
        43981463
      ],
      "score": 90,
      "time": 1746883415,
      "title": "Garbage collection of object storage at scale",
      "type": "story",
      "url": "https://www.warpstream.com/blog/taking-out-the-trash-garbage-collection-of-object-storage-at-massive-scale"
    },
    {
      "by": "josecodea",
      "descendants": 275,
      "id": 43980036,
      "kids": [
        43980528,
        43980467,
        43980485,
        43980289,
        43980436,
        43980798,
        43982643,
        43980686,
        43980993,
        43983797,
        43980295,
        43980379,
        43980954,
        43981539,
        43980140,
        43980592,
        43980547,
        43980331,
        43980374,
        43985919,
        43981794,
        43982154,
        43980568,
        43980713,
        43986325,
        43980595,
        43981574,
        43980853,
        43989826,
        43981348,
        43989803,
        43980624,
        43981338,
        43981400,
        43980761,
        43980321,
        43980863,
        43980703,
        43980348,
        43980466,
        43980359,
        43980519,
        43989292,
        43980772,
        43983720,
        43986564,
        43980542,
        43987787,
        43980435,
        43983435,
        43980671,
        43981312,
        43981754,
        43986073,
        43980395,
        43985583,
        43980493,
        43980675,
        43980887,
        43980698,
        43980566,
        43980809,
        43980037,
        43985058,
        43981249,
        43980531,
        43982824,
        43980222,
        43989404,
        43980738,
        43980725,
        43980476,
        43980346,
        43980318,
        43980237,
        43984875,
        43985661
      ],
      "score": 252,
      "time": 1747189053,
      "title": "I failed a take-home assignment from Kagi Search",
      "type": "story",
      "url": "https://bloggeroo.dev/articles/202504031434"
    },
    {
      "by": "adamkf",
      "descendants": 13,
      "id": 43978476,
      "kids": [
        43983914,
        43983355,
        43981982,
        43982617,
        43982169,
        43988578,
        43981289,
        43987424,
        43979929
      ],
      "score": 63,
      "time": 1747175450,
      "title": "Binary Formats Are Better Than JSON in Browsers",
      "type": "story",
      "url": "https://adamfaulkner.github.io/binary_formats_are_better_than_json_in_browsers.html"
    },
    {
      "by": "gnabgib",
      "descendants": 65,
      "id": 43979063,
      "kids": [
        43979590,
        43979768,
        43980067,
        43979510,
        43982236,
        43979928,
        43979653,
        43982164,
        43980064,
        43979789,
        43979876,
        43979505,
        43980081,
        43981032
      ],
      "score": 167,
      "time": 1747179247,
      "title": "Fingers wrinkle the same way every time they’re in the water too long",
      "type": "story",
      "url": "https://www.binghamton.edu/news/story/5547/do-your-fingers-wrinkle-the-same-way-every-time-youre-in-the-water-too-long-new-research-says-yes"
    },
    {
      "by": "gnabgib",
      "descendants": 2,
      "id": 43990431,
      "kids": [
        43990440,
        43990771,
        43990527,
        43990516
      ],
      "score": 28,
      "time": 1747266895,
      "title": "UnitedHealth Group is under criminal investigation for possible Medicare fraud",
      "type": "story",
      "url": "https://www.wsj.com/us-news/unitedhealth-medicare-fraud-investigation-df80667f"
    },
    {
      "by": "linkdd",
      "descendants": 4,
      "id": 43983385,
      "kids": [
        43987019
      ],
      "score": 16,
      "time": 1747223557,
      "title": "FlowG – Distributed Systems without raft (part 2)",
      "type": "story",
      "url": "https://david-delassus.medium.com/distributed-systems-without-raft-part-2-81ca31eae4db"
    },
    {
      "by": "qeden",
      "descendants": 18,
      "id": 43982941,
      "kids": [
        43983645,
        43983595,
        43983701,
        43984704,
        43983771,
        43984060,
        43983562
      ],
      "score": 13,
      "text": "A cli tool written in python for generating commit messages based on the staged changes in a repository using AI models through the OpenRouter API.",
      "time": 1747219473,
      "title": "Show HN: acmsg (automated commit message generator)",
      "type": "story",
      "url": "https://github.com/quinneden/acmsg"
    },
    {
      "by": "jmacd",
      "descendants": 63,
      "id": 43952707,
      "kids": [
        43953053,
        43975460,
        43953168,
        43976562,
        43953027,
        43986257,
        43980052,
        43979232,
        43977991,
        43988420,
        43989334,
        43977475,
        43984808,
        43978454,
        43980836
      ],
      "score": 130,
      "time": 1746958042,
      "title": "Insurers launch cover for losses caused by AI chatbot errors",
      "type": "story",
      "url": "https://www.ft.com/content/1d35759f-f2a9-46c4-904b-4a78ccc027df"
    },
    {
      "by": "rbanffy",
      "descendants": 1,
      "id": 43988055,
      "kids": [
        43990586
      ],
      "score": 14,
      "time": 1747249156,
      "title": "Are the means of computation even seizable?",
      "type": "story",
      "url": "https://pluralistic.net/2025/05/14/pregnable/#checkm8"
    },
    {
      "by": "lennertjansen",
      "descendants": 37,
      "id": 43964201,
      "kids": [
        43970052,
        43969084,
        43968059,
        43965140,
        43974248,
        43964832,
        43965020,
        43965355,
        43969681,
        43968457,
        43965128,
        43966883,
        43964877,
        43964476,
        43965533,
        43965553,
        43970219,
        43966066,
        43965078,
        43964909,
        43965940,
        43964974,
        43968797
      ],
      "score": 165,
      "text": "Hey HN, we&#x27;re Lennert and Rauf. We’re building Airweave (<a href=\"https:&#x2F;&#x2F;github.com&#x2F;airweave-ai&#x2F;airweave\">https:&#x2F;&#x2F;github.com&#x2F;airweave-ai&#x2F;airweave</a>), an open-source tool that lets agents search and retrieve data from any app or database. Here’s a general intro: <a href=\"https:&#x2F;&#x2F;www.youtube.com&#x2F;watch?v=EFI-7SYGQ48\" rel=\"nofollow\">https:&#x2F;&#x2F;www.youtube.com&#x2F;watch?v=EFI-7SYGQ48</a>, and here’s a longer one that shows more real-world use cases, examples of how Airweave is used by Cursor (0:33) and Claude desktop (2:04), etc.: <a href=\"https:&#x2F;&#x2F;youtu.be&#x2F;p2dl-39HwQo\" rel=\"nofollow\">https:&#x2F;&#x2F;youtu.be&#x2F;p2dl-39HwQo</a><p>A couple of months ago we were building agents that interacted with different apps and were frustrated when they struggled to handle vague natural language requests like &quot;resolve that one Linear issue about missing auth configs&quot;, &quot;if you get an email from an unsatisfied customer, reimburse their payment in Stripe&quot;, or &quot;what were the returns for Q1 based on the financials sheet in gdrive?&quot;, only to have the agent inefficiently chain together loads of function calls to find the data or not find it at all and hallucinate.<p>We also noticed that despite the rise of MCP creating more desire for agents to interact with external resources, the majority of agent dev tooling focused on function calling and actions instead of search. We were annoyed by the lack of tooling that enabled agents to semantically search workspace or database contents, so we started building Airweave first as an internal solution. Then we decided to open-source it and pursue it full time after we got positive reactions from coworkers and other agent builders.<p>Airweave connects to productivity tools, databases, or document stores via their APIs and transforms their contents into searchable knowledge bases, accessible through a standardized interface for the agent. The search interface is exposed via REST or MCP. When using MCP, Airweave essentially builds a semantically searchable MCP server on top of the resource. The platform handles the entire data pipeline from connection and extraction to chunking, embedding, and serving. To ensure knowledge is current, it has automated sync capabilities, with configurable schedules and change detection through content hashing.<p>We built it with support for white-labeled multi-tenancy to provide OAuth2-based integration across multiple user accounts while maintaining privacy and security boundaries. We&#x27;re also actively working on permission-awareness (i.e., RBAC on the data) for the platform.<p>So happy to share learnings and get insights from your experiences. looking forward to comments!",
      "time": 1747064061,
      "title": "Show HN: Airweave – Let agents search any app",
      "type": "story",
      "url": "https://github.com/airweave-ai/airweave"
    },
    {
      "by": "toomuchtodo",
      "descendants": 69,
      "id": 43953857,
      "kids": [
        43953863,
        43983809,
        43983823,
        43983237,
        43983927,
        43983612,
        43983786,
        43966348,
        43983238,
        43984090,
        43983520
      ],
      "score": 34,
      "time": 1746971840,
      "title": "Designing Cities for Families",
      "type": "story",
      "url": "https://www.bloomberg.com/features/designing-cities-for-families/"
    },
    {
      "by": "thefilmore",
      "descendants": 451,
      "id": 43969827,
      "kids": [
        43970574,
        43970232,
        43970497,
        43972044,
        43970445,
        43970286,
        43972113,
        43969896,
        43970048,
        43971557,
        43971574,
        43969915,
        43970332,
        43982690,
        43971446,
        43973170,
        43971157,
        43972047,
        43969975,
        43974137,
        43970448,
        43971044,
        43969945,
        43970183,
        43971235,
        43975322,
        43974345,
        43970015,
        43970354,
        43976067,
        43971372,
        43971496,
        43970046,
        43970131,
        43971014,
        43975812,
        43970233,
        43970707,
        43969960,
        43970405
      ],
      "score": 817,
      "time": 1747113790,
      "title": "Mozilla Firefox – Official GitHub repo",
      "type": "story",
      "url": "https://github.com/mozilla-firefox/firefox"
    },
    {
      "by": "mathgenius",
      "descendants": 99,
      "id": 43971791,
      "kids": [
        43972750,
        43973162,
        43972600,
        43973487,
        43973754,
        43973481,
        43977299,
        43973072,
        43978090,
        43972489,
        43972975,
        43973032,
        43978861,
        43973211,
        43978520,
        43980183,
        43980552,
        43978683,
        43973867,
        43983025,
        43972457,
        43978636,
        43977589,
        43973286,
        43973103,
        43978236,
        43972739,
        43981097,
        43980645,
        43972482,
        43979261,
        43978813,
        43972940,
        43973173,
        43972961,
        43973478,
        43973029,
        43974471,
        43973345,
        43973047,
        43972685,
        43977603
      ],
      "score": 106,
      "time": 1747136502,
      "title": "One hundred and one rules of effective living",
      "type": "story",
      "url": "https://mitchhorowitz.substack.com/p/101-rules-of-effective-living"
    },
    {
      "by": "alberto-m",
      "descendants": 199,
      "id": 43974891,
      "kids": [
        43974971,
        43977749,
        43975080,
        43976455,
        43975415,
        43975485,
        43975111,
        43975721,
        43975704,
        43975336,
        43975875,
        43984083,
        43975896,
        43977999,
        43975632,
        43976921,
        43975753,
        43977226,
        43979878,
        43982126,
        43975580,
        43975501,
        43975259,
        43975090
      ],
      "score": 408,
      "text": "See also: <i>ETH Zurich researchers discover new security vulnerability in Intel processors</i> - <a href=\"https:&#x2F;&#x2F;ethz.ch&#x2F;en&#x2F;news-and-events&#x2F;eth-news&#x2F;news&#x2F;2025&#x2F;05&#x2F;eth-zurich-researchers-discover-new-security-vulnerability-in-intel-processors.html\" rel=\"nofollow\">https:&#x2F;&#x2F;ethz.ch&#x2F;en&#x2F;news-and-events&#x2F;eth-news&#x2F;news&#x2F;2025&#x2F;05&#x2F;eth...</a>",
      "time": 1747154691,
      "title": "Branch Privilege Injection: Exploiting branch predictor race conditions",
      "type": "story",
      "url": "https://comsec.ethz.ch/research/microarch/branch-privilege-injection/"
    },
    {
      "by": "gyomu",
      "descendants": 1,
      "id": 43981861,
      "kids": [
        43989120
      ],
      "score": 17,
      "time": 1747207837,
      "title": "Expressive Design: Google's UX Research",
      "type": "story",
      "url": "https://design.google/library/expressive-material-design-google-research"
    },
    {
      "by": "st_goliath",
      "descendants": 257,
      "id": 43971716,
      "kids": [
        43971862,
        43972000,
        43972238,
        43972333,
        43971967,
        43972205,
        43974063,
        43978800,
        43973974,
        43974103,
        43977069,
        43973269,
        43982327,
        43971997,
        43980009,
        43975657,
        43974780,
        43974550,
        43981191,
        43972290,
        43975018,
        43974311,
        43972117,
        43980287,
        43972998,
        43971964,
        43973299
      ],
      "score": 401,
      "time": 1747135729,
      "title": "Multiple security issues in GNU Screen",
      "type": "story",
      "url": "https://www.openwall.com/lists/oss-security/2025/05/12/1"
    },
    {
      "by": "lawik",
      "descendants": 41,
      "id": 43945483,
      "kids": [
        43975454,
        43976483,
        43975973,
        43976142,
        43981928,
        43976445,
        43977551
      ],
      "score": 155,
      "time": 1746883980,
      "title": "Membrane: Media Framework for Elixir",
      "type": "story",
      "url": "https://membrane.stream/"
    },
    {
      "by": "wqtz",
      "descendants": 205,
      "id": 43972535,
      "kids": [
        43973706,
        43973096,
        43975505,
        43978093,
        43973060,
        43975104,
        43975856,
        43974223,
        43973098,
        43982764,
        43982586,
        43974424,
        43982007,
        43973129,
        43974253,
        43981461,
        43978092,
        43973138,
        43973902,
        43982757,
        43974376,
        43973479,
        43973822,
        43973296,
        43976630,
        43974632,
        43974180,
        43975358,
        43979227,
        43974377,
        43979429,
        43974994,
        43973207,
        43973158,
        43982285,
        43973154,
        43974701,
        43973273,
        43975045
      ],
      "score": 329,
      "time": 1747141732,
      "title": "In a high-stress work environment, prioritize relationships",
      "type": "story",
      "url": "https://wqtz.bearblog.dev/high-stress-job-relationships/"
    },
    {
      "by": "Tomte",
      "descendants": 8,
      "id": 43987955,
      "kids": [
        43988814,
        43989648,
        43989039,
        43988603
      ],
      "score": 17,
      "time": 1747248618,
      "title": "UTC is Enough for Everyone, Right? (2018)",
      "type": "story",
      "url": "https://zachholman.com/talk/utc-is-enough-for-everyone-right"
    },
    {
      "by": "taubek",
      "descendants": 128,
      "id": 43945628,
      "kids": [
        43978170,
        43980730,
        43976642,
        43977213,
        43945979,
        43978261,
        43981146,
        43978890,
        43979619,
        43982781,
        43977207,
        43977150,
        43979883,
        43985729,
        43979327,
        43977396,
        43979944,
        43977519
      ],
      "score": 183,
      "time": 1746885113,
      "title": "Failed Soviet Venus lander Kosmos 482 crashes to Earth after 53 years in orbit",
      "type": "story",
      "url": "https://www.space.com/space-exploration/launches-spacecraft/failed-soviet-venus-lander-kosmos-482-crashes-to-earth-after-53-years-in-orbit"
    },
    {
      "by": "amanchanda",
      "descendants": 334,
      "id": 43970837,
      "kids": [
        43971211,
        43971130,
        43973639,
        43972479,
        43977229,
        43971793,
        43972026,
        43971450,
        43973566,
        43974649,
        43971162,
        43985877,
        43973387,
        43989290,
        43971683,
        43973521,
        43973957,
        43971134,
        43973259,
        43985027,
        43971390,
        43971141,
        43971615,
        43971357,
        43971861,
        43970970,
        43971756,
        43972115,
        43971548,
        43972190,
        43971746,
        43971255,
        43971263,
        43971057,
        43971096,
        43971567,
        43979105,
        43971817,
        43974893,
        43972922,
        43974379,
        43971125,
        43971502,
        43985008,
        43974207,
        43972627,
        43975663,
        43972988,
        43973068,
        43982604,
        43971635,
        43973356,
        43976769,
        43977372,
        43973070,
        43973107,
        43971655,
        43971607,
        43972210,
        43974032,
        43980400,
        43972067,
        43972140,
        43972423,
        43971216,
        43971478,
        43971727,
        43973384,
        43971245,
        43972447,
        43975306,
        43971365,
        43973407,
        43971867,
        43971568,
        43974414,
        43974446,
        43976068,
        43975475,
        43971848,
        43972025,
        43978801,
        43976823,
        43972351,
        43972112,
        43981467,
        43972217,
        43971041,
        43974518,
        43974125,
        43971095,
        43975148,
        43974574,
        43972272,
        43971797,
        43971647,
        43971325,
        43971888,
        43973175,
        43972758,
        43973758,
        43970857,
        43970978
      ],
      "score": 522,
      "text": "I am building a B2C AI SaaS with $50&#x2F;month price. How would you go about getting with first 100 users and then the next 500 users.<p>What we are currently doing:\n1) Cold outreach to power users - to convert them into affiliates.\n2) Cold outreach to individuals who have target ICP communities.\n3) SEO for more long term (not for the first 500)",
      "time": 1747125685,
      "title": "Ask HN: How are you acquiring your first hundred users?",
      "type": "story"
    },
    {
      "by": "ingve",
      "descendants": 186,
      "id": 43973721,
      "kids": [
        43975996,
        43974326,
        43980554,
        43975807,
        43974621,
        43976096,
        43974140,
        43975471,
        43979719,
        43986005,
        43979291,
        43982820,
        43977197,
        43975653,
        43976801,
        43984358,
        43988407,
        43977131,
        43974208,
        43982288,
        43974521,
        43974336,
        43984293,
        43976281,
        43978930,
        43978662,
        43977112,
        43974057,
        43974754,
        43979397,
        43976001,
        43977047,
        43974436,
        43978397,
        43976711,
        43979240,
        43976266,
        43979315,
        43975967,
        43975569,
        43975889,
        43975633,
        43974170,
        43979310,
        43976007,
        43974623,
        43980489,
        43974747
      ],
      "score": 336,
      "time": 1747148469,
      "title": "PDF to Text, a challenging problem",
      "type": "story",
      "url": "https://www.marginalia.nu/log/a_119_pdf/"
    },
    {
      "by": "xeonmc",
      "descendants": 10,
      "id": 43972927,
      "kids": [
        43981959,
        43981828,
        43977224,
        43990741,
        43977579,
        43980982,
        43979945,
        43979992
      ],
      "score": 66,
      "time": 1747143858,
      "title": "TheForger's Win32 API Tutorial",
      "type": "story",
      "url": "https://winprog.org/tutorial/"
    }
  ]
}